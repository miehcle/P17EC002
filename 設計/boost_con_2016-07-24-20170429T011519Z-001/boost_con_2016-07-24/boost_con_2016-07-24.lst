

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Sun Jul 24 18:37:26 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	swtext1,local,class=CONST,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001C                     	;# 
    73  001E                     	;# 
    74  001F                     	;# 
    75  008C                     	;# 
    76  008D                     	;# 
    77  0091                     	;# 
    78  0092                     	;# 
    79  0093                     	;# 
    80  0094                     	;# 
    81  0095                     	;# 
    82  0096                     	;# 
    83  0097                     	;# 
    84  0098                     	;# 
    85  0099                     	;# 
    86  009A                     	;# 
    87  009B                     	;# 
    88  009B                     	;# 
    89  009C                     	;# 
    90  009D                     	;# 
    91  009E                     	;# 
    92  010C                     	;# 
    93  010D                     	;# 
    94  0111                     	;# 
    95  0112                     	;# 
    96  0113                     	;# 
    97  0114                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011A                     	;# 
   104  011B                     	;# 
   105  011D                     	;# 
   106  011E                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0191                     	;# 
   110  0191                     	;# 
   111  0192                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0193                     	;# 
   115  0194                     	;# 
   116  0195                     	;# 
   117  0196                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020C                     	;# 
   130  020D                     	;# 
   131  0211                     	;# 
   132  0211                     	;# 
   133  0212                     	;# 
   134  0212                     	;# 
   135  0213                     	;# 
   136  0213                     	;# 
   137  0214                     	;# 
   138  0214                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0215                     	;# 
   142  0216                     	;# 
   143  0216                     	;# 
   144  0217                     	;# 
   145  0217                     	;# 
   146  0219                     	;# 
   147  021A                     	;# 
   148  021B                     	;# 
   149  021C                     	;# 
   150  021D                     	;# 
   151  021E                     	;# 
   152  021F                     	;# 
   153  0291                     	;# 
   154  0291                     	;# 
   155  0292                     	;# 
   156  0293                     	;# 
   157  0294                     	;# 
   158  0295                     	;# 
   159  0295                     	;# 
   160  0296                     	;# 
   161  0298                     	;# 
   162  0298                     	;# 
   163  0299                     	;# 
   164  029A                     	;# 
   165  029B                     	;# 
   166  029C                     	;# 
   167  029C                     	;# 
   168  029D                     	;# 
   169  029E                     	;# 
   170  029E                     	;# 
   171  0311                     	;# 
   172  0311                     	;# 
   173  0312                     	;# 
   174  0313                     	;# 
   175  0318                     	;# 
   176  0318                     	;# 
   177  0319                     	;# 
   178  031A                     	;# 
   179  0394                     	;# 
   180  0395                     	;# 
   181  0396                     	;# 
   182  039A                     	;# 
   183  039C                     	;# 
   184  039D                     	;# 
   185  039E                     	;# 
   186  039F                     	;# 
   187  0415                     	;# 
   188  0416                     	;# 
   189  0417                     	;# 
   190  041C                     	;# 
   191  041D                     	;# 
   192  041E                     	;# 
   193  0FE4                     	;# 
   194  0FE5                     	;# 
   195  0FE6                     	;# 
   196  0FE7                     	;# 
   197  0FE8                     	;# 
   198  0FE9                     	;# 
   199  0FEA                     	;# 
   200  0FEB                     	;# 
   201  0FED                     	;# 
   202  0FEE                     	;# 
   203  0FEF                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  0008                     	;# 
   213  0009                     	;# 
   214  000A                     	;# 
   215  000B                     	;# 
   216  000C                     	;# 
   217  000D                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  001E                     	;# 
   232  001F                     	;# 
   233  008C                     	;# 
   234  008D                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0095                     	;# 
   240  0096                     	;# 
   241  0097                     	;# 
   242  0098                     	;# 
   243  0099                     	;# 
   244  009A                     	;# 
   245  009B                     	;# 
   246  009B                     	;# 
   247  009C                     	;# 
   248  009D                     	;# 
   249  009E                     	;# 
   250  010C                     	;# 
   251  010D                     	;# 
   252  0111                     	;# 
   253  0112                     	;# 
   254  0113                     	;# 
   255  0114                     	;# 
   256  0115                     	;# 
   257  0116                     	;# 
   258  0117                     	;# 
   259  0118                     	;# 
   260  0119                     	;# 
   261  011A                     	;# 
   262  011B                     	;# 
   263  011D                     	;# 
   264  011E                     	;# 
   265  018C                     	;# 
   266  018D                     	;# 
   267  0191                     	;# 
   268  0191                     	;# 
   269  0192                     	;# 
   270  0193                     	;# 
   271  0193                     	;# 
   272  0193                     	;# 
   273  0194                     	;# 
   274  0195                     	;# 
   275  0196                     	;# 
   276  0199                     	;# 
   277  019A                     	;# 
   278  019B                     	;# 
   279  019B                     	;# 
   280  019B                     	;# 
   281  019B                     	;# 
   282  019C                     	;# 
   283  019C                     	;# 
   284  019D                     	;# 
   285  019E                     	;# 
   286  019F                     	;# 
   287  020C                     	;# 
   288  020D                     	;# 
   289  0211                     	;# 
   290  0211                     	;# 
   291  0212                     	;# 
   292  0212                     	;# 
   293  0213                     	;# 
   294  0213                     	;# 
   295  0214                     	;# 
   296  0214                     	;# 
   297  0215                     	;# 
   298  0215                     	;# 
   299  0215                     	;# 
   300  0216                     	;# 
   301  0216                     	;# 
   302  0217                     	;# 
   303  0217                     	;# 
   304  0219                     	;# 
   305  021A                     	;# 
   306  021B                     	;# 
   307  021C                     	;# 
   308  021D                     	;# 
   309  021E                     	;# 
   310  021F                     	;# 
   311  0291                     	;# 
   312  0291                     	;# 
   313  0292                     	;# 
   314  0293                     	;# 
   315  0294                     	;# 
   316  0295                     	;# 
   317  0295                     	;# 
   318  0296                     	;# 
   319  0298                     	;# 
   320  0298                     	;# 
   321  0299                     	;# 
   322  029A                     	;# 
   323  029B                     	;# 
   324  029C                     	;# 
   325  029C                     	;# 
   326  029D                     	;# 
   327  029E                     	;# 
   328  029E                     	;# 
   329  0311                     	;# 
   330  0311                     	;# 
   331  0312                     	;# 
   332  0313                     	;# 
   333  0318                     	;# 
   334  0318                     	;# 
   335  0319                     	;# 
   336  031A                     	;# 
   337  0394                     	;# 
   338  0395                     	;# 
   339  0396                     	;# 
   340  039A                     	;# 
   341  039C                     	;# 
   342  039D                     	;# 
   343  039E                     	;# 
   344  039F                     	;# 
   345  0415                     	;# 
   346  0416                     	;# 
   347  0417                     	;# 
   348  041C                     	;# 
   349  041D                     	;# 
   350  041E                     	;# 
   351  0FE4                     	;# 
   352  0FE5                     	;# 
   353  0FE6                     	;# 
   354  0FE7                     	;# 
   355  0FE8                     	;# 
   356  0FE9                     	;# 
   357  0FEA                     	;# 
   358  0FEB                     	;# 
   359  0FED                     	;# 
   360  0FEE                     	;# 
   361  0FEF                     	;# 
   362  0000                     	;# 
   363  0001                     	;# 
   364  0002                     	;# 
   365  0003                     	;# 
   366  0004                     	;# 
   367  0005                     	;# 
   368  0006                     	;# 
   369  0007                     	;# 
   370  0008                     	;# 
   371  0009                     	;# 
   372  000A                     	;# 
   373  000B                     	;# 
   374  000C                     	;# 
   375  000D                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0013                     	;# 
   379  0014                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  008C                     	;# 
   392  008D                     	;# 
   393  0091                     	;# 
   394  0092                     	;# 
   395  0093                     	;# 
   396  0094                     	;# 
   397  0095                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009B                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  010C                     	;# 
   409  010D                     	;# 
   410  0111                     	;# 
   411  0112                     	;# 
   412  0113                     	;# 
   413  0114                     	;# 
   414  0115                     	;# 
   415  0116                     	;# 
   416  0117                     	;# 
   417  0118                     	;# 
   418  0119                     	;# 
   419  011A                     	;# 
   420  011B                     	;# 
   421  011D                     	;# 
   422  011E                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  0191                     	;# 
   426  0191                     	;# 
   427  0192                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0193                     	;# 
   431  0194                     	;# 
   432  0195                     	;# 
   433  0196                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019C                     	;# 
   441  019C                     	;# 
   442  019D                     	;# 
   443  019E                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  020D                     	;# 
   447  0211                     	;# 
   448  0211                     	;# 
   449  0212                     	;# 
   450  0212                     	;# 
   451  0213                     	;# 
   452  0213                     	;# 
   453  0214                     	;# 
   454  0214                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0215                     	;# 
   458  0216                     	;# 
   459  0216                     	;# 
   460  0217                     	;# 
   461  0217                     	;# 
   462  0219                     	;# 
   463  021A                     	;# 
   464  021B                     	;# 
   465  021C                     	;# 
   466  021D                     	;# 
   467  021E                     	;# 
   468  021F                     	;# 
   469  0291                     	;# 
   470  0291                     	;# 
   471  0292                     	;# 
   472  0293                     	;# 
   473  0294                     	;# 
   474  0295                     	;# 
   475  0295                     	;# 
   476  0296                     	;# 
   477  0298                     	;# 
   478  0298                     	;# 
   479  0299                     	;# 
   480  029A                     	;# 
   481  029B                     	;# 
   482  029C                     	;# 
   483  029C                     	;# 
   484  029D                     	;# 
   485  029E                     	;# 
   486  029E                     	;# 
   487  0311                     	;# 
   488  0311                     	;# 
   489  0312                     	;# 
   490  0313                     	;# 
   491  0318                     	;# 
   492  0318                     	;# 
   493  0319                     	;# 
   494  031A                     	;# 
   495  0394                     	;# 
   496  0395                     	;# 
   497  0396                     	;# 
   498  039A                     	;# 
   499  039C                     	;# 
   500  039D                     	;# 
   501  039E                     	;# 
   502  039F                     	;# 
   503  0415                     	;# 
   504  0416                     	;# 
   505  0417                     	;# 
   506  041C                     	;# 
   507  041D                     	;# 
   508  041E                     	;# 
   509  0FE4                     	;# 
   510  0FE5                     	;# 
   511  0FE6                     	;# 
   512  0FE7                     	;# 
   513  0FE8                     	;# 
   514  0FE9                     	;# 
   515  0FEA                     	;# 
   516  0FEB                     	;# 
   517  0FED                     	;# 
   518  0FEE                     	;# 
   519  0FEF                     	;# 
   520  0000                     	;# 
   521  0001                     	;# 
   522  0002                     	;# 
   523  0003                     	;# 
   524  0004                     	;# 
   525  0005                     	;# 
   526  0006                     	;# 
   527  0007                     	;# 
   528  0008                     	;# 
   529  0009                     	;# 
   530  000A                     	;# 
   531  000B                     	;# 
   532  000C                     	;# 
   533  000D                     	;# 
   534  0011                     	;# 
   535  0012                     	;# 
   536  0013                     	;# 
   537  0014                     	;# 
   538  0015                     	;# 
   539  0016                     	;# 
   540  0016                     	;# 
   541  0017                     	;# 
   542  0018                     	;# 
   543  0019                     	;# 
   544  001A                     	;# 
   545  001B                     	;# 
   546  001C                     	;# 
   547  001E                     	;# 
   548  001F                     	;# 
   549  008C                     	;# 
   550  008D                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0093                     	;# 
   554  0094                     	;# 
   555  0095                     	;# 
   556  0096                     	;# 
   557  0097                     	;# 
   558  0098                     	;# 
   559  0099                     	;# 
   560  009A                     	;# 
   561  009B                     	;# 
   562  009B                     	;# 
   563  009C                     	;# 
   564  009D                     	;# 
   565  009E                     	;# 
   566  010C                     	;# 
   567  010D                     	;# 
   568  0111                     	;# 
   569  0112                     	;# 
   570  0113                     	;# 
   571  0114                     	;# 
   572  0115                     	;# 
   573  0116                     	;# 
   574  0117                     	;# 
   575  0118                     	;# 
   576  0119                     	;# 
   577  011A                     	;# 
   578  011B                     	;# 
   579  011D                     	;# 
   580  011E                     	;# 
   581  018C                     	;# 
   582  018D                     	;# 
   583  0191                     	;# 
   584  0191                     	;# 
   585  0192                     	;# 
   586  0193                     	;# 
   587  0193                     	;# 
   588  0193                     	;# 
   589  0194                     	;# 
   590  0195                     	;# 
   591  0196                     	;# 
   592  0199                     	;# 
   593  019A                     	;# 
   594  019B                     	;# 
   595  019B                     	;# 
   596  019B                     	;# 
   597  019B                     	;# 
   598  019C                     	;# 
   599  019C                     	;# 
   600  019D                     	;# 
   601  019E                     	;# 
   602  019F                     	;# 
   603  020C                     	;# 
   604  020D                     	;# 
   605  0211                     	;# 
   606  0211                     	;# 
   607  0212                     	;# 
   608  0212                     	;# 
   609  0213                     	;# 
   610  0213                     	;# 
   611  0214                     	;# 
   612  0214                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0215                     	;# 
   616  0216                     	;# 
   617  0216                     	;# 
   618  0217                     	;# 
   619  0217                     	;# 
   620  0219                     	;# 
   621  021A                     	;# 
   622  021B                     	;# 
   623  021C                     	;# 
   624  021D                     	;# 
   625  021E                     	;# 
   626  021F                     	;# 
   627  0291                     	;# 
   628  0291                     	;# 
   629  0292                     	;# 
   630  0293                     	;# 
   631  0294                     	;# 
   632  0295                     	;# 
   633  0295                     	;# 
   634  0296                     	;# 
   635  0298                     	;# 
   636  0298                     	;# 
   637  0299                     	;# 
   638  029A                     	;# 
   639  029B                     	;# 
   640  029C                     	;# 
   641  029C                     	;# 
   642  029D                     	;# 
   643  029E                     	;# 
   644  029E                     	;# 
   645  0311                     	;# 
   646  0311                     	;# 
   647  0312                     	;# 
   648  0313                     	;# 
   649  0318                     	;# 
   650  0318                     	;# 
   651  0319                     	;# 
   652  031A                     	;# 
   653  0394                     	;# 
   654  0395                     	;# 
   655  0396                     	;# 
   656  039A                     	;# 
   657  039C                     	;# 
   658  039D                     	;# 
   659  039E                     	;# 
   660  039F                     	;# 
   661  0415                     	;# 
   662  0416                     	;# 
   663  0417                     	;# 
   664  041C                     	;# 
   665  041D                     	;# 
   666  041E                     	;# 
   667  0FE4                     	;# 
   668  0FE5                     	;# 
   669  0FE6                     	;# 
   670  0FE7                     	;# 
   671  0FE8                     	;# 
   672  0FE9                     	;# 
   673  0FEA                     	;# 
   674  0FEB                     	;# 
   675  0FED                     	;# 
   676  0FEE                     	;# 
   677  0FEF                     	;# 
   678  0000                     	;# 
   679  0001                     	;# 
   680  0002                     	;# 
   681  0003                     	;# 
   682  0004                     	;# 
   683  0005                     	;# 
   684  0006                     	;# 
   685  0007                     	;# 
   686  0008                     	;# 
   687  0009                     	;# 
   688  000A                     	;# 
   689  000B                     	;# 
   690  000C                     	;# 
   691  000D                     	;# 
   692  0011                     	;# 
   693  0012                     	;# 
   694  0013                     	;# 
   695  0014                     	;# 
   696  0015                     	;# 
   697  0016                     	;# 
   698  0016                     	;# 
   699  0017                     	;# 
   700  0018                     	;# 
   701  0019                     	;# 
   702  001A                     	;# 
   703  001B                     	;# 
   704  001C                     	;# 
   705  001E                     	;# 
   706  001F                     	;# 
   707  008C                     	;# 
   708  008D                     	;# 
   709  0091                     	;# 
   710  0092                     	;# 
   711  0093                     	;# 
   712  0094                     	;# 
   713  0095                     	;# 
   714  0096                     	;# 
   715  0097                     	;# 
   716  0098                     	;# 
   717  0099                     	;# 
   718  009A                     	;# 
   719  009B                     	;# 
   720  009B                     	;# 
   721  009C                     	;# 
   722  009D                     	;# 
   723  009E                     	;# 
   724  010C                     	;# 
   725  010D                     	;# 
   726  0111                     	;# 
   727  0112                     	;# 
   728  0113                     	;# 
   729  0114                     	;# 
   730  0115                     	;# 
   731  0116                     	;# 
   732  0117                     	;# 
   733  0118                     	;# 
   734  0119                     	;# 
   735  011A                     	;# 
   736  011B                     	;# 
   737  011D                     	;# 
   738  011E                     	;# 
   739  018C                     	;# 
   740  018D                     	;# 
   741  0191                     	;# 
   742  0191                     	;# 
   743  0192                     	;# 
   744  0193                     	;# 
   745  0193                     	;# 
   746  0193                     	;# 
   747  0194                     	;# 
   748  0195                     	;# 
   749  0196                     	;# 
   750  0199                     	;# 
   751  019A                     	;# 
   752  019B                     	;# 
   753  019B                     	;# 
   754  019B                     	;# 
   755  019B                     	;# 
   756  019C                     	;# 
   757  019C                     	;# 
   758  019D                     	;# 
   759  019E                     	;# 
   760  019F                     	;# 
   761  020C                     	;# 
   762  020D                     	;# 
   763  0211                     	;# 
   764  0211                     	;# 
   765  0212                     	;# 
   766  0212                     	;# 
   767  0213                     	;# 
   768  0213                     	;# 
   769  0214                     	;# 
   770  0214                     	;# 
   771  0215                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  0219                     	;# 
   779  021A                     	;# 
   780  021B                     	;# 
   781  021C                     	;# 
   782  021D                     	;# 
   783  021E                     	;# 
   784  021F                     	;# 
   785  0291                     	;# 
   786  0291                     	;# 
   787  0292                     	;# 
   788  0293                     	;# 
   789  0294                     	;# 
   790  0295                     	;# 
   791  0295                     	;# 
   792  0296                     	;# 
   793  0298                     	;# 
   794  0298                     	;# 
   795  0299                     	;# 
   796  029A                     	;# 
   797  029B                     	;# 
   798  029C                     	;# 
   799  029C                     	;# 
   800  029D                     	;# 
   801  029E                     	;# 
   802  029E                     	;# 
   803  0311                     	;# 
   804  0311                     	;# 
   805  0312                     	;# 
   806  0313                     	;# 
   807  0318                     	;# 
   808  0318                     	;# 
   809  0319                     	;# 
   810  031A                     	;# 
   811  0394                     	;# 
   812  0395                     	;# 
   813  0396                     	;# 
   814  039A                     	;# 
   815  039C                     	;# 
   816  039D                     	;# 
   817  039E                     	;# 
   818  039F                     	;# 
   819  0415                     	;# 
   820  0416                     	;# 
   821  0417                     	;# 
   822  041C                     	;# 
   823  041D                     	;# 
   824  041E                     	;# 
   825  0FE4                     	;# 
   826  0FE5                     	;# 
   827  0FE6                     	;# 
   828  0FE7                     	;# 
   829  0FE8                     	;# 
   830  0FE9                     	;# 
   831  0FEA                     	;# 
   832  0FEB                     	;# 
   833  0FED                     	;# 
   834  0FEE                     	;# 
   835  0FEF                     	;# 
   836  0000                     	;# 
   837  0001                     	;# 
   838  0002                     	;# 
   839  0003                     	;# 
   840  0004                     	;# 
   841  0005                     	;# 
   842  0006                     	;# 
   843  0007                     	;# 
   844  0008                     	;# 
   845  0009                     	;# 
   846  000A                     	;# 
   847  000B                     	;# 
   848  000C                     	;# 
   849  000D                     	;# 
   850  0011                     	;# 
   851  0012                     	;# 
   852  0013                     	;# 
   853  0014                     	;# 
   854  0015                     	;# 
   855  0016                     	;# 
   856  0016                     	;# 
   857  0017                     	;# 
   858  0018                     	;# 
   859  0019                     	;# 
   860  001A                     	;# 
   861  001B                     	;# 
   862  001C                     	;# 
   863  001E                     	;# 
   864  001F                     	;# 
   865  008C                     	;# 
   866  008D                     	;# 
   867  0091                     	;# 
   868  0092                     	;# 
   869  0093                     	;# 
   870  0094                     	;# 
   871  0095                     	;# 
   872  0096                     	;# 
   873  0097                     	;# 
   874  0098                     	;# 
   875  0099                     	;# 
   876  009A                     	;# 
   877  009B                     	;# 
   878  009B                     	;# 
   879  009C                     	;# 
   880  009D                     	;# 
   881  009E                     	;# 
   882  010C                     	;# 
   883  010D                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011A                     	;# 
   894  011B                     	;# 
   895  011D                     	;# 
   896  011E                     	;# 
   897  018C                     	;# 
   898  018D                     	;# 
   899  0191                     	;# 
   900  0191                     	;# 
   901  0192                     	;# 
   902  0193                     	;# 
   903  0193                     	;# 
   904  0193                     	;# 
   905  0194                     	;# 
   906  0195                     	;# 
   907  0196                     	;# 
   908  0199                     	;# 
   909  019A                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019D                     	;# 
   917  019E                     	;# 
   918  019F                     	;# 
   919  020C                     	;# 
   920  020D                     	;# 
   921  0211                     	;# 
   922  0211                     	;# 
   923  0212                     	;# 
   924  0212                     	;# 
   925  0213                     	;# 
   926  0213                     	;# 
   927  0214                     	;# 
   928  0214                     	;# 
   929  0215                     	;# 
   930  0215                     	;# 
   931  0215                     	;# 
   932  0216                     	;# 
   933  0216                     	;# 
   934  0217                     	;# 
   935  0217                     	;# 
   936  0219                     	;# 
   937  021A                     	;# 
   938  021B                     	;# 
   939  021C                     	;# 
   940  021D                     	;# 
   941  021E                     	;# 
   942  021F                     	;# 
   943  0291                     	;# 
   944  0291                     	;# 
   945  0292                     	;# 
   946  0293                     	;# 
   947  0294                     	;# 
   948  0295                     	;# 
   949  0295                     	;# 
   950  0296                     	;# 
   951  0298                     	;# 
   952  0298                     	;# 
   953  0299                     	;# 
   954  029A                     	;# 
   955  029B                     	;# 
   956  029C                     	;# 
   957  029C                     	;# 
   958  029D                     	;# 
   959  029E                     	;# 
   960  029E                     	;# 
   961  0311                     	;# 
   962  0311                     	;# 
   963  0312                     	;# 
   964  0313                     	;# 
   965  0318                     	;# 
   966  0318                     	;# 
   967  0319                     	;# 
   968  031A                     	;# 
   969  0394                     	;# 
   970  0395                     	;# 
   971  0396                     	;# 
   972  039A                     	;# 
   973  039C                     	;# 
   974  039D                     	;# 
   975  039E                     	;# 
   976  039F                     	;# 
   977  0415                     	;# 
   978  0416                     	;# 
   979  0417                     	;# 
   980  041C                     	;# 
   981  041D                     	;# 
   982  041E                     	;# 
   983  0FE4                     	;# 
   984  0FE5                     	;# 
   985  0FE6                     	;# 
   986  0FE7                     	;# 
   987  0FE8                     	;# 
   988  0FE9                     	;# 
   989  0FEA                     	;# 
   990  0FEB                     	;# 
   991  0FED                     	;# 
   992  0FEE                     	;# 
   993  0FEF                     	;# 
   994  0000                     	;# 
   995  0001                     	;# 
   996  0002                     	;# 
   997  0003                     	;# 
   998  0004                     	;# 
   999  0005                     	;# 
  1000  0006                     	;# 
  1001  0007                     	;# 
  1002  0008                     	;# 
  1003  0009                     	;# 
  1004  000A                     	;# 
  1005  000B                     	;# 
  1006  000C                     	;# 
  1007  000D                     	;# 
  1008  0011                     	;# 
  1009  0012                     	;# 
  1010  0013                     	;# 
  1011  0014                     	;# 
  1012  0015                     	;# 
  1013  0016                     	;# 
  1014  0016                     	;# 
  1015  0017                     	;# 
  1016  0018                     	;# 
  1017  0019                     	;# 
  1018  001A                     	;# 
  1019  001B                     	;# 
  1020  001C                     	;# 
  1021  001E                     	;# 
  1022  001F                     	;# 
  1023  008C                     	;# 
  1024  008D                     	;# 
  1025  0091                     	;# 
  1026  0092                     	;# 
  1027  0093                     	;# 
  1028  0094                     	;# 
  1029  0095                     	;# 
  1030  0096                     	;# 
  1031  0097                     	;# 
  1032  0098                     	;# 
  1033  0099                     	;# 
  1034  009A                     	;# 
  1035  009B                     	;# 
  1036  009B                     	;# 
  1037  009C                     	;# 
  1038  009D                     	;# 
  1039  009E                     	;# 
  1040  010C                     	;# 
  1041  010D                     	;# 
  1042  0111                     	;# 
  1043  0112                     	;# 
  1044  0113                     	;# 
  1045  0114                     	;# 
  1046  0115                     	;# 
  1047  0116                     	;# 
  1048  0117                     	;# 
  1049  0118                     	;# 
  1050  0119                     	;# 
  1051  011A                     	;# 
  1052  011B                     	;# 
  1053  011D                     	;# 
  1054  011E                     	;# 
  1055  018C                     	;# 
  1056  018D                     	;# 
  1057  0191                     	;# 
  1058  0191                     	;# 
  1059  0192                     	;# 
  1060  0193                     	;# 
  1061  0193                     	;# 
  1062  0193                     	;# 
  1063  0194                     	;# 
  1064  0195                     	;# 
  1065  0196                     	;# 
  1066  0199                     	;# 
  1067  019A                     	;# 
  1068  019B                     	;# 
  1069  019B                     	;# 
  1070  019B                     	;# 
  1071  019B                     	;# 
  1072  019C                     	;# 
  1073  019C                     	;# 
  1074  019D                     	;# 
  1075  019E                     	;# 
  1076  019F                     	;# 
  1077  020C                     	;# 
  1078  020D                     	;# 
  1079  0211                     	;# 
  1080  0211                     	;# 
  1081  0212                     	;# 
  1082  0212                     	;# 
  1083  0213                     	;# 
  1084  0213                     	;# 
  1085  0214                     	;# 
  1086  0214                     	;# 
  1087  0215                     	;# 
  1088  0215                     	;# 
  1089  0215                     	;# 
  1090  0216                     	;# 
  1091  0216                     	;# 
  1092  0217                     	;# 
  1093  0217                     	;# 
  1094  0219                     	;# 
  1095  021A                     	;# 
  1096  021B                     	;# 
  1097  021C                     	;# 
  1098  021D                     	;# 
  1099  021E                     	;# 
  1100  021F                     	;# 
  1101  0291                     	;# 
  1102  0291                     	;# 
  1103  0292                     	;# 
  1104  0293                     	;# 
  1105  0294                     	;# 
  1106  0295                     	;# 
  1107  0295                     	;# 
  1108  0296                     	;# 
  1109  0298                     	;# 
  1110  0298                     	;# 
  1111  0299                     	;# 
  1112  029A                     	;# 
  1113  029B                     	;# 
  1114  029C                     	;# 
  1115  029C                     	;# 
  1116  029D                     	;# 
  1117  029E                     	;# 
  1118  029E                     	;# 
  1119  0311                     	;# 
  1120  0311                     	;# 
  1121  0312                     	;# 
  1122  0313                     	;# 
  1123  0318                     	;# 
  1124  0318                     	;# 
  1125  0319                     	;# 
  1126  031A                     	;# 
  1127  0394                     	;# 
  1128  0395                     	;# 
  1129  0396                     	;# 
  1130  039A                     	;# 
  1131  039C                     	;# 
  1132  039D                     	;# 
  1133  039E                     	;# 
  1134  039F                     	;# 
  1135  0415                     	;# 
  1136  0416                     	;# 
  1137  0417                     	;# 
  1138  041C                     	;# 
  1139  041D                     	;# 
  1140  041E                     	;# 
  1141  0FE4                     	;# 
  1142  0FE5                     	;# 
  1143  0FE6                     	;# 
  1144  0FE7                     	;# 
  1145  0FE8                     	;# 
  1146  0FE9                     	;# 
  1147  0FEA                     	;# 
  1148  0FEB                     	;# 
  1149  0FED                     	;# 
  1150  0FEE                     	;# 
  1151  0FEF                     	;# 
  1152                           
  1153                           	psect	idataCOMMON
  1154  07FF                     __pidataCOMMON:	
  1155                           
  1156                           ;initializer for _rcmode
  1157  07FF  3401               	retlw	1
  1158                           
  1159                           	psect	idataBANK0
  1160  0E9D                     __pidataBANK0:	
  1161                           
  1162                           ;initializer for set_halfbridge_duty@power_dd
  1163  0E9D  34DF               	retlw	223
  1164  0E9E  3401               	retlw	1
  1165  0E9F  3420               	retlw	32
  1166  0EA0  3400               	retlw	0
  1167  000B                     _INTCONbits	set	11
  1168  0018                     _T1CONbits	set	24
  1169  0019                     _T1GCONbits	set	25
  1170  0015                     _TMR0	set	21
  1171  005F                     _GIE	set	95
  1172  005B                     _IOCIE	set	91
  1173  0058                     _IOCIF	set	88
  1174  005E                     _PEIE	set	94
  1175  008D                     _RCIF	set	141
  1176  005D                     _TMR0IE	set	93
  1177  005A                     _TMR0IF	set	90
  1178  0099                     _TMR4IF	set	153
  1179  008C                     _TXIF	set	140
  1180  009D                     _ADCON0bits	set	157
  1181  009E                     _ADCON1bits	set	158
  1182  009C                     _ADRESH	set	156
  1183  009B                     _ADRESL	set	155
  1184  0095                     _OPTION_REGbits	set	149
  1185  0099                     _OSCCONbits	set	153
  1186  0098                     _OSCTUNEbits	set	152
  1187  008C                     _TRISA	set	140
  1188  008C                     _TRISAbits	set	140
  1189  008D                     _TRISB	set	141
  1190  008D                     _TRISBbits	set	141
  1191  04AB                     _PSA	set	1195
  1192  048D                     _RCIE	set	1165
  1193  04AD                     _TMR0CS	set	1197
  1194  0488                     _TMR1IE	set	1160
  1195  0499                     _TMR4IE	set	1177
  1196  0466                     _TRISA6	set	1126
  1197  0467                     _TRISA7	set	1127
  1198  046B                     _TRISB3	set	1131
  1199  046D                     _TRISB5	set	1133
  1200  048C                     _TXIE	set	1164
  1201  011D                     _APFCON0bits	set	285
  1202  011E                     _APFCON1bits	set	286
  1203  010C                     _LATA	set	268
  1204  010D                     _LATB	set	269
  1205  0862                     _LATA2	set	2146
  1206  0863                     _LATA3	set	2147
  1207  018C                     _ANSELA	set	396
  1208  018C                     _ANSELAbits	set	396
  1209  018D                     _ANSELBbits	set	397
  1210  0199                     _RCREG	set	409
  1211  019C                     _SPBRGH	set	412
  1212  019B                     _SPBRGL	set	411
  1213  019A                     _TXREG	set	410
  1214  0CFB                     _BRG16	set	3323
  1215  0CF2                     _BRGH	set	3314
  1216  0CEC                     _CREN	set	3308
  1217  0CF3                     _SENDB	set	3315
  1218  0CEF                     _SPEN	set	3311
  1219  0CF4                     _SYNC	set	3316
  1220  0CF6                     _TX9	set	3318
  1221  0CF5                     _TXEN	set	3317
  1222  0295                     _CCP1ASbits	set	661
  1223  0293                     _CCP1CONbits	set	659
  1224  029C                     _CCP2ASbits	set	668
  1225  029A                     _CCP2CONbits	set	666
  1226  0291                     _CCPR1L	set	657
  1227  0298                     _CCPR2L	set	664
  1228  029E                     _CCPTMRSbits	set	670
  1229  0294                     _PWM1CONbits	set	660
  1230  029B                     _PWM2CONbits	set	667
  1231  0395                     _IOCBN	set	917
  1232  0394                     _IOCBP	set	916
  1233  0416                     _PR4	set	1046
  1234  0417                     _T4CONbits	set	1047
  1235                           
  1236                           	psect	stringtext
  1237  0800                     __pstringtext:	
  1238  0800                     STR_1:	
  1239  0800  340D               	retlw	13
  1240  0801  340A               	retlw	10
  1241  0802  346D               	retlw	109	;'m'
  1242  0803  346F               	retlw	111	;'o'
  1243  0804  3474               	retlw	116	;'t'
  1244  0805  346F               	retlw	111	;'o'
  1245  0806  3472               	retlw	114	;'r'
  1246  0807  345F               	retlw	95	;'_'
  1247  0808  3464               	retlw	100	;'d'
  1248  0809  3472               	retlw	114	;'r'
  1249  080A  3469               	retlw	105	;'i'
  1250  080B  3476               	retlw	118	;'v'
  1251  080C  3465               	retlw	101	;'e'
  1252  080D  3472               	retlw	114	;'r'
  1253  080E  345F               	retlw	95	;'_'
  1254  080F  3474               	retlw	116	;'t'
  1255  0810  3465               	retlw	101	;'e'
  1256  0811  3473               	retlw	115	;'s'
  1257  0812  3474               	retlw	116	;'t'
  1258  0813  345F               	retlw	95	;'_'
  1259  0814  3470               	retlw	112	;'p'
  1260  0815  3472               	retlw	114	;'r'
  1261  0816  346F               	retlw	111	;'o'
  1262  0817  3467               	retlw	103	;'g'
  1263  0818  3472               	retlw	114	;'r'
  1264  0819  3461               	retlw	97	;'a'
  1265  081A  346D               	retlw	109	;'m'
  1266  081B  3420               	retlw	32	;' '
  1267  081C  3456               	retlw	86	;'V'
  1268  081D  3465               	retlw	101	;'e'
  1269  081E  3472               	retlw	114	;'r'
  1270  081F  342E               	retlw	46	;'.'
  1271  0820  3430               	retlw	48	;'0'
  1272  0821  340D               	retlw	13
  1273  0822  340A               	retlw	10
  1274  0823  3400               	retlw	0
  1275  0824                     STR_8:	
  1276  0824  340D               	retlw	13
  1277  0825  340A               	retlw	10
  1278  0826  3454               	retlw	84	;'T'
  1279  0827  3458               	retlw	88	;'X'
  1280  0828  3420               	retlw	32	;' '
  1281  0829  3473               	retlw	115	;'s'
  1282  082A  3470               	retlw	112	;'p'
  1283  082B  3465               	retlw	101	;'e'
  1284  082C  3465               	retlw	101	;'e'
  1285  082D  3464               	retlw	100	;'d'
  1286  082E  3420               	retlw	32	;' '
  1287  082F  346F               	retlw	111	;'o'
  1288  0830  3476               	retlw	118	;'v'
  1289  0831  3465               	retlw	101	;'e'
  1290  0832  3472               	retlw	114	;'r'
  1291  0833  3421               	retlw	33	;'!'
  1292  0834  340D               	retlw	13
  1293  0835  340A               	retlw	10
  1294  0836  3400               	retlw	0
  1295  0837                     STR_3:	
  1296  0837  3420               	retlw	32	;' '
  1297  0838  3400               	retlw	0
  1298  0839                     STR_2:	
  1299  0839  347C               	retlw	124	;'|'
  1300  083A  3400               	retlw	0
  1301  0834                     
  1302                           ; #config settings
  1303  0000                     
  1304                           	psect	cinit
  1305  00C6                     start_initialization:	
  1306  00C6                     __initialization:	
  1307                           
  1308                           ; Clear objects allocated to COMMON
  1309  00C6  01F6               	clrf	__pbssCOMMON& (0+127)
  1310  00C7  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  1311  00C8  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  1312                           
  1313                           ; Clear objects allocated to BANK0
  1314  00C9  3048               	movlw	low __pbssBANK0
  1315  00CA  0084               	movwf	4
  1316  00CB  3000               	movlw	high __pbssBANK0
  1317  00CC  0085               	movwf	5
  1318  00CD  3007               	movlw	7
  1319  00CE  318E  26A6  3180   	fcall	clear_ram0
  1320                           
  1321                           ; Clear objects allocated to BANK1
  1322  00D1  30C0               	movlw	low __pbssBANK1
  1323  00D2  0084               	movwf	4
  1324  00D3  3000               	movlw	high __pbssBANK1
  1325  00D4  0085               	movwf	5
  1326  00D5  301F               	movlw	31
  1327  00D6  318E  26A6  3180   	fcall	clear_ram0
  1328                           
  1329                           ; Clear objects allocated to BANK2
  1330  00D9  3020               	movlw	low __pbssBANK2
  1331  00DA  0084               	movwf	4
  1332  00DB  3001               	movlw	high __pbssBANK2
  1333  00DC  0085               	movwf	5
  1334  00DD  3034               	movlw	52
  1335  00DE  318E  26A6  3180   	fcall	clear_ram0
  1336                           
  1337                           ; Initialize objects allocated to COMMON
  1338  00E1  3187  27FF  3180   	fcall	__pidataCOMMON	;fetch initializer
  1339  00E4  00F9               	movwf	__pdataCOMMON& (0+127)
  1340                           
  1341                           ; Initialize objects allocated to BANK0
  1342  00E5  318E  269D  3180   	fcall	__pidataBANK0	;fetch initializer
  1343  00E8  00CF               	movwf	__pdataBANK0& (0+127)
  1344  00E9  318E  269E  3180   	fcall	__pidataBANK0+1	;fetch initializer
  1345  00EC  00D0               	movwf	(__pdataBANK0+1)& (0+127)
  1346  00ED  318E  269F  3180   	fcall	__pidataBANK0+2	;fetch initializer
  1347  00F0  00D1               	movwf	(__pdataBANK0+2)& (0+127)
  1348  00F1  318E  26A0         	fcall	__pidataBANK0+3	;fetch initializer
  1349  00F3  00D2               	movwf	(__pdataBANK0+3)& (0+127)
  1350  00F4                     end_of_initialization:	
  1351                           ;End of C runtime variable initialization code
  1352                           
  1353  00F4                     __end_of__initialization:	
  1354  00F4  0020               	movlb	0
  1355  00F5  3180  28F7         	ljmp	_main	;jump to C main() function
  1356                           
  1357                           	psect	bssCOMMON
  1358  0076                     __pbssCOMMON:	
  1359  0076                     set_motor_power@power_dd:	
  1360  0076                     	ds	2
  1361  0078                     __ISR@rc_count:	
  1362  0078                     	ds	1
  1363                           
  1364                           	psect	dataCOMMON
  1365  0079                     __pdataCOMMON:	
  1366  0079                     _rcmode:	
  1367  0079                     	ds	1
  1368                           
  1369                           	psect	bssBANK0
  1370  0048                     __pbssBANK0:	
  1371  0048                     __ISR@rc_busy:	
  1372  0048                     	ds	1
  1373  0049                     __ISR@rc_t_count:	
  1374  0049                     	ds	1
  1375  004A                     _busy:	
  1376  004A                     	ds	1
  1377  004B                     _key:	
  1378  004B                     	ds	1
  1379  004C                     _rc_complete:	
  1380  004C                     	ds	1
  1381  004D                     _rc_success:	
  1382  004D                     	ds	1
  1383  004E                     _roop_f:	
  1384  004E                     	ds	1
  1385                           
  1386                           	psect	dataBANK0
  1387  004F                     __pdataBANK0:	
  1388  004F                     set_halfbridge_duty@power_dd:	
  1389  004F                     	ds	4
  1390                           
  1391                           	psect	bssBANK1
  1392  00C0                     __pbssBANK1:	
  1393  00C0                     putdec_UART@F2803:	
  1394  00C0                     	ds	10
  1395  00CA                     putdec_UARTb@F2797:	
  1396  00CA                     	ds	10
  1397  00D4                     _txdata:	
  1398  00D4                     	ds	3
  1399  00D7                     __ISR@comm_error_count:	
  1400  00D7                     	ds	2
  1401  00D9                     __ISR@count:	
  1402  00D9                     	ds	2
  1403  00DB                     _output:	
  1404  00DB                     	ds	2
  1405  00DD                     _rcbuff:	
  1406  00DD                     	ds	2
  1407                           
  1408                           	psect	bssBANK2
  1409  0120                     __pbssBANK2:	
  1410  0120                     _u1txbuff:	
  1411  0120                     	ds	52
  1412                           
  1413                           	psect	clrtext
  1414  0EA6                     clear_ram0:	
  1415                           ;	Called with FSR0 containing the base address, and
  1416                           ;	WREG with the size to clear
  1417                           
  1418  0EA6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1419  0EA7                     clrloop0:	
  1420  0EA7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1421  0EA8  3101               	addfsr 0,1
  1422  0EA9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1423  0EAA  2EA7               	goto	clrloop0	;have we reached the end yet?
  1424  0EAB  3400               	retlw	0	;all done for this memory range, return
  1425                           
  1426                           	psect	cstackBANK1
  1427  00A0                     __pcstackBANK1:	
  1428  00A0                     main@power1_dd:	
  1429                           
  1430                           ; 2 bytes @ 0x0
  1431  00A0                     	ds	2
  1432  00A2                     main@power2_dd:	
  1433                           
  1434                           ; 2 bytes @ 0x2
  1435  00A2                     	ds	2
  1436  00A4                     _main$765:	
  1437                           
  1438                           ; 2 bytes @ 0x4
  1439  00A4                     	ds	2
  1440  00A6                     _main$766:	
  1441                           
  1442                           ; 2 bytes @ 0x6
  1443  00A6                     	ds	2
  1444  00A8                     _main$767:	
  1445                           
  1446                           ; 2 bytes @ 0x8
  1447  00A8                     	ds	2
  1448  00AA                     _main$768:	
  1449                           
  1450                           ; 2 bytes @ 0xA
  1451  00AA                     	ds	2
  1452  00AC                     _main$770:	
  1453                           
  1454                           ; 2 bytes @ 0xC
  1455  00AC                     	ds	2
  1456  00AE                     _main$771:	
  1457                           
  1458                           ; 2 bytes @ 0xE
  1459  00AE                     	ds	2
  1460  00B0                     main@cnt:	
  1461                           
  1462                           ; 2 bytes @ 0x10
  1463  00B0                     	ds	2
  1464  00B2                     main@output_voltage:	
  1465                           
  1466                           ; 2 bytes @ 0x12
  1467  00B2                     	ds	2
  1468  00B4                     main@input_voltage:	
  1469                           
  1470                           ; 2 bytes @ 0x14
  1471  00B4                     	ds	2
  1472  00B6                     main@i:	
  1473                           
  1474                           ; 2 bytes @ 0x16
  1475  00B6                     	ds	2
  1476  00B8                     main@mode:	
  1477                           
  1478                           ; 2 bytes @ 0x18
  1479  00B8                     	ds	2
  1480  00BA                     main@power1:	
  1481                           
  1482                           ; 2 bytes @ 0x1A
  1483  00BA                     	ds	2
  1484  00BC                     main@power2:	
  1485                           
  1486                           ; 2 bytes @ 0x1C
  1487  00BC                     	ds	2
  1488  00BE                     main@boost_duty:	
  1489                           
  1490                           ; 2 bytes @ 0x1E
  1491  00BE                     	ds	2
  1492                           
  1493                           	psect	cstackCOMMON
  1494  0070                     __pcstackCOMMON:	
  1495  0070                     ?_Init:	
  1496  0070                     ?_putc_UART:	
  1497                           ; 0 bytes @ 0x0
  1498                           
  1499  0070                     ?_system_halt:	
  1500                           ; 0 bytes @ 0x0
  1501                           
  1502  0070                     ?_tmr0_Init:	
  1503                           ; 0 bytes @ 0x0
  1504                           
  1505  0070                     ?_UART_Init:	
  1506                           ; 0 bytes @ 0x0
  1507                           
  1508  0070                     ??_roop_manager:	
  1509                           ; 0 bytes @ 0x0
  1510                           
  1511  0070                     ?_set_data_buff:	
  1512                           ; 0 bytes @ 0x0
  1513                           
  1514  0070                     ?_AD_Init:	
  1515                           ; 0 bytes @ 0x0
  1516                           
  1517  0070                     ?_stop_PWM:	
  1518                           ; 0 bytes @ 0x0
  1519                           
  1520  0070                     ?_ECCP1_Init:	
  1521                           ; 0 bytes @ 0x0
  1522                           
  1523  0070                     ?_ECCP2_Init:	
  1524                           ; 0 bytes @ 0x0
  1525                           
  1526  0070                     ?_TMR4_Interrupt_set:	
  1527                           ; 0 bytes @ 0x0
  1528                           
  1529  0070                     ?_eccp_config_param_init:	
  1530                           ; 0 bytes @ 0x0
  1531                           
  1532  0070                     ?_ioc_init:	
  1533                           ; 0 bytes @ 0x0
  1534                           
  1535  0070                     ?__ISR:	
  1536                           ; 0 bytes @ 0x0
  1537                           
  1538  0070                     ?i1_putc_UART:	
  1539                           ; 0 bytes @ 0x0
  1540                           
  1541  0070                     ??i1_putc_UART:	
  1542                           ; 0 bytes @ 0x0
  1543                           
  1544  0070                     ?_roop_manager:	
  1545                           ; 0 bytes @ 0x0
  1546                           
  1547  0070                     ?_main:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     i1putc_UART@data:	
  1551                           ; 2 bytes @ 0x0
  1552                           
  1553                           
  1554                           ; 1 bytes @ 0x0
  1555  0070                     	ds	1
  1556  0071                     ??__ISR:	
  1557                           
  1558                           ; 0 bytes @ 0x1
  1559  0071                     	ds	2
  1560  0073                     __ISR@sum:	
  1561                           
  1562                           ; 1 bytes @ 0x3
  1563  0073                     	ds	1
  1564  0074                     ?_set_PWM_duty:	
  1565  0074                     ??_putc_UART:	
  1566                           ; 0 bytes @ 0x4
  1567                           
  1568  0074                     ??_system_halt:	
  1569                           ; 0 bytes @ 0x4
  1570                           
  1571  0074                     ??_tmr0_Init:	
  1572                           ; 0 bytes @ 0x4
  1573                           
  1574  0074                     ??_UART_Init:	
  1575                           ; 0 bytes @ 0x4
  1576                           
  1577  0074                     ??_AD_Init:	
  1578                           ; 0 bytes @ 0x4
  1579                           
  1580  0074                     ??_TMR4_Interrupt_set:	
  1581                           ; 0 bytes @ 0x4
  1582                           
  1583  0074                     ??_eccp_config_param_init:	
  1584                           ; 0 bytes @ 0x4
  1585                           
  1586  0074                     ??_ioc_init:	
  1587                           ; 0 bytes @ 0x4
  1588                           
  1589  0074                     ??___wmul:	
  1590                           ; 0 bytes @ 0x4
  1591                           
  1592  0074                     ??___awdiv:	
  1593                           ; 0 bytes @ 0x4
  1594                           
  1595  0074                     ??___awmod:	
  1596                           ; 0 bytes @ 0x4
  1597                           
  1598  0074                     ?_Get_AD_data:	
  1599                           ; 0 bytes @ 0x4
  1600                           
  1601  0074                     putc_UART@data:	
  1602                           ; 2 bytes @ 0x4
  1603                           
  1604  0074                     set_PWM_duty@duty:	
  1605                           ; 1 bytes @ 0x4
  1606                           
  1607  0074                     ___wmul@product:	
  1608                           ; 2 bytes @ 0x4
  1609                           
  1610                           
  1611                           ; 2 bytes @ 0x4
  1612  0074                     	ds	1
  1613  0075                     ??_puts_UART:	
  1614  0075                     TMR4_Interrupt_set@ps:	
  1615                           ; 0 bytes @ 0x5
  1616                           
  1617  0075                     eccp_config_param_init@eccp_config:	
  1618                           ; 1 bytes @ 0x5
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x5
  1622  0075                     	ds	1
  1623  0076                     ??_stop_PWM:	
  1624                           
  1625                           	psect	cstackBANK0
  1626  0020                     __pcstackBANK0:	
  1627                           ; 0 bytes @ 0x6
  1628                           
  1629  0020                     ??_set_PWM_duty:	
  1630  0020                     ??_Get_AD_data:	
  1631                           ; 0 bytes @ 0x0
  1632                           
  1633  0020                     ?_puts_UART:	
  1634                           ; 0 bytes @ 0x0
  1635                           
  1636  0020                     ?___wmul:	
  1637                           ; 0 bytes @ 0x0
  1638                           
  1639  0020                     ?___awdiv:	
  1640                           ; 2 bytes @ 0x0
  1641                           
  1642  0020                     ?___awmod:	
  1643                           ; 2 bytes @ 0x0
  1644                           
  1645  0020                     puts_UART@str:	
  1646                           ; 2 bytes @ 0x0
  1647                           
  1648  0020                     ___wmul@multiplier:	
  1649                           ; 2 bytes @ 0x0
  1650                           
  1651  0020                     ___awdiv@divisor:	
  1652                           ; 2 bytes @ 0x0
  1653                           
  1654  0020                     ___awmod@divisor:	
  1655                           ; 2 bytes @ 0x0
  1656                           
  1657                           
  1658                           ; 2 bytes @ 0x0
  1659  0020                     	ds	2
  1660  0022                     puts_UART@txie:	
  1661  0022                     _set_PWM_duty$524:	
  1662                           ; 1 bytes @ 0x2
  1663                           
  1664  0022                     ___wmul@multiplicand:	
  1665                           ; 2 bytes @ 0x2
  1666                           
  1667  0022                     ___awdiv@dividend:	
  1668                           ; 2 bytes @ 0x2
  1669                           
  1670  0022                     ___awmod@dividend:	
  1671                           ; 2 bytes @ 0x2
  1672                           
  1673                           
  1674                           ; 2 bytes @ 0x2
  1675  0022                     	ds	1
  1676  0023                     ??_set_data_buff:	
  1677  0023                     Get_AD_data@chs:	
  1678                           ; 0 bytes @ 0x3
  1679                           
  1680                           
  1681                           ; 1 bytes @ 0x3
  1682  0023                     	ds	1
  1683  0024                     set_data_buff@data:	
  1684  0024                     ___awdiv@counter:	
  1685                           ; 1 bytes @ 0x4
  1686                           
  1687  0024                     ___awmod@counter:	
  1688                           ; 1 bytes @ 0x4
  1689                           
  1690  0024                     Get_AD_data@data:	
  1691                           ; 1 bytes @ 0x4
  1692                           
  1693  0024                     _set_PWM_duty$525:	
  1694                           ; 2 bytes @ 0x4
  1695                           
  1696                           
  1697                           ; 2 bytes @ 0x4
  1698  0024                     	ds	1
  1699  0025                     ?_puts_UARTb:	
  1700  0025                     ___awdiv@sign:	
  1701                           ; 0 bytes @ 0x5
  1702                           
  1703  0025                     ___awmod@sign:	
  1704                           ; 1 bytes @ 0x5
  1705                           
  1706  0025                     puts_UARTb@str:	
  1707                           ; 1 bytes @ 0x5
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x5
  1711  0025                     	ds	1
  1712  0026                     set_PWM_duty@id:	
  1713  0026                     ___awdiv@quotient:	
  1714                           ; 1 bytes @ 0x6
  1715                           
  1716                           
  1717                           ; 2 bytes @ 0x6
  1718  0026                     	ds	1
  1719  0027                     ??_puts_UARTb:	
  1720  0027                     ??_ECCP1_Init:	
  1721                           ; 0 bytes @ 0x7
  1722                           
  1723  0027                     ??_ECCP2_Init:	
  1724                           ; 0 bytes @ 0x7
  1725                           
  1726  0027                     ?_set_halfbridge_duty:	
  1727                           ; 0 bytes @ 0x7
  1728                           
  1729  0027                     set_halfbridge_duty@power:	
  1730                           ; 2 bytes @ 0x7
  1731                           
  1732                           
  1733                           ; 2 bytes @ 0x7
  1734  0027                     	ds	1
  1735  0028                     ?_putdec_UARTb:	
  1736  0028                     ECCP1_Init@eccp_config:	
  1737                           ; 0 bytes @ 0x8
  1738                           
  1739  0028                     ECCP2_Init@eccp_config:	
  1740                           ; 1 bytes @ 0x8
  1741                           
  1742  0028                     putdec_UARTb@dec:	
  1743                           ; 1 bytes @ 0x8
  1744                           
  1745                           
  1746                           ; 2 bytes @ 0x8
  1747  0028                     	ds	1
  1748  0029                     ??_Init:	
  1749  0029                     ??_set_halfbridge_duty:	
  1750                           ; 0 bytes @ 0x9
  1751                           
  1752                           
  1753                           ; 0 bytes @ 0x9
  1754  0029                     	ds	1
  1755  002A                     ??_putdec_UARTb:	
  1756  002A                     Init@eccp_config:	
  1757                           ; 0 bytes @ 0xA
  1758                           
  1759                           
  1760                           ; 3 bytes @ 0xA
  1761  002A                     	ds	1
  1762  002B                     putdec_UARTb@dec_buff:	
  1763                           
  1764                           ; 10 bytes @ 0xB
  1765  002B                     	ds	3
  1766  002E                     _set_halfbridge_duty$127:	
  1767                           
  1768                           ; 2 bytes @ 0xE
  1769  002E                     	ds	2
  1770  0030                     _set_halfbridge_duty$128:	
  1771                           
  1772                           ; 2 bytes @ 0x10
  1773  0030                     	ds	2
  1774  0032                     _set_halfbridge_duty$129:	
  1775                           
  1776                           ; 2 bytes @ 0x12
  1777  0032                     	ds	2
  1778  0034                     _set_halfbridge_duty$130:	
  1779                           
  1780                           ; 2 bytes @ 0x14
  1781  0034                     	ds	1
  1782  0035                     putdec_UARTb@cnt:	
  1783                           
  1784                           ; 2 bytes @ 0x15
  1785  0035                     	ds	1
  1786  0036                     _set_halfbridge_duty$131:	
  1787                           
  1788                           ; 2 bytes @ 0x16
  1789  0036                     	ds	1
  1790  0037                     putdec_UARTb@i:	
  1791                           
  1792                           ; 2 bytes @ 0x17
  1793  0037                     	ds	1
  1794  0038                     _set_halfbridge_duty$132:	
  1795                           
  1796                           ; 2 bytes @ 0x18
  1797  0038                     	ds	2
  1798  003A                     _set_halfbridge_duty$133:	
  1799                           
  1800                           ; 2 bytes @ 0x1A
  1801  003A                     	ds	2
  1802  003C                     _set_halfbridge_duty$134:	
  1803                           
  1804                           ; 2 bytes @ 0x1C
  1805  003C                     	ds	2
  1806  003E                     _set_halfbridge_duty$135:	
  1807                           
  1808                           ; 2 bytes @ 0x1E
  1809  003E                     	ds	2
  1810  0040                     _set_halfbridge_duty$136:	
  1811                           
  1812                           ; 2 bytes @ 0x20
  1813  0040                     	ds	2
  1814  0042                     _set_halfbridge_duty$137:	
  1815                           
  1816                           ; 2 bytes @ 0x22
  1817  0042                     	ds	2
  1818  0044                     set_halfbridge_duty@id:	
  1819                           
  1820                           ; 1 bytes @ 0x24
  1821  0044                     	ds	1
  1822  0045                     ??_main:	
  1823                           
  1824                           ; 0 bytes @ 0x25
  1825  0045                     	ds	3
  1826                           
  1827                           	psect	maintext
  1828  00F7                     __pmaintext:	
  1829 ;;
  1830 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1831 ;;
  1832 ;; *************** function _main *****************
  1833 ;; Defined at:
  1834 ;;		line 90 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\newmain.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;		None
  1837 ;; Auto vars:     Size  Location     Type
  1838 ;;  boost_duty      2   30[BANK1 ] unsigned int 
  1839 ;;  power2          2   28[BANK1 ] int 
  1840 ;;  power1          2   26[BANK1 ] int 
  1841 ;;  mode            2   24[BANK1 ] unsigned int 
  1842 ;;  i               2   22[BANK1 ] unsigned int 
  1843 ;;  input_voltag    2   20[BANK1 ] unsigned int 
  1844 ;;  output_volta    2   18[BANK1 ] unsigned int 
  1845 ;;  cnt             2   16[BANK1 ] int 
  1846 ;;  power2_dd       2    2[BANK1 ] int 
  1847 ;;  power1_dd       2    0[BANK1 ] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  2  333[None  ] int 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : B1F/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1857 ;;      Params:         0       0       0       0       0       0
  1858 ;;      Locals:         0       0      32       0       0       0
  1859 ;;      Temps:          0       3       0       0       0       0
  1860 ;;      Totals:         0       3      32       0       0       0
  1861 ;;Total ram usage:       35 bytes
  1862 ;; Hardware stack levels required when called:    6
  1863 ;; This function calls:
  1864 ;;		_Get_AD_data
  1865 ;;		_Init
  1866 ;;		_putc_UART
  1867 ;;		_putdec_UARTb
  1868 ;;		_puts_UARTb
  1869 ;;		_set_halfbridge_duty
  1870 ;;		_stop_PWM
  1871 ;;		_system_halt
  1872 ;; This function is called by:
  1873 ;;		Startup code after reset
  1874 ;; This function uses a non-reentrant model
  1875 ;;
  1876                           
  1877                           
  1878                           ;psect for function _main
  1879  00F7                     _main:	
  1880                           
  1881                           ;newmain.c: 91: Init();
  1882                           
  1883                           ;incstack = 0
  1884                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1885  00F7  318F  27BF  3180   	fcall	_Init
  1886                           
  1887                           ;newmain.c: 94: int16_t power1 = 1023, power2 = 1023;
  1888  00FA  30FF               	movlw	255
  1889  00FB  0021               	movlb	1	; select bank1
  1890  00FC  00BA               	movwf	main@power1^(0+128)
  1891  00FD  3003               	movlw	3
  1892  00FE  00BB               	movwf	(main@power1^(0+128)+1)
  1893  00FF  30FF               	movlw	255
  1894  0100  00BC               	movwf	main@power2^(0+128)
  1895  0101  3003               	movlw	3
  1896  0102  00BD               	movwf	(main@power2^(0+128)+1)
  1897                           
  1898                           ;newmain.c: 95: int16_t power1_dd = 1023, power2_dd = 1023;
  1899  0103  30FF               	movlw	255
  1900  0104  00A0               	movwf	main@power1_dd^(0+128)
  1901  0105  3003               	movlw	3
  1902  0106  00A1               	movwf	(main@power1_dd^(0+128)+1)
  1903  0107  30FF               	movlw	255
  1904  0108  00A2               	movwf	main@power2_dd^(0+128)
  1905  0109  3003               	movlw	3
  1906  010A  00A3               	movwf	(main@power2_dd^(0+128)+1)
  1907                           
  1908                           ;newmain.c: 96: int16_t cnt = 0;
  1909  010B  01B0               	clrf	main@cnt^(0+128)
  1910  010C  01B1               	clrf	(main@cnt+1)^(0+128)
  1911                           
  1912                           ;newmain.c: 97: enum {NONE, TESTMODE, MODE1, MODE2};
  1913                           ;newmain.c: 99: uint16_t mode = MODE2;
  1914  010D  3003               	movlw	3
  1915  010E  00B8               	movwf	main@mode^(0+128)
  1916  010F  3000               	movlw	0
  1917  0110  00B9               	movwf	(main@mode^(0+128)+1)
  1918                           
  1919                           ;newmain.c: 101: uint16_t boost_duty = 0;
  1920  0111  01BE               	clrf	main@boost_duty^(0+128)
  1921  0112  01BF               	clrf	(main@boost_duty+1)^(0+128)
  1922                           
  1923                           ;newmain.c: 102: uint16_t output_voltage, input_voltage;
  1924                           ;newmain.c: 103: uint16_t i;
  1925                           ;newmain.c: 105: if(mode != MODE2){
  1926  0113  3003               	movlw	3
  1927  0114  0638               	xorwf	main@mode^(0+128),w
  1928  0115  0439               	iorwf	(main@mode+1)^(0+128),w
  1929  0116  1903               	btfsc	3,2
  1930  0117  2920               	goto	l3555
  1931                           
  1932                           ;newmain.c: 106: puts_UARTb("\r\nmotor_driver_test_program Ver.0\r\n");
  1933  0118  3000               	movlw	low (STR_1| (0+32768))
  1934  0119  0020               	movlb	0	; select bank0
  1935  011A  00A5               	movwf	puts_UARTb@str
  1936  011B  3088               	movlw	high (STR_1| (0+32768))
  1937  011C  00A6               	movwf	puts_UARTb@str+1
  1938  011D  318F  2714  3180   	fcall	_puts_UARTb
  1939  0120                     l3555:	
  1940                           ;newmain.c: 107: }
  1941                           ;newmain.c: 111: while(1){
  1942                           
  1943                           
  1944                           ;newmain.c: 113: if(mode == MODE2){
  1945  0120  3003               	movlw	3
  1946  0121  0021               	movlb	1	; select bank1
  1947  0122  0638               	xorwf	main@mode^(0+128),w
  1948  0123  0439               	iorwf	(main@mode+1)^(0+128),w
  1949  0124  1D03               	btfss	3,2
  1950  0125  2986               	goto	l3587
  1951                           
  1952                           ;newmain.c: 114: if(rc_complete){
  1953  0126  0020               	movlb	0	; select bank0
  1954  0127  084C               	movf	_rc_complete,w
  1955  0128  1903               	btfsc	3,2
  1956  0129  2986               	goto	l3587
  1957                           
  1958                           ;newmain.c: 115: boost_duty = ((((((rcbuff[0])) > ((255)) ? ((255)):((rcbuff[0])))) > ((
      +                          0)) ? ((((rcbuff[0])) > ((255)) ? ((255)):((rcbuff[0])))):((0))));
  1959  012A  0021               	movlb	1	; select bank1
  1960  012B  085D               	movf	_rcbuff^(0+128),w
  1961  012C  1D03               	btfss	3,2
  1962  012D  2931               	goto	l3563
  1963  012E  01BE               	clrf	main@boost_duty^(0+128)
  1964  012F  01BF               	clrf	(main@boost_duty+1)^(0+128)
  1965  0130  293C               	goto	l3565
  1966  0131                     l3563:	
  1967  0131  085D               	movf	_rcbuff^(0+128),w
  1968  0132  0020               	movlb	0	; select bank0
  1969  0133  00C5               	movwf	??_main
  1970  0134  01C6               	clrf	??_main+1
  1971  0135  0845               	movf	??_main,w
  1972  0136  0021               	movlb	1	; select bank1
  1973  0137  00BE               	movwf	main@boost_duty^(0+128)
  1974  0138  0020               	movlb	0	; select bank0
  1975  0139  0846               	movf	??_main+1,w
  1976  013A  0021               	movlb	1	; select bank1
  1977  013B  00BF               	movwf	(main@boost_duty+1)^(0+128)
  1978  013C                     l3565:	
  1979                           
  1980                           ;newmain.c: 117: txdata[0] = output_voltage >> 2;
  1981  013C  0833               	movf	(main@output_voltage+1)^(0+128),w
  1982  013D  0020               	movlb	0	; select bank0
  1983  013E  00C6               	movwf	??_main+1
  1984  013F  0021               	movlb	1	; select bank1
  1985  0140  0832               	movf	main@output_voltage^(0+128),w
  1986  0141  0020               	movlb	0	; select bank0
  1987  0142  00C5               	movwf	??_main
  1988  0143  36C6               	lsrf	??_main+1,f
  1989  0144  0CC5               	rrf	??_main,f
  1990  0145  36C6               	lsrf	??_main+1,f
  1991  0146  0CC5               	rrf	??_main,f
  1992  0147  0845               	movf	??_main,w
  1993  0148  00C7               	movwf	??_main+2
  1994  0149  0847               	movf	??_main+2,w
  1995  014A  0021               	movlb	1	; select bank1
  1996  014B  00D4               	movwf	_txdata^(0+128)
  1997                           
  1998                           ;newmain.c: 118: txdata[1] = input_voltage >> 2;
  1999  014C  0835               	movf	(main@input_voltage+1)^(0+128),w
  2000  014D  0020               	movlb	0	; select bank0
  2001  014E  00C6               	movwf	??_main+1
  2002  014F  0021               	movlb	1	; select bank1
  2003  0150  0834               	movf	main@input_voltage^(0+128),w
  2004  0151  0020               	movlb	0	; select bank0
  2005  0152  00C5               	movwf	??_main
  2006  0153  36C6               	lsrf	??_main+1,f
  2007  0154  0CC5               	rrf	??_main,f
  2008  0155  36C6               	lsrf	??_main+1,f
  2009  0156  0CC5               	rrf	??_main,f
  2010  0157  0845               	movf	??_main,w
  2011  0158  00C7               	movwf	??_main+2
  2012  0159  0847               	movf	??_main+2,w
  2013  015A  0021               	movlb	1	; select bank1
  2014  015B  00D5               	movwf	(_txdata^(0+128)+1)
  2015                           
  2016                           ;newmain.c: 121: txdata[2] = txdata[0] + txdata[1];
  2017  015C  0855               	movf	(_txdata^(0+128)+1),w
  2018  015D  0754               	addwf	_txdata^(0+128),w
  2019  015E  0020               	movlb	0	; select bank0
  2020  015F  00C5               	movwf	??_main
  2021  0160  0845               	movf	??_main,w
  2022  0161  0021               	movlb	1	; select bank1
  2023  0162  00D6               	movwf	(_txdata^(0+128)+2)
  2024                           
  2025                           ;newmain.c: 122: for(i = 0; i < 3; i++){
  2026  0163  01B6               	clrf	main@i^(0+128)
  2027  0164  01B7               	clrf	(main@i+1)^(0+128)
  2028  0165  3000               	movlw	0
  2029  0166  0237               	subwf	(main@i+1)^(0+128),w
  2030  0167  3003               	movlw	3
  2031  0168  1903               	skipnz
  2032  0169  0236               	subwf	main@i^(0+128),w
  2033  016A  1803               	btfsc	3,0
  2034  016B  2980               	goto	l3583
  2035  016C                     l3577:	
  2036                           
  2037                           ;newmain.c: 123: putc_UART(txdata[i]);
  2038  016C  0836               	movf	main@i^(0+128),w
  2039  016D  3ED4               	addlw	(low (_txdata| 0))& (0+255)
  2040  016E  0086               	movwf	6
  2041  016F  0187               	clrf	7
  2042  0170  0801               	movf	1,w
  2043  0171  318E  26BF  3180   	fcall	_putc_UART
  2044  0174  3001               	movlw	1
  2045  0175  0021               	movlb	1	; select bank1
  2046  0176  07B6               	addwf	main@i^(0+128),f
  2047  0177  3000               	movlw	0
  2048  0178  3DB7               	addwfc	(main@i+1)^(0+128),f
  2049  0179  3000               	movlw	0
  2050  017A  0237               	subwf	(main@i+1)^(0+128),w
  2051  017B  3003               	movlw	3
  2052  017C  1903               	skipnz
  2053  017D  0236               	subwf	main@i^(0+128),w
  2054  017E  1C03               	skipc
  2055  017F  296C               	goto	l3577
  2056  0180                     l3583:	
  2057                           
  2058                           ;newmain.c: 124: }
  2059                           ;newmain.c: 125: output = ENABLE;
  2060  0180  3001               	movlw	1
  2061  0181  00DB               	movwf	_output^(0+128)
  2062  0182  3000               	movlw	0
  2063  0183  00DC               	movwf	(_output^(0+128)+1)
  2064                           
  2065                           ;newmain.c: 126: rc_complete = 0;
  2066  0184  0020               	movlb	0	; select bank0
  2067  0185  01CC               	clrf	_rc_complete
  2068  0186                     l3587:	
  2069                           ;newmain.c: 128: else{
  2070                           
  2071                           ;newmain.c: 127: }
  2072                           
  2073                           
  2074                           ;newmain.c: 130: }
  2075                           ;newmain.c: 131: }
  2076                           ;newmain.c: 132: if(roop_f){
  2077  0186  0020               	movlb	0	; select bank0
  2078  0187  084E               	movf	_roop_f,w
  2079  0188  1903               	btfsc	3,2
  2080  0189  2920               	goto	l3555
  2081                           
  2082                           ;newmain.c: 133: roop_f = 0;
  2083  018A  01CE               	clrf	_roop_f
  2084                           
  2085                           ;newmain.c: 134: busy = 1;
  2086  018B  01CA               	clrf	_busy
  2087  018C  0ACA               	incf	_busy,f
  2088                           
  2089                           ;newmain.c: 138: output_voltage = Get_AD_data(0);
  2090  018D  3000               	movlw	0
  2091  018E  318F  278F  3180   	fcall	_Get_AD_data
  2092  0191  0875               	movf	?_Get_AD_data+1,w
  2093  0192  0021               	movlb	1	; select bank1
  2094  0193  00B3               	movwf	(main@output_voltage+1)^(0+128)
  2095  0194  0874               	movf	?_Get_AD_data,w
  2096  0195  00B2               	movwf	main@output_voltage^(0+128)
  2097                           
  2098                           ;newmain.c: 139: input_voltage = Get_AD_data(4);
  2099  0196  3004               	movlw	4
  2100  0197  318F  278F  3180   	fcall	_Get_AD_data
  2101  019A  0875               	movf	?_Get_AD_data+1,w
  2102  019B  0021               	movlb	1	; select bank1
  2103  019C  00B5               	movwf	(main@input_voltage+1)^(0+128)
  2104  019D  0874               	movf	?_Get_AD_data,w
  2105  019E  00B4               	movwf	main@input_voltage^(0+128)
  2106                           
  2107                           ;newmain.c: 144: switch(key){
  2108  019F  29DC               	goto	l3625
  2109  01A0                     l3597:	
  2110                           ;newmain.c: 145: case 'u':
  2111                           
  2112                           
  2113                           ;newmain.c: 146: boost_duty += 10;
  2114  01A0  300A               	movlw	10
  2115  01A1  29D1               	goto	L2
  2116  01A2                     l3599:	
  2117                           ;newmain.c: 148: case 'U':
  2118                           
  2119                           ;newmain.c: 147: break;
  2120                           
  2121                           
  2122                           ;newmain.c: 149: boost_duty += 50;
  2123  01A2  3032               	movlw	50
  2124  01A3  29D1               	goto	L2
  2125  01A4                     l3601:	
  2126                           ;newmain.c: 152: case 'd':
  2127                           
  2128                           ;newmain.c: 150: break;
  2129                           
  2130                           
  2131                           ;newmain.c: 153: boost_duty -= 10;
  2132  01A4  300A               	movlw	10
  2133  01A5  29D7               	goto	L4
  2134  01A6                     l3603:	
  2135                           ;newmain.c: 155: case 'D':
  2136                           
  2137                           ;newmain.c: 154: break;
  2138                           
  2139                           
  2140                           ;newmain.c: 156: boost_duty -= 50;
  2141  01A6  3032               	movlw	50
  2142  01A7  29D7               	goto	L4
  2143  01A8                     l353:	
  2144                           ;newmain.c: 163: case 'r':
  2145                           
  2146                           ;newmain.c: 161: break;
  2147                           
  2148                           ;newmain.c: 159: case 'g':
  2149                           
  2150                           ;newmain.c: 157: break;
  2151                           
  2152  01A8  0001               	reset	;# 
  2153                           
  2154                           ;newmain.c: 165: break;
  2155  01A9  2A03               	goto	l3627
  2156  01AA                     l3605:	
  2157                           ;newmain.c: 167: case 'z':
  2158                           
  2159                           
  2160                           ;newmain.c: 168: boost_duty = 0;
  2161  01AA  0021               	movlb	1	; select bank1
  2162  01AB  01BE               	clrf	main@boost_duty^(0+128)
  2163  01AC  01BF               	clrf	(main@boost_duty+1)^(0+128)
  2164                           
  2165                           ;newmain.c: 169: stop_PWM();
  2166  01AD  318E  26D4  3180   	fcall	_stop_PWM
  2167                           
  2168                           ;newmain.c: 170: system_halt();
  2169  01B0  318E  26E2  3180   	fcall	_system_halt
  2170                           
  2171                           ;newmain.c: 171: break;
  2172  01B3  2A03               	goto	l3627
  2173  01B4                     l3611:	
  2174                           ;newmain.c: 173: case 'k':
  2175                           
  2176                           
  2177                           ;newmain.c: 174: boost_duty = 500;
  2178  01B4  30F4               	movlw	244
  2179  01B5  0021               	movlb	1	; select bank1
  2180  01B6  00BE               	movwf	main@boost_duty^(0+128)
  2181  01B7  3001               	movlw	1
  2182  01B8  00BF               	movwf	(main@boost_duty^(0+128)+1)
  2183                           
  2184                           ;newmain.c: 175: mode = TESTMODE;
  2185  01B9  3001               	movlw	1
  2186  01BA  00B8               	movwf	main@mode^(0+128)
  2187  01BB  3000               	movlw	0
  2188  01BC  00B9               	movwf	(main@mode^(0+128)+1)
  2189                           
  2190                           ;newmain.c: 176: output = ENABLE;
  2191  01BD  3001               	movlw	1
  2192  01BE  00DB               	movwf	_output^(0+128)
  2193  01BF  3000               	movlw	0
  2194  01C0  00DC               	movwf	(_output^(0+128)+1)
  2195                           
  2196                           ;newmain.c: 177: break;
  2197  01C1  2A03               	goto	l3627
  2198  01C2                     l3613:	
  2199                           ;newmain.c: 179: case 'a':
  2200                           
  2201                           
  2202                           ;newmain.c: 180: mode = MODE1;
  2203  01C2  3002               	movlw	2
  2204  01C3  0021               	movlb	1	; select bank1
  2205  01C4  00B8               	movwf	main@mode^(0+128)
  2206  01C5  3000               	movlw	0
  2207  01C6  00B9               	movwf	(main@mode^(0+128)+1)
  2208                           
  2209                           ;newmain.c: 181: output = DISABLE;
  2210  01C7  01DB               	clrf	_output^(0+128)
  2211  01C8  01DC               	clrf	(_output+1)^(0+128)
  2212                           
  2213                           ;newmain.c: 182: break;
  2214  01C9  2A03               	goto	l3627
  2215  01CA                     l3617:	
  2216                           ;newmain.c: 184: case 'o':
  2217                           
  2218                           
  2219                           ;newmain.c: 185: output ^= 1;
  2220  01CA  3001               	movlw	1
  2221  01CB  0021               	movlb	1	; select bank1
  2222  01CC  06DB               	xorwf	_output^(0+128),f
  2223  01CD  3000               	movlw	0
  2224  01CE  06DC               	xorwf	(_output+1)^(0+128),f
  2225                           
  2226                           ;newmain.c: 186: break;
  2227  01CF  2A03               	goto	l3627
  2228  01D0                     l3619:	
  2229                           ;newmain.c: 188: case 'i':
  2230                           
  2231                           
  2232                           ;newmain.c: 189: boost_duty += 1;
  2233  01D0  3001               	movlw	1
  2234  01D1                     L2:	
  2235  01D1  0021               	movlb	1	; select bank1
  2236  01D2  07BE               	addwf	main@boost_duty^(0+128),f
  2237  01D3  3000               	movlw	0
  2238  01D4  3DBF               	addwfc	(main@boost_duty+1)^(0+128),f
  2239                           
  2240                           ;newmain.c: 190: break;
  2241  01D5  2A03               	goto	l3627
  2242  01D6                     l3621:	
  2243                           ;newmain.c: 191: case 'p':
  2244                           
  2245                           
  2246                           ;newmain.c: 192: boost_duty -= 1;
  2247  01D6  3001               	movlw	1
  2248  01D7                     L4:	
  2249  01D7  0021               	movlb	1	; select bank1
  2250  01D8  02BE               	subwf	main@boost_duty^(0+128),f
  2251  01D9  3000               	movlw	0
  2252  01DA  3BBF               	subwfb	(main@boost_duty+1)^(0+128),f
  2253                           
  2254                           ;newmain.c: 197: }
  2255                           
  2256                           ;newmain.c: 196: break;
  2257                           
  2258                           ;newmain.c: 195: default:
  2259                           
  2260                           ;newmain.c: 193: break;
  2261  01DB  2A03               	goto	l3627
  2262  01DC                     l3625:	
  2263  01DC  0020               	movlb	0	; select bank0
  2264  01DD  084B               	movf	_key,w
  2265                           
  2266                           ; Switch size 1, requested type "space"
  2267                           ; Number of cases is 12, Range of values is 68 to 122
  2268                           ; switch strategies available:
  2269                           ; Name         Instructions Cycles
  2270                           ; simple_byte           37    19 (average)
  2271                           ; direct_byte          119     9 (fixed)
  2272                           ; jumptable            263     9 (fixed)
  2273                           ;	Chosen strategy is simple_byte
  2274  01DE  3A44               	xorlw	68	; case 68
  2275  01DF  1903               	skipnz
  2276  01E0  29A6               	goto	l3603
  2277  01E1  3A11               	xorlw	17	; case 85
  2278  01E2  1903               	skipnz
  2279  01E3  29A2               	goto	l3599
  2280  01E4  3A34               	xorlw	52	; case 97
  2281  01E5  1903               	skipnz
  2282  01E6  29C2               	goto	l3613
  2283  01E7  3A05               	xorlw	5	; case 100
  2284  01E8  1903               	skipnz
  2285  01E9  29A4               	goto	l3601
  2286  01EA  3A03               	xorlw	3	; case 103
  2287  01EB  1903               	skipnz
  2288  01EC  2A03               	goto	l3627
  2289  01ED  3A0E               	xorlw	14	; case 105
  2290  01EE  1903               	skipnz
  2291  01EF  29D0               	goto	l3619
  2292  01F0  3A02               	xorlw	2	; case 107
  2293  01F1  1903               	skipnz
  2294  01F2  29B4               	goto	l3611
  2295  01F3  3A04               	xorlw	4	; case 111
  2296  01F4  1903               	skipnz
  2297  01F5  29CA               	goto	l3617
  2298  01F6  3A1F               	xorlw	31	; case 112
  2299  01F7  1903               	skipnz
  2300  01F8  29D6               	goto	l3621
  2301  01F9  3A02               	xorlw	2	; case 114
  2302  01FA  1903               	skipnz
  2303  01FB  29A8               	goto	l353
  2304  01FC  3A07               	xorlw	7	; case 117
  2305  01FD  1903               	skipnz
  2306  01FE  29A0               	goto	l3597
  2307  01FF  3A0F               	xorlw	15	; case 122
  2308  0200  1903               	skipnz
  2309  0201  29AA               	goto	l3605
  2310  0202  2A03               	goto	l3627
  2311  0203                     l3627:	
  2312                           
  2313                           ;newmain.c: 198: key = 0;
  2314  0203  0020               	movlb	0	; select bank0
  2315  0204  01CB               	clrf	_key
  2316                           
  2317                           ;newmain.c: 201: mode = MODE2;
  2318  0205  3003               	movlw	3
  2319  0206  0021               	movlb	1	; select bank1
  2320  0207  00B8               	movwf	main@mode^(0+128)
  2321  0208  3000               	movlw	0
  2322  0209  00B9               	movwf	(main@mode^(0+128)+1)
  2323                           
  2324                           ;newmain.c: 208: switch(mode){
  2325  020A  2A1D               	goto	l3639
  2326  020B                     l3631:	
  2327                           ;newmain.c: 217: case MODE1:
  2328                           
  2329                           ;newmain.c: 215: break;
  2330                           
  2331                           ;newmain.c: 213: case TESTMODE:
  2332                           
  2333                           ;newmain.c: 211: break;
  2334                           
  2335                           ;newmain.c: 209: case NONE:
  2336                           
  2337                           
  2338                           ;newmain.c: 220: boost_duty = (int16_t)Get_AD_data(1);
  2339  020B  3001               	movlw	1
  2340  020C  318F  278F  3180   	fcall	_Get_AD_data
  2341  020F  0875               	movf	?_Get_AD_data+1,w
  2342  0210  0021               	movlb	1	; select bank1
  2343  0211  00BF               	movwf	(main@boost_duty+1)^(0+128)
  2344  0212  0874               	movf	?_Get_AD_data,w
  2345  0213  00BE               	movwf	main@boost_duty^(0+128)
  2346                           
  2347                           ;newmain.c: 221: boost_duty /= 4;
  2348  0214  3002               	movlw	2
  2349  0215                     u3335:	
  2350  0215  36BF               	lsrf	(main@boost_duty+1)^(0+128),f
  2351  0216  0CBE               	rrf	main@boost_duty^(0+128),f
  2352  0217  0B89               	decfsz	9,f
  2353  0218  2A15               	goto	u3335
  2354                           
  2355                           ;newmain.c: 225: break;
  2356                           
  2357                           ;newmain.c: 224: case MODE2:
  2358                           
  2359                           ;newmain.c: 222: break;
  2360  0219  2A30               	goto	l3641
  2361  021A                     l3635:	
  2362                           ;newmain.c: 227: default:
  2363                           
  2364                           
  2365                           ;newmain.c: 228: boost_duty = 0;
  2366  021A  01BE               	clrf	main@boost_duty^(0+128)
  2367  021B  01BF               	clrf	(main@boost_duty+1)^(0+128)
  2368                           
  2369                           ;newmain.c: 230: }
  2370                           
  2371                           ;newmain.c: 229: break;
  2372  021C  2A30               	goto	l3641
  2373  021D                     l3639:	
  2374                           
  2375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2376                           ; Switch size 1, requested type "space"
  2377                           ; Number of cases is 1, Range of values is 0 to 0
  2378                           ; switch strategies available:
  2379                           ; Name         Instructions Cycles
  2380                           ; simple_byte            4     3 (average)
  2381                           ; direct_byte            8     6 (fixed)
  2382                           ; jumptable            260     6 (fixed)
  2383                           ;	Chosen strategy is simple_byte
  2384  021D  0839               	movf	(main@mode+1)^(0+128),w
  2385  021E  3A00               	xorlw	0	; case 0
  2386  021F  1903               	skipnz
  2387  0220  2A22               	goto	l3849
  2388  0221  2A1A               	goto	l3635
  2389  0222                     l3849:	
  2390                           
  2391                           ; Switch size 1, requested type "space"
  2392                           ; Number of cases is 4, Range of values is 0 to 3
  2393                           ; switch strategies available:
  2394                           ; Name         Instructions Cycles
  2395                           ; simple_byte           13     7 (average)
  2396                           ; direct_byte           14     6 (fixed)
  2397                           ; jumptable            260     6 (fixed)
  2398                           ;	Chosen strategy is simple_byte
  2399  0222  0838               	movf	main@mode^(0+128),w
  2400  0223  3A00               	xorlw	0	; case 0
  2401  0224  1903               	skipnz
  2402  0225  2A30               	goto	l3641
  2403  0226  3A01               	xorlw	1	; case 1
  2404  0227  1903               	skipnz
  2405  0228  2A30               	goto	l3641
  2406  0229  3A03               	xorlw	3	; case 2
  2407  022A  1903               	skipnz
  2408  022B  2A0B               	goto	l3631
  2409  022C  3A01               	xorlw	1	; case 3
  2410  022D  1903               	skipnz
  2411  022E  2A30               	goto	l3641
  2412  022F  2A1A               	goto	l3635
  2413  0230                     l3641:	
  2414                           
  2415                           ;newmain.c: 234: boost_duty = ((((((boost_duty)) > ((256)) ? ((256)):((boost_duty)))) > 
      +                          ((32)) ? ((((boost_duty)) > ((256)) ? ((256)):((boost_duty)))):((32))));
  2416  0230  3001               	movlw	1
  2417  0231  023F               	subwf	(main@boost_duty+1)^(0+128),w
  2418  0232  3001               	movlw	1
  2419  0233  1903               	skipnz
  2420  0234  023E               	subwf	main@boost_duty^(0+128),w
  2421  0235  1803               	skipnc
  2422  0236  2A3C               	goto	l3645
  2423  0237  083F               	movf	(main@boost_duty+1)^(0+128),w
  2424  0238  00A5               	movwf	(_main$765+1)^(0+128)
  2425  0239  083E               	movf	main@boost_duty^(0+128),w
  2426  023A  00A4               	movwf	_main$765^(0+128)
  2427  023B  2A40               	goto	l375
  2428  023C                     l3645:	
  2429  023C  3000               	movlw	0
  2430  023D  00A4               	movwf	_main$765^(0+128)
  2431  023E  3001               	movlw	1
  2432  023F  00A5               	movwf	(_main$765^(0+128)+1)
  2433  0240                     l375:	
  2434  0240  3000               	movlw	0
  2435  0241  0225               	subwf	(_main$765+1)^(0+128),w
  2436  0242  3021               	movlw	33
  2437  0243  1903               	skipnz
  2438  0244  0224               	subwf	_main$765^(0+128),w
  2439  0245  1803               	skipnc
  2440  0246  2A4C               	goto	l3649
  2441  0247  3020               	movlw	32
  2442  0248  00BE               	movwf	main@boost_duty^(0+128)
  2443  0249  3000               	movlw	0
  2444  024A  00BF               	movwf	(main@boost_duty^(0+128)+1)
  2445  024B  2A60               	goto	l3655
  2446  024C                     l3649:	
  2447  024C  3001               	movlw	1
  2448  024D  023F               	subwf	(main@boost_duty+1)^(0+128),w
  2449  024E  3001               	movlw	1
  2450  024F  1903               	skipnz
  2451  0250  023E               	subwf	main@boost_duty^(0+128),w
  2452  0251  1803               	skipnc
  2453  0252  2A58               	goto	l3653
  2454  0253  083F               	movf	(main@boost_duty+1)^(0+128),w
  2455  0254  00A7               	movwf	(_main$766+1)^(0+128)
  2456  0255  083E               	movf	main@boost_duty^(0+128),w
  2457  0256  00A6               	movwf	_main$766^(0+128)
  2458  0257  2A5C               	goto	l379
  2459  0258                     l3653:	
  2460  0258  3000               	movlw	0
  2461  0259  00A6               	movwf	_main$766^(0+128)
  2462  025A  3001               	movlw	1
  2463  025B  00A7               	movwf	(_main$766^(0+128)+1)
  2464  025C                     l379:	
  2465  025C  0827               	movf	(_main$766+1)^(0+128),w
  2466  025D  00BF               	movwf	(main@boost_duty+1)^(0+128)
  2467  025E  0826               	movf	_main$766^(0+128),w
  2468  025F  00BE               	movwf	main@boost_duty^(0+128)
  2469  0260                     l3655:	
  2470                           
  2471                           ;newmain.c: 250: if(output == ENABLE){
  2472  0260  035B               	decf	_output^(0+128),w
  2473  0261  045C               	iorwf	(_output+1)^(0+128),w
  2474  0262  1D03               	btfss	3,2
  2475  0263  2A83               	goto	l380
  2476                           
  2477                           ;newmain.c: 251: LATA3 = 1;
  2478  0264  0022               	movlb	2	; select bank2
  2479  0265  158C               	bsf	12,3	;volatile
  2480                           
  2481                           ;newmain.c: 253: power1 = 511 - boost_duty;
  2482  0266  0021               	movlb	1	; select bank1
  2483  0267  093E               	comf	main@boost_duty^(0+128),w
  2484  0268  0020               	movlb	0	; select bank0
  2485  0269  00C5               	movwf	??_main
  2486  026A  0021               	movlb	1	; select bank1
  2487  026B  093F               	comf	(main@boost_duty+1)^(0+128),w
  2488  026C  0020               	movlb	0	; select bank0
  2489  026D  00C6               	movwf	??_main+1
  2490  026E  0AC5               	incf	??_main,f
  2491  026F  1903               	skipnz
  2492  0270  0AC6               	incf	??_main+1,f
  2493  0271  0845               	movf	??_main,w
  2494  0272  3EFF               	addlw	255
  2495  0273  0021               	movlb	1	; select bank1
  2496  0274  00BA               	movwf	main@power1^(0+128)
  2497  0275  3001               	movlw	1
  2498  0276  0020               	movlb	0	; select bank0
  2499  0277  3D46               	addwfc	??_main+1,w
  2500  0278  0021               	movlb	1	; select bank1
  2501  0279  00BB               	movwf	(main@power1+1)^(0+128)
  2502                           
  2503                           ;newmain.c: 254: power2 = boost_duty;
  2504  027A  083F               	movf	(main@boost_duty+1)^(0+128),w
  2505  027B  00BD               	movwf	(main@power2+1)^(0+128)
  2506  027C  083E               	movf	main@boost_duty^(0+128),w
  2507  027D  00BC               	movwf	main@power2^(0+128)
  2508                           
  2509                           ;newmain.c: 256: TRISA7 = 0;
  2510  027E  138C               	bcf	12,7	;volatile
  2511                           
  2512                           ;newmain.c: 257: TRISA6 = 0;
  2513  027F  130C               	bcf	12,6	;volatile
  2514                           
  2515                           ;newmain.c: 258: TRISB3 = 0;
  2516  0280  118D               	bcf	13,3	;volatile
  2517                           
  2518                           ;newmain.c: 259: TRISB5 = 0;
  2519  0281  128D               	bcf	13,5	;volatile
  2520                           
  2521                           ;newmain.c: 260: }
  2522  0282  2A8A               	goto	l3671
  2523  0283                     l380:	
  2524                           
  2525                           ;newmain.c: 261: else{
  2526                           ;newmain.c: 262: LATA3 = 0;
  2527  0283  0022               	movlb	2	; select bank2
  2528  0284  118C               	bcf	12,3	;volatile
  2529                           
  2530                           ;newmain.c: 267: TRISA7 = 1;
  2531  0285  0021               	movlb	1	; select bank1
  2532  0286  178C               	bsf	12,7	;volatile
  2533                           
  2534                           ;newmain.c: 268: TRISA6 = 1;
  2535  0287  170C               	bsf	12,6	;volatile
  2536                           
  2537                           ;newmain.c: 269: TRISB3 = 1;
  2538  0288  158D               	bsf	13,3	;volatile
  2539                           
  2540                           ;newmain.c: 270: TRISB5 = 1;
  2541  0289  168D               	bsf	13,5	;volatile
  2542  028A                     l3671:	
  2543                           
  2544                           ;newmain.c: 271: }
  2545                           ;newmain.c: 272: power1 = ((((((power1)) > ((1023)) ? ((1023)):((power1)))) > ((1)) ? ((
      +                          ((power1)) > ((1023)) ? ((1023)):((power1)))):((1))));
  2546  028A  083B               	movf	(main@power1+1)^(0+128),w
  2547  028B  3A80               	xorlw	128
  2548  028C  0020               	movlb	0	; select bank0
  2549  028D  00C5               	movwf	??_main
  2550  028E  3084               	movlw	132
  2551  028F  0245               	subwf	??_main,w
  2552  0290  1D03               	skipz
  2553  0291  2A95               	goto	u3385
  2554  0292  3000               	movlw	0
  2555  0293  0021               	movlb	1	; select bank1
  2556  0294  023A               	subwf	main@power1^(0+128),w
  2557  0295                     u3385:	
  2558  0295  1803               	skipnc
  2559  0296  2A9D               	goto	l3675
  2560  0297  0021               	movlb	1	; select bank1
  2561  0298  083B               	movf	(main@power1+1)^(0+128),w
  2562  0299  00A9               	movwf	(_main$767+1)^(0+128)
  2563  029A  083A               	movf	main@power1^(0+128),w
  2564  029B  00A8               	movwf	_main$767^(0+128)
  2565  029C  2AA2               	goto	l389
  2566  029D                     l3675:	
  2567  029D  30FF               	movlw	255
  2568  029E  0021               	movlb	1	; select bank1
  2569  029F  00A8               	movwf	_main$767^(0+128)
  2570  02A0  3003               	movlw	3
  2571  02A1  00A9               	movwf	(_main$767^(0+128)+1)
  2572  02A2                     l389:	
  2573  02A2  0829               	movf	(_main$767+1)^(0+128),w
  2574  02A3  3A80               	xorlw	128
  2575  02A4  0020               	movlb	0	; select bank0
  2576  02A5  00C5               	movwf	??_main
  2577  02A6  3080               	movlw	128
  2578  02A7  0245               	subwf	??_main,w
  2579  02A8  1D03               	skipz
  2580  02A9  2AAD               	goto	u3395
  2581  02AA  3002               	movlw	2
  2582  02AB  0021               	movlb	1	; select bank1
  2583  02AC  0228               	subwf	_main$767^(0+128),w
  2584  02AD                     u3395:	
  2585  02AD  1803               	skipnc
  2586  02AE  2AB5               	goto	l3679
  2587  02AF  3001               	movlw	1
  2588  02B0  0021               	movlb	1	; select bank1
  2589  02B1  00BA               	movwf	main@power1^(0+128)
  2590  02B2  3000               	movlw	0
  2591  02B3  00BB               	movwf	(main@power1^(0+128)+1)
  2592  02B4  2AD2               	goto	l3685
  2593  02B5                     l3679:	
  2594  02B5  0021               	movlb	1	; select bank1
  2595  02B6  083B               	movf	(main@power1+1)^(0+128),w
  2596  02B7  3A80               	xorlw	128
  2597  02B8  0020               	movlb	0	; select bank0
  2598  02B9  00C5               	movwf	??_main
  2599  02BA  3084               	movlw	132
  2600  02BB  0245               	subwf	??_main,w
  2601  02BC  1D03               	skipz
  2602  02BD  2AC1               	goto	u3405
  2603  02BE  3000               	movlw	0
  2604  02BF  0021               	movlb	1	; select bank1
  2605  02C0  023A               	subwf	main@power1^(0+128),w
  2606  02C1                     u3405:	
  2607  02C1  1803               	skipnc
  2608  02C2  2AC9               	goto	l3683
  2609  02C3  0021               	movlb	1	; select bank1
  2610  02C4  083B               	movf	(main@power1+1)^(0+128),w
  2611  02C5  00AB               	movwf	(_main$768+1)^(0+128)
  2612  02C6  083A               	movf	main@power1^(0+128),w
  2613  02C7  00AA               	movwf	_main$768^(0+128)
  2614  02C8  2ACE               	goto	l393
  2615  02C9                     l3683:	
  2616  02C9  30FF               	movlw	255
  2617  02CA  0021               	movlb	1	; select bank1
  2618  02CB  00AA               	movwf	_main$768^(0+128)
  2619  02CC  3003               	movlw	3
  2620  02CD  00AB               	movwf	(_main$768^(0+128)+1)
  2621  02CE                     l393:	
  2622  02CE  082B               	movf	(_main$768+1)^(0+128),w
  2623  02CF  00BB               	movwf	(main@power1+1)^(0+128)
  2624  02D0  082A               	movf	_main$768^(0+128),w
  2625  02D1  00BA               	movwf	main@power1^(0+128)
  2626  02D2                     l3685:	
  2627                           
  2628                           ;newmain.c: 273: power1_dd = set_halfbridge_duty(1, power1);
  2629  02D2  083B               	movf	(main@power1+1)^(0+128),w
  2630  02D3  0020               	movlb	0	; select bank0
  2631  02D4  00A8               	movwf	set_halfbridge_duty@power+1
  2632  02D5  0021               	movlb	1	; select bank1
  2633  02D6  083A               	movf	main@power1^(0+128),w
  2634  02D7  0020               	movlb	0	; select bank0
  2635  02D8  00A7               	movwf	set_halfbridge_duty@power
  2636  02D9  3001               	movlw	1
  2637  02DA  3183  23D8  3180   	fcall	_set_halfbridge_duty
  2638  02DD  0020               	movlb	0	; select bank0
  2639  02DE  0828               	movf	?_set_halfbridge_duty+1,w
  2640  02DF  0021               	movlb	1	; select bank1
  2641  02E0  00A1               	movwf	(main@power1_dd+1)^(0+128)
  2642  02E1  0020               	movlb	0	; select bank0
  2643  02E2  0827               	movf	?_set_halfbridge_duty,w
  2644  02E3  0021               	movlb	1	; select bank1
  2645  02E4  00A0               	movwf	main@power1_dd^(0+128)
  2646                           
  2647                           ;newmain.c: 275: power2 = ((((((power2)) > ((1023)) ? ((1023)):((power2)))) > ((1)) ? ((
      +                          ((power2)) > ((1023)) ? ((1023)):((power2)))):((1))));
  2648  02E5  083D               	movf	(main@power2+1)^(0+128),w
  2649  02E6  3A80               	xorlw	128
  2650  02E7  0020               	movlb	0	; select bank0
  2651  02E8  00C5               	movwf	??_main
  2652  02E9  3084               	movlw	132
  2653  02EA  0245               	subwf	??_main,w
  2654  02EB  1D03               	skipz
  2655  02EC  2AF0               	goto	u3415
  2656  02ED  3000               	movlw	0
  2657  02EE  0021               	movlb	1	; select bank1
  2658  02EF  023C               	subwf	main@power2^(0+128),w
  2659  02F0                     u3415:	
  2660  02F0  1803               	skipnc
  2661  02F1  2AF8               	goto	l3691
  2662  02F2  0021               	movlb	1	; select bank1
  2663  02F3  083D               	movf	(main@power2+1)^(0+128),w
  2664  02F4  00AD               	movwf	(_main$770+1)^(0+128)
  2665  02F5  083C               	movf	main@power2^(0+128),w
  2666  02F6  00AC               	movwf	_main$770^(0+128)
  2667  02F7  2AFD               	goto	l401
  2668  02F8                     l3691:	
  2669  02F8  30FF               	movlw	255
  2670  02F9  0021               	movlb	1	; select bank1
  2671  02FA  00AC               	movwf	_main$770^(0+128)
  2672  02FB  3003               	movlw	3
  2673  02FC  00AD               	movwf	(_main$770^(0+128)+1)
  2674  02FD                     l401:	
  2675  02FD  082D               	movf	(_main$770+1)^(0+128),w
  2676  02FE  3A80               	xorlw	128
  2677  02FF  0020               	movlb	0	; select bank0
  2678  0300  00C5               	movwf	??_main
  2679  0301  3080               	movlw	128
  2680  0302  0245               	subwf	??_main,w
  2681  0303  1D03               	skipz
  2682  0304  2B08               	goto	u3425
  2683  0305  3002               	movlw	2
  2684  0306  0021               	movlb	1	; select bank1
  2685  0307  022C               	subwf	_main$770^(0+128),w
  2686  0308                     u3425:	
  2687  0308  1803               	skipnc
  2688  0309  2B10               	goto	l3695
  2689  030A  3001               	movlw	1
  2690  030B  0021               	movlb	1	; select bank1
  2691  030C  00BC               	movwf	main@power2^(0+128)
  2692  030D  3000               	movlw	0
  2693  030E  00BD               	movwf	(main@power2^(0+128)+1)
  2694  030F  2B2D               	goto	l3701
  2695  0310                     l3695:	
  2696  0310  0021               	movlb	1	; select bank1
  2697  0311  083D               	movf	(main@power2+1)^(0+128),w
  2698  0312  3A80               	xorlw	128
  2699  0313  0020               	movlb	0	; select bank0
  2700  0314  00C5               	movwf	??_main
  2701  0315  3084               	movlw	132
  2702  0316  0245               	subwf	??_main,w
  2703  0317  1D03               	skipz
  2704  0318  2B1C               	goto	u3435
  2705  0319  3000               	movlw	0
  2706  031A  0021               	movlb	1	; select bank1
  2707  031B  023C               	subwf	main@power2^(0+128),w
  2708  031C                     u3435:	
  2709  031C  1803               	skipnc
  2710  031D  2B24               	goto	l3699
  2711  031E  0021               	movlb	1	; select bank1
  2712  031F  083D               	movf	(main@power2+1)^(0+128),w
  2713  0320  00AF               	movwf	(_main$771+1)^(0+128)
  2714  0321  083C               	movf	main@power2^(0+128),w
  2715  0322  00AE               	movwf	_main$771^(0+128)
  2716  0323  2B29               	goto	l405
  2717  0324                     l3699:	
  2718  0324  30FF               	movlw	255
  2719  0325  0021               	movlb	1	; select bank1
  2720  0326  00AE               	movwf	_main$771^(0+128)
  2721  0327  3003               	movlw	3
  2722  0328  00AF               	movwf	(_main$771^(0+128)+1)
  2723  0329                     l405:	
  2724  0329  082F               	movf	(_main$771+1)^(0+128),w
  2725  032A  00BD               	movwf	(main@power2+1)^(0+128)
  2726  032B  082E               	movf	_main$771^(0+128),w
  2727  032C  00BC               	movwf	main@power2^(0+128)
  2728  032D                     l3701:	
  2729                           
  2730                           ;newmain.c: 277: power2_dd = set_halfbridge_duty(2, power2);
  2731  032D  083D               	movf	(main@power2+1)^(0+128),w
  2732  032E  0020               	movlb	0	; select bank0
  2733  032F  00A8               	movwf	set_halfbridge_duty@power+1
  2734  0330  0021               	movlb	1	; select bank1
  2735  0331  083C               	movf	main@power2^(0+128),w
  2736  0332  0020               	movlb	0	; select bank0
  2737  0333  00A7               	movwf	set_halfbridge_duty@power
  2738  0334  3002               	movlw	2
  2739  0335  3183  23D8  3180   	fcall	_set_halfbridge_duty
  2740  0338  0020               	movlb	0	; select bank0
  2741  0339  0828               	movf	?_set_halfbridge_duty+1,w
  2742  033A  0021               	movlb	1	; select bank1
  2743  033B  00A3               	movwf	(main@power2_dd+1)^(0+128)
  2744  033C  0020               	movlb	0	; select bank0
  2745  033D  0827               	movf	?_set_halfbridge_duty,w
  2746  033E  0021               	movlb	1	; select bank1
  2747  033F  00A2               	movwf	main@power2_dd^(0+128)
  2748                           
  2749                           ;newmain.c: 283: if(mode != MODE2){
  2750  0340  3003               	movlw	3
  2751  0341  0638               	xorwf	main@mode^(0+128),w
  2752  0342  0439               	iorwf	(main@mode+1)^(0+128),w
  2753  0343  1903               	btfsc	3,2
  2754  0344  2BD5               	goto	l3731
  2755                           
  2756                           ;newmain.c: 285: cnt++;
  2757  0345  3001               	movlw	1
  2758  0346  07B0               	addwf	main@cnt^(0+128),f
  2759  0347  3000               	movlw	0
  2760  0348  3DB1               	addwfc	(main@cnt+1)^(0+128),f
  2761                           
  2762                           ;newmain.c: 286: switch(cnt){
  2763  0349  2BC6               	goto	l3729
  2764  034A                     l3707:	
  2765                           ;newmain.c: 289: case 1:
  2766                           
  2767                           ;newmain.c: 288: break;
  2768                           
  2769                           ;newmain.c: 287: case 0:
  2770                           
  2771                           
  2772                           ;newmain.c: 291: putdec_UARTb(power1);
  2773  034A  083B               	movf	(main@power1+1)^(0+128),w
  2774  034B  0020               	movlb	0	; select bank0
  2775  034C  00A9               	movwf	putdec_UARTb@dec+1
  2776  034D  0021               	movlb	1	; select bank1
  2777  034E  083A               	movf	main@power1^(0+128),w
  2778  034F  0020               	movlb	0	; select bank0
  2779  0350  00A8               	movwf	putdec_UARTb@dec
  2780  0351  3186  263A  3180   	fcall	_putdec_UARTb
  2781                           
  2782                           ;newmain.c: 292: break;
  2783  0354  2BD5               	goto	l3731
  2784  0355                     l3709:	
  2785                           ;newmain.c: 293: case 2:
  2786                           
  2787                           
  2788                           ;newmain.c: 294: puts_UARTb("|");
  2789  0355  3039               	movlw	low (STR_2| (0+32768))
  2790  0356  0020               	movlb	0	; select bank0
  2791  0357  00A5               	movwf	puts_UARTb@str
  2792  0358  3088               	movlw	high (STR_2| (0+32768))
  2793  0359  00A6               	movwf	puts_UARTb@str+1
  2794  035A  318F  2714  3180   	fcall	_puts_UARTb
  2795                           
  2796                           ;newmain.c: 295: break;
  2797  035D  2BD5               	goto	l3731
  2798  035E                     l3711:	
  2799                           ;newmain.c: 296: case 3:
  2800                           
  2801                           
  2802                           ;newmain.c: 297: putdec_UARTb(power1_dd);
  2803  035E  0021               	movlb	1	; select bank1
  2804  035F  0821               	movf	(main@power1_dd+1)^(0+128),w
  2805  0360  0020               	movlb	0	; select bank0
  2806  0361  00A9               	movwf	putdec_UARTb@dec+1
  2807  0362  0021               	movlb	1	; select bank1
  2808  0363  0820               	movf	main@power1_dd^(0+128),w
  2809  0364  0020               	movlb	0	; select bank0
  2810  0365  00A8               	movwf	putdec_UARTb@dec
  2811  0366  3186  263A  3180   	fcall	_putdec_UARTb
  2812                           
  2813                           ;newmain.c: 299: break;
  2814  0369  2BD5               	goto	l3731
  2815  036A                     l3713:	
  2816                           ;newmain.c: 300: case 4:
  2817                           
  2818                           
  2819                           ;newmain.c: 301: puts_UARTb(" ");
  2820  036A  3037               	movlw	low (STR_3| (0+32768))
  2821  036B  0020               	movlb	0	; select bank0
  2822  036C  00A5               	movwf	puts_UARTb@str
  2823  036D  3088               	movlw	high (STR_3| (0+32768))
  2824  036E  00A6               	movwf	puts_UARTb@str+1
  2825  036F  318F  2714  3180   	fcall	_puts_UARTb
  2826                           
  2827                           ;newmain.c: 302: putdec_UARTb(power2);
  2828  0372  0021               	movlb	1	; select bank1
  2829  0373  083D               	movf	(main@power2+1)^(0+128),w
  2830  0374  0020               	movlb	0	; select bank0
  2831  0375  00A9               	movwf	putdec_UARTb@dec+1
  2832  0376  0021               	movlb	1	; select bank1
  2833  0377  083C               	movf	main@power2^(0+128),w
  2834  0378  0020               	movlb	0	; select bank0
  2835  0379  00A8               	movwf	putdec_UARTb@dec
  2836  037A  3186  263A  3180   	fcall	_putdec_UARTb
  2837                           
  2838                           ;newmain.c: 307: break;
  2839  037D  2BD5               	goto	l3731
  2840  037E                     l3715:	
  2841                           ;newmain.c: 308: case 5:
  2842                           
  2843                           
  2844                           ;newmain.c: 309: puts_UARTb(" ");
  2845  037E  3037               	movlw	low (STR_3| (0+32768))
  2846  037F  0020               	movlb	0	; select bank0
  2847  0380  00A5               	movwf	puts_UARTb@str
  2848  0381  3088               	movlw	high (STR_3| (0+32768))
  2849  0382  00A6               	movwf	puts_UARTb@str+1
  2850  0383  318F  2714  3180   	fcall	_puts_UARTb
  2851                           
  2852                           ;newmain.c: 310: putdec_UARTb(power2_dd);
  2853  0386  0021               	movlb	1	; select bank1
  2854  0387  0823               	movf	(main@power2_dd+1)^(0+128),w
  2855  0388  0020               	movlb	0	; select bank0
  2856  0389  00A9               	movwf	putdec_UARTb@dec+1
  2857  038A  0021               	movlb	1	; select bank1
  2858  038B  0822               	movf	main@power2_dd^(0+128),w
  2859  038C  0020               	movlb	0	; select bank0
  2860  038D  00A8               	movwf	putdec_UARTb@dec
  2861  038E  3186  263A  3180   	fcall	_putdec_UARTb
  2862                           
  2863                           ;newmain.c: 311: break;
  2864  0391  2BD5               	goto	l3731
  2865  0392                     l3717:	
  2866                           ;newmain.c: 312: case 6:
  2867                           
  2868                           
  2869                           ;newmain.c: 313: puts_UARTb(" ");
  2870  0392  3037               	movlw	low (STR_3| (0+32768))
  2871  0393  0020               	movlb	0	; select bank0
  2872  0394  00A5               	movwf	puts_UARTb@str
  2873  0395  3088               	movlw	high (STR_3| (0+32768))
  2874  0396  00A6               	movwf	puts_UARTb@str+1
  2875  0397  318F  2714  3180   	fcall	_puts_UARTb
  2876                           
  2877                           ;newmain.c: 314: putdec_UARTb(output_voltage);
  2878  039A  0021               	movlb	1	; select bank1
  2879  039B  0833               	movf	(main@output_voltage+1)^(0+128),w
  2880  039C  0020               	movlb	0	; select bank0
  2881  039D  00A9               	movwf	putdec_UARTb@dec+1
  2882  039E  0021               	movlb	1	; select bank1
  2883  039F  0832               	movf	main@output_voltage^(0+128),w
  2884  03A0  0020               	movlb	0	; select bank0
  2885  03A1  00A8               	movwf	putdec_UARTb@dec
  2886  03A2  3186  263A  3180   	fcall	_putdec_UARTb
  2887                           
  2888                           ;newmain.c: 315: break;
  2889  03A5  2BD5               	goto	l3731
  2890  03A6                     l3719:	
  2891                           ;newmain.c: 317: case 7:
  2892                           
  2893                           
  2894                           ;newmain.c: 318: puts_UARTb(" ");
  2895  03A6  3037               	movlw	low (STR_3| (0+32768))
  2896  03A7  0020               	movlb	0	; select bank0
  2897  03A8  00A5               	movwf	puts_UARTb@str
  2898  03A9  3088               	movlw	high (STR_3| (0+32768))
  2899  03AA  00A6               	movwf	puts_UARTb@str+1
  2900  03AB  318F  2714  3180   	fcall	_puts_UARTb
  2901                           
  2902                           ;newmain.c: 319: putdec_UARTb(input_voltage);
  2903  03AE  0021               	movlb	1	; select bank1
  2904  03AF  0835               	movf	(main@input_voltage+1)^(0+128),w
  2905  03B0  0020               	movlb	0	; select bank0
  2906  03B1  00A9               	movwf	putdec_UARTb@dec+1
  2907  03B2  0021               	movlb	1	; select bank1
  2908  03B3  0834               	movf	main@input_voltage^(0+128),w
  2909  03B4  0020               	movlb	0	; select bank0
  2910  03B5  00A8               	movwf	putdec_UARTb@dec
  2911  03B6  3186  263A  3180   	fcall	_putdec_UARTb
  2912                           
  2913                           ;newmain.c: 320: break;
  2914  03B9  2BD5               	goto	l3731
  2915  03BA                     l3721:	
  2916                           ;newmain.c: 322: case 8:
  2917                           
  2918                           
  2919                           ;newmain.c: 323: puts_UARTb("\r\n");
  2920  03BA  3034               	movlw	low ((STR_8+16)| (0+32768))
  2921  03BB  0020               	movlb	0	; select bank0
  2922  03BC  00A5               	movwf	puts_UARTb@str
  2923  03BD  3088               	movlw	high ((STR_8+16)| (0+32768))
  2924  03BE  00A6               	movwf	puts_UARTb@str+1
  2925  03BF  318F  2714  3180   	fcall	_puts_UARTb
  2926                           
  2927                           ;newmain.c: 324: cnt = 0;
  2928  03C2  0021               	movlb	1	; select bank1
  2929  03C3                     l3725:	
  2930                           ;newmain.c: 326: default:
  2931                           
  2932                           ;newmain.c: 325: break;
  2933                           
  2934                           
  2935                           ;newmain.c: 327: cnt = 0;
  2936  03C3  01B0               	clrf	main@cnt^(0+128)
  2937  03C4  01B1               	clrf	(main@cnt+1)^(0+128)
  2938                           
  2939                           ;newmain.c: 329: }
  2940                           
  2941                           ;newmain.c: 328: break;
  2942  03C5  2BD5               	goto	l3731
  2943  03C6                     l3729:	
  2944                           
  2945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2946                           ; Switch size 1, requested type "space"
  2947                           ; Number of cases is 1, Range of values is 0 to 0
  2948                           ; switch strategies available:
  2949                           ; Name         Instructions Cycles
  2950                           ; simple_byte            4     3 (average)
  2951                           ; direct_byte            8     6 (fixed)
  2952                           ; jumptable            260     6 (fixed)
  2953                           ;	Chosen strategy is simple_byte
  2954  03C6  0831               	movf	(main@cnt+1)^(0+128),w
  2955  03C7  3A00               	xorlw	0	; case 0
  2956  03C8  1903               	skipnz
  2957  03C9  2BCB               	goto	l3851
  2958  03CA  2BC3               	goto	l3725
  2959  03CB                     l3851:	
  2960                           
  2961                           ; Switch size 1, requested type "space"
  2962                           ; Number of cases is 9, Range of values is 0 to 8
  2963                           ; switch strategies available:
  2964                           ; Name         Instructions Cycles
  2965                           ; direct_byte           24     6 (fixed)
  2966                           ; simple_byte           28    15 (average)
  2967                           ; jumptable            260     6 (fixed)
  2968                           ;	Chosen strategy is direct_byte
  2969  03CB  0830               	movf	main@cnt^(0+128),w
  2970  03CC  0084               	movwf	4
  2971  03CD  3009               	movlw	9
  2972  03CE  0204               	subwf	4,w
  2973  03CF  1803               	skipnc
  2974  03D0  2BC3               	goto	l3725
  2975  03D1  3188               	movlp	high S3853
  2976  03D2  3504               	lslf	4,w
  2977  03D3  3E3B               	addlw	low S3853
  2978  03D4  0082               	movwf	2
  2979  03D5                     l3731:	
  2980                           
  2981                           ;newmain.c: 330: }
  2982                           ;newmain.c: 331: busy = 0;
  2983  03D5  0020               	movlb	0	; select bank0
  2984  03D6  01CA               	clrf	_busy
  2985  03D7  2920               	goto	l3555
  2986  03D8                     __end_of_main:	
  2987                           ;newmain.c: 332: }
  2988                           ;newmain.c: 334: }
  2989                           ;newmain.c: 336: return (0);
  2990                           ;	Return value of _main is never used
  2991                           
  2992                           
  2993                           	psect	swtext1
  2994  083B                     __pswtext1:	
  2995  083B                     S3853:	
  2996  083B  3183  2BD5         	ljmp	l3731
  2997  083D  3183  2B4A         	ljmp	l3707
  2998  083F  3183  2B55         	ljmp	l3709
  2999  0841  3183  2B5E         	ljmp	l3711
  3000  0843  3183  2B6A         	ljmp	l3713
  3001  0845  3183  2B7E         	ljmp	l3715
  3002  0847  3183  2B92         	ljmp	l3717
  3003  0849  3183  2BA6         	ljmp	l3719
  3004  084B  3183  2BBA         	ljmp	l3721
  3005                           
  3006                           	psect	text1
  3007  0EE2                     __ptext1:	
  3008 ;; *************** function _system_halt *****************
  3009 ;; Defined at:
  3010 ;;		line 486 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\newmain.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;		None
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;		None
  3015 ;; Return value:  Size  Location     Type
  3016 ;;		None               void
  3017 ;; Registers used:
  3018 ;;		wreg, status,2, status,0, pclath, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3024 ;;      Params:         0       0       0       0       0       0
  3025 ;;      Locals:         0       0       0       0       0       0
  3026 ;;      Temps:          0       0       0       0       0       0
  3027 ;;      Totals:         0       0       0       0       0       0
  3028 ;;Total ram usage:        0 bytes
  3029 ;; Hardware stack levels used:    1
  3030 ;; Hardware stack levels required when called:    3
  3031 ;; This function calls:
  3032 ;;		_ioc_init
  3033 ;; This function is called by:
  3034 ;;		_main
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           
  3039                           ;psect for function _system_halt
  3040  0EE2                     _system_halt:	
  3041                           
  3042                           ;newmain.c: 487: LATA3 = 0;
  3043                           
  3044                           ;incstack = 0
  3045                           ; Regs used in _system_halt: [wreg+status,2+status,0+pclath+cstack]
  3046  0EE2  0022               	movlb	2	; select bank2
  3047  0EE3  118C               	bcf	12,3	;volatile
  3048                           
  3049                           ;newmain.c: 488: TRISA = 0xff;
  3050  0EE4  30FF               	movlw	255
  3051  0EE5  0021               	movlb	1	; select bank1
  3052  0EE6  008C               	movwf	12	;volatile
  3053                           
  3054                           ;newmain.c: 489: TRISB = 0xff;
  3055  0EE7  30FF               	movlw	255
  3056  0EE8  008D               	movwf	13	;volatile
  3057                           
  3058                           ;newmain.c: 490: ioc_init();
  3059  0EE9  318E  26A1         	fcall	_ioc_init
  3060                           
  3061                           ;newmain.c: 491: INTCONbits.IOCIE = 1;
  3062  0EEB  158B               	bsf	11,3	;volatile
  3063  0EEC  0063               	sleep	;# 
  3064                           
  3065                           ;newmain.c: 493: INTCONbits.IOCIE = 0;
  3066  0EED  118B               	bcf	11,3	;volatile
  3067  0EEE  0001               	reset	;# 
  3068  0EEF  0008               	return
  3069  0EF0                     __end_of_system_halt:	
  3070                           
  3071                           	psect	text2
  3072  0EA1                     __ptext2:	
  3073 ;; *************** function _ioc_init *****************
  3074 ;; Defined at:
  3075 ;;		line 10 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ioc.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;		None               void
  3082 ;; Registers used:
  3083 ;;		wreg, status,2
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3089 ;;      Params:         0       0       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0
  3092 ;;      Totals:         0       0       0       0       0       0
  3093 ;;Total ram usage:        0 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_system_halt
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _ioc_init
  3105  0EA1                     _ioc_init:	
  3106                           
  3107                           ;ioc.c: 12: IOCBP = 0b00000000;
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _ioc_init: [wreg+status,2]
  3111  0EA1  0027               	movlb	7	; select bank7
  3112  0EA2  0194               	clrf	20	;volatile
  3113                           
  3114                           ;ioc.c: 13: IOCBN = 0b00000010;
  3115  0EA3  3002               	movlw	2
  3116  0EA4  0095               	movwf	21	;volatile
  3117  0EA5  0008               	return
  3118  0EA6                     __end_of_ioc_init:	
  3119                           
  3120                           	psect	text3
  3121  0ED4                     __ptext3:	
  3122 ;; *************** function _stop_PWM *****************
  3123 ;; Defined at:
  3124 ;;		line 28 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\control_h_b
      +ridge.c"
  3125 ;; Parameters:    Size  Location     Type
  3126 ;;		None
  3127 ;; Auto vars:     Size  Location     Type
  3128 ;;		None
  3129 ;; Return value:  Size  Location     Type
  3130 ;;		None               void
  3131 ;; Registers used:
  3132 ;;		wreg, status,2, status,0, pclath, cstack
  3133 ;; Tracked objects:
  3134 ;;		On entry : 0/0
  3135 ;;		On exit  : 0/0
  3136 ;;		Unchanged: 0/0
  3137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3138 ;;      Params:         0       0       0       0       0       0
  3139 ;;      Locals:         0       0       0       0       0       0
  3140 ;;      Temps:          0       0       0       0       0       0
  3141 ;;      Totals:         0       0       0       0       0       0
  3142 ;;Total ram usage:        0 bytes
  3143 ;; Hardware stack levels used:    1
  3144 ;; Hardware stack levels required when called:    3
  3145 ;; This function calls:
  3146 ;;		_set_PWM_duty
  3147 ;; This function is called by:
  3148 ;;		_main
  3149 ;; This function uses a non-reentrant model
  3150 ;;
  3151                           
  3152                           
  3153                           ;psect for function _stop_PWM
  3154  0ED4                     _stop_PWM:	
  3155                           
  3156                           ;control_h_bridge.c: 29: set_PWM_duty(1, 0);
  3157                           
  3158                           ;incstack = 0
  3159                           ; Regs used in _stop_PWM: [wreg+status,2+status,0+pclath+cstack]
  3160  0ED4  3000               	movlw	0
  3161  0ED5  00F4               	movwf	set_PWM_duty@duty
  3162  0ED6  00F5               	movwf	set_PWM_duty@duty+1
  3163  0ED7  3001               	movlw	1
  3164  0ED8  3185  2596  318E   	fcall	_set_PWM_duty
  3165                           
  3166                           ;control_h_bridge.c: 30: set_PWM_duty(2, 0);
  3167  0EDB  3000               	movlw	0
  3168  0EDC  00F4               	movwf	set_PWM_duty@duty
  3169  0EDD  00F5               	movwf	set_PWM_duty@duty+1
  3170  0EDE  3002               	movlw	2
  3171  0EDF  3185  2596         	fcall	_set_PWM_duty
  3172  0EE1  0008               	return
  3173  0EE2                     __end_of_stop_PWM:	
  3174                           
  3175                           	psect	text4
  3176  03D8                     __ptext4:	
  3177 ;; *************** function _set_halfbridge_duty *****************
  3178 ;; Defined at:
  3179 ;;		line 9 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\boost_con.c"
  3180 ;; Parameters:    Size  Location     Type
  3181 ;;  id              1    wreg     unsigned char 
  3182 ;;  power           2    7[BANK0 ] int 
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  id              1   36[BANK0 ] unsigned char 
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  2    7[BANK0 ] int 
  3187 ;; Registers used:
  3188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3194 ;;      Params:         0       2       0       0       0       0
  3195 ;;      Locals:         0      23       0       0       0       0
  3196 ;;      Temps:          0       5       0       0       0       0
  3197 ;;      Totals:         0      30       0       0       0       0
  3198 ;;Total ram usage:       30 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    3
  3201 ;; This function calls:
  3202 ;;		_set_PWM_duty
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _set_halfbridge_duty
  3210  03D8                     _set_halfbridge_duty:	
  3211                           
  3212                           ;incstack = 0
  3213                           ; Regs used in _set_halfbridge_duty: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3214                           ;set_halfbridge_duty@id stored from wreg
  3215  03D8  0020               	movlb	0	; select bank0
  3216  03D9  00C4               	movwf	set_halfbridge_duty@id
  3217                           
  3218                           ;boost_con.c: 10: static int16_t power_dd[2] = {479, 32};
  3219                           ;boost_con.c: 11: power = ((((((power)) > ((1023)) ? ((1023)):((power)))) > ((0)) ? ((((
      +                          power)) > ((1023)) ? ((1023)):((power)))):((0))));
  3220  03DA  0828               	movf	set_halfbridge_duty@power+1,w
  3221  03DB  3A80               	xorlw	128
  3222  03DC  00A9               	movwf	??_set_halfbridge_duty
  3223  03DD  3084               	movlw	132
  3224  03DE  0229               	subwf	??_set_halfbridge_duty,w
  3225  03DF  1D03               	skipz
  3226  03E0  2BE3               	goto	u2925
  3227  03E1  3000               	movlw	0
  3228  03E2  0227               	subwf	set_halfbridge_duty@power,w
  3229  03E3                     u2925:	
  3230  03E3  1803               	skipnc
  3231  03E4  2BEB               	goto	l3299
  3232  03E5  0020               	movlb	0	; select bank0
  3233  03E6  0828               	movf	set_halfbridge_duty@power+1,w
  3234  03E7  00AF               	movwf	_set_halfbridge_duty$127+1
  3235  03E8  0827               	movf	set_halfbridge_duty@power,w
  3236  03E9  00AE               	movwf	_set_halfbridge_duty$127
  3237  03EA  2BF0               	goto	l33
  3238  03EB                     l3299:	
  3239  03EB  30FF               	movlw	255
  3240  03EC  0020               	movlb	0	; select bank0
  3241  03ED  00AE               	movwf	_set_halfbridge_duty$127
  3242  03EE  3003               	movlw	3
  3243  03EF  00AF               	movwf	_set_halfbridge_duty$127+1
  3244  03F0                     l33:	
  3245  03F0  082F               	movf	_set_halfbridge_duty$127+1,w
  3246  03F1  3A80               	xorlw	128
  3247  03F2  00A9               	movwf	??_set_halfbridge_duty
  3248  03F3  3080               	movlw	128
  3249  03F4  0229               	subwf	??_set_halfbridge_duty,w
  3250  03F5  1D03               	skipz
  3251  03F6  2BF9               	goto	u2935
  3252  03F7  3001               	movlw	1
  3253  03F8  022E               	subwf	_set_halfbridge_duty$127,w
  3254  03F9                     u2935:	
  3255  03F9  1803               	skipnc
  3256  03FA  2BFF               	goto	l3303
  3257  03FB  0020               	movlb	0	; select bank0
  3258  03FC  01A7               	clrf	set_halfbridge_duty@power
  3259  03FD  01A8               	clrf	set_halfbridge_duty@power+1
  3260  03FE  2C1A               	goto	l3309
  3261  03FF                     l3303:	
  3262  03FF  0020               	movlb	0	; select bank0
  3263  0400  0828               	movf	set_halfbridge_duty@power+1,w
  3264  0401  3A80               	xorlw	128
  3265  0402  00A9               	movwf	??_set_halfbridge_duty
  3266  0403  3084               	movlw	132
  3267  0404  0229               	subwf	??_set_halfbridge_duty,w
  3268  0405  1D03               	skipz
  3269  0406  2C09               	goto	u2945
  3270  0407  3000               	movlw	0
  3271  0408  0227               	subwf	set_halfbridge_duty@power,w
  3272  0409                     u2945:	
  3273  0409  1803               	skipnc
  3274  040A  2C11               	goto	l3307
  3275  040B  0020               	movlb	0	; select bank0
  3276  040C  0828               	movf	set_halfbridge_duty@power+1,w
  3277  040D  00B1               	movwf	_set_halfbridge_duty$128+1
  3278  040E  0827               	movf	set_halfbridge_duty@power,w
  3279  040F  00B0               	movwf	_set_halfbridge_duty$128
  3280  0410  2C16               	goto	l37
  3281  0411                     l3307:	
  3282  0411  30FF               	movlw	255
  3283  0412  0020               	movlb	0	; select bank0
  3284  0413  00B0               	movwf	_set_halfbridge_duty$128
  3285  0414  3003               	movlw	3
  3286  0415  00B1               	movwf	_set_halfbridge_duty$128+1
  3287  0416                     l37:	
  3288  0416  0831               	movf	_set_halfbridge_duty$128+1,w
  3289  0417  00A8               	movwf	set_halfbridge_duty@power+1
  3290  0418  0830               	movf	_set_halfbridge_duty$128,w
  3291  0419  00A7               	movwf	set_halfbridge_duty@power
  3292  041A                     l3309:	
  3293                           
  3294                           ;boost_con.c: 12: power_dd[id-1] += ((((((power - power_dd[id-1])) > ((5)) ? ((5)):((pow
      +                          er - power_dd[id-1])))) > ((-5)) ? ((((power - power_dd[id-1])) > ((5)) ? ((5)):((power 
      +                          - power_dd[id-1])))):((-5))));
  3295  041A  3544               	lslf	set_halfbridge_duty@id,w
  3296  041B  3EFE               	addlw	254
  3297  041C  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3298  041D  0086               	movwf	6
  3299  041E  0187               	clrf	7
  3300  041F  3F40               	moviw [0]fsr1
  3301  0420  00A9               	movwf	??_set_halfbridge_duty
  3302  0421  3F41               	moviw [1]fsr1
  3303  0422  00AA               	movwf	??_set_halfbridge_duty+1
  3304  0423  09A9               	comf	??_set_halfbridge_duty,f
  3305  0424  09AA               	comf	??_set_halfbridge_duty+1,f
  3306  0425  0AA9               	incf	??_set_halfbridge_duty,f
  3307  0426  1903               	skipnz
  3308  0427  0AAA               	incf	??_set_halfbridge_duty+1,f
  3309  0428  0827               	movf	set_halfbridge_duty@power,w
  3310  0429  0729               	addwf	??_set_halfbridge_duty,w
  3311  042A  00AB               	movwf	??_set_halfbridge_duty+2
  3312  042B  0828               	movf	set_halfbridge_duty@power+1,w
  3313  042C  3D2A               	addwfc	??_set_halfbridge_duty+1,w
  3314  042D  00AC               	movwf	??_set_halfbridge_duty+3
  3315  042E  082C               	movf	??_set_halfbridge_duty+3,w
  3316  042F  3A80               	xorlw	128
  3317  0430  00AD               	movwf	??_set_halfbridge_duty+4
  3318  0431  3080               	movlw	128
  3319  0432  022D               	subwf	??_set_halfbridge_duty+4,w
  3320  0433  1D03               	skipz
  3321  0434  2C37               	goto	u2955
  3322  0435  3006               	movlw	6
  3323  0436  022B               	subwf	??_set_halfbridge_duty+2,w
  3324  0437                     u2955:	
  3325  0437  1803               	skipnc
  3326  0438  2C4E               	goto	l3313
  3327  0439  0020               	movlb	0	; select bank0
  3328  043A  3544               	lslf	set_halfbridge_duty@id,w
  3329  043B  3EFE               	addlw	254
  3330  043C  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3331  043D  0086               	movwf	6
  3332  043E  0187               	clrf	7
  3333  043F  3F40               	moviw [0]fsr1
  3334  0440  00A9               	movwf	??_set_halfbridge_duty
  3335  0441  3F41               	moviw [1]fsr1
  3336  0442  00AA               	movwf	??_set_halfbridge_duty+1
  3337  0443  09A9               	comf	??_set_halfbridge_duty,f
  3338  0444  09AA               	comf	??_set_halfbridge_duty+1,f
  3339  0445  0AA9               	incf	??_set_halfbridge_duty,f
  3340  0446  1903               	skipnz
  3341  0447  0AAA               	incf	??_set_halfbridge_duty+1,f
  3342  0448  0827               	movf	set_halfbridge_duty@power,w
  3343  0449  0729               	addwf	??_set_halfbridge_duty,w
  3344  044A  00B4               	movwf	_set_halfbridge_duty$130
  3345  044B  0828               	movf	set_halfbridge_duty@power+1,w
  3346  044C  3D2A               	addwfc	??_set_halfbridge_duty+1,w
  3347  044D  2C52               	goto	L5
  3348  044E                     l3313:	
  3349  044E  3005               	movlw	5
  3350  044F  0020               	movlb	0	; select bank0
  3351  0450  00B4               	movwf	_set_halfbridge_duty$130
  3352  0451  3000               	movlw	0
  3353  0452                     L5:	
  3354  0452  00B5               	movwf	_set_halfbridge_duty$130+1
  3355  0453  0835               	movf	_set_halfbridge_duty$130+1,w
  3356  0454  3A80               	xorlw	128
  3357  0455  00A9               	movwf	??_set_halfbridge_duty
  3358  0456  307F               	movlw	127
  3359  0457  0229               	subwf	??_set_halfbridge_duty,w
  3360  0458  1D03               	skipz
  3361  0459  2C5C               	goto	u2965
  3362  045A  30FC               	movlw	252
  3363  045B  0234               	subwf	_set_halfbridge_duty$130,w
  3364  045C                     u2965:	
  3365  045C  1803               	skipnc
  3366  045D  2C64               	goto	l3317
  3367  045E  30FB               	movlw	251
  3368  045F  0020               	movlb	0	; select bank0
  3369  0460  00B2               	movwf	_set_halfbridge_duty$129
  3370  0461  30FF               	movlw	255
  3371  0462  00B3               	movwf	_set_halfbridge_duty$129+1
  3372  0463  2CA2               	goto	l3323
  3373  0464                     l3317:	
  3374  0464  0020               	movlb	0	; select bank0
  3375  0465  3544               	lslf	set_halfbridge_duty@id,w
  3376  0466  3EFE               	addlw	254
  3377  0467  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3378  0468  0086               	movwf	6
  3379  0469  0187               	clrf	7
  3380  046A  3F40               	moviw [0]fsr1
  3381  046B  00A9               	movwf	??_set_halfbridge_duty
  3382  046C  3F41               	moviw [1]fsr1
  3383  046D  00AA               	movwf	??_set_halfbridge_duty+1
  3384  046E  09A9               	comf	??_set_halfbridge_duty,f
  3385  046F  09AA               	comf	??_set_halfbridge_duty+1,f
  3386  0470  0AA9               	incf	??_set_halfbridge_duty,f
  3387  0471  1903               	skipnz
  3388  0472  0AAA               	incf	??_set_halfbridge_duty+1,f
  3389  0473  0827               	movf	set_halfbridge_duty@power,w
  3390  0474  0729               	addwf	??_set_halfbridge_duty,w
  3391  0475  00AB               	movwf	??_set_halfbridge_duty+2
  3392  0476  0828               	movf	set_halfbridge_duty@power+1,w
  3393  0477  3D2A               	addwfc	??_set_halfbridge_duty+1,w
  3394  0478  00AC               	movwf	??_set_halfbridge_duty+3
  3395  0479  082C               	movf	??_set_halfbridge_duty+3,w
  3396  047A  3A80               	xorlw	128
  3397  047B  00AD               	movwf	??_set_halfbridge_duty+4
  3398  047C  3080               	movlw	128
  3399  047D  022D               	subwf	??_set_halfbridge_duty+4,w
  3400  047E  1D03               	skipz
  3401  047F  2C82               	goto	u2975
  3402  0480  3006               	movlw	6
  3403  0481  022B               	subwf	??_set_halfbridge_duty+2,w
  3404  0482                     u2975:	
  3405  0482  1803               	skipnc
  3406  0483  2C99               	goto	l3321
  3407  0484  0020               	movlb	0	; select bank0
  3408  0485  3544               	lslf	set_halfbridge_duty@id,w
  3409  0486  3EFE               	addlw	254
  3410  0487  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3411  0488  0086               	movwf	6
  3412  0489  0187               	clrf	7
  3413  048A  3F40               	moviw [0]fsr1
  3414  048B  00A9               	movwf	??_set_halfbridge_duty
  3415  048C  3F41               	moviw [1]fsr1
  3416  048D  00AA               	movwf	??_set_halfbridge_duty+1
  3417  048E  09A9               	comf	??_set_halfbridge_duty,f
  3418  048F  09AA               	comf	??_set_halfbridge_duty+1,f
  3419  0490  0AA9               	incf	??_set_halfbridge_duty,f
  3420  0491  1903               	skipnz
  3421  0492  0AAA               	incf	??_set_halfbridge_duty+1,f
  3422  0493  0827               	movf	set_halfbridge_duty@power,w
  3423  0494  0729               	addwf	??_set_halfbridge_duty,w
  3424  0495  00B6               	movwf	_set_halfbridge_duty$131
  3425  0496  0828               	movf	set_halfbridge_duty@power+1,w
  3426  0497  3D2A               	addwfc	??_set_halfbridge_duty+1,w
  3427  0498  2C9D               	goto	L6
  3428  0499                     l3321:	
  3429  0499  3005               	movlw	5
  3430  049A  0020               	movlb	0	; select bank0
  3431  049B  00B6               	movwf	_set_halfbridge_duty$131
  3432  049C  3000               	movlw	0
  3433  049D                     L6:	
  3434  049D  00B7               	movwf	_set_halfbridge_duty$131+1
  3435  049E  0837               	movf	_set_halfbridge_duty$131+1,w
  3436  049F  00B3               	movwf	_set_halfbridge_duty$129+1
  3437  04A0  0836               	movf	_set_halfbridge_duty$131,w
  3438  04A1  00B2               	movwf	_set_halfbridge_duty$129
  3439  04A2                     l3323:	
  3440  04A2  3544               	lslf	set_halfbridge_duty@id,w
  3441  04A3  3EFE               	addlw	254
  3442  04A4  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3443  04A5  0086               	movwf	6
  3444  04A6  0187               	clrf	7
  3445  04A7  0832               	movf	_set_halfbridge_duty$129,w
  3446  04A8  0781               	addwf	1,f
  3447  04A9  3141               	addfsr 1,1
  3448  04AA  0833               	movf	_set_halfbridge_duty$129+1,w
  3449  04AB  3D81               	addwfc	1,f
  3450  04AC  317F               	addfsr 1,-1
  3451                           
  3452                           ;boost_con.c: 16: if(id == 1){
  3453  04AD  0344               	decf	set_halfbridge_duty@id,w
  3454  04AE  1D03               	btfss	3,2
  3455  04AF  2D16               	goto	l3343
  3456                           
  3457                           ;boost_con.c: 17: power_dd[id-1] = ((((((power_dd[id-1])) > ((479)) ? ((479)):((power_dd
      +                          [id-1])))) > ((255)) ? ((((power_dd[id-1])) > ((479)) ? ((479)):((power_dd[id-1])))):((2
      +                          55))));
  3458  04B0  3544               	lslf	set_halfbridge_duty@id,w
  3459  04B1  3EFE               	addlw	254
  3460  04B2  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3461  04B3  0086               	movwf	6
  3462  04B4  0187               	clrf	7
  3463  04B5  3F40               	moviw [0]fsr1
  3464  04B6  00A9               	movwf	??_set_halfbridge_duty
  3465  04B7  3F41               	moviw [1]fsr1
  3466  04B8  00AA               	movwf	??_set_halfbridge_duty+1
  3467  04B9  082A               	movf	??_set_halfbridge_duty+1,w
  3468  04BA  3A80               	xorlw	128
  3469  04BB  00AB               	movwf	??_set_halfbridge_duty+2
  3470  04BC  3081               	movlw	129
  3471  04BD  022B               	subwf	??_set_halfbridge_duty+2,w
  3472  04BE  1D03               	skipz
  3473  04BF  2CC2               	goto	u2995
  3474  04C0  30E0               	movlw	224
  3475  04C1  0229               	subwf	??_set_halfbridge_duty,w
  3476  04C2                     u2995:	
  3477  04C2  1803               	skipnc
  3478  04C3  2CCE               	goto	l3331
  3479  04C4  0020               	movlb	0	; select bank0
  3480  04C5  3544               	lslf	set_halfbridge_duty@id,w
  3481  04C6  3EFE               	addlw	254
  3482  04C7  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3483  04C8  0086               	movwf	6
  3484  04C9  0187               	clrf	7
  3485  04CA  3F40               	moviw [0]fsr1
  3486  04CB  00BA               	movwf	_set_halfbridge_duty$133
  3487  04CC  3F41               	moviw [1]fsr1
  3488  04CD  2CD2               	goto	L7
  3489  04CE                     l3331:	
  3490  04CE  30DF               	movlw	223
  3491  04CF  0020               	movlb	0	; select bank0
  3492  04D0  00BA               	movwf	_set_halfbridge_duty$133
  3493  04D1  3001               	movlw	1
  3494  04D2                     L7:	
  3495  04D2  00BB               	movwf	_set_halfbridge_duty$133+1
  3496  04D3  083B               	movf	_set_halfbridge_duty$133+1,w
  3497  04D4  3A80               	xorlw	128
  3498  04D5  00A9               	movwf	??_set_halfbridge_duty
  3499  04D6  3081               	movlw	129
  3500  04D7  0229               	subwf	??_set_halfbridge_duty,w
  3501  04D8  1D03               	skipz
  3502  04D9  2CDC               	goto	u3005
  3503  04DA  3000               	movlw	0
  3504  04DB  023A               	subwf	_set_halfbridge_duty$133,w
  3505  04DC                     u3005:	
  3506  04DC  1803               	skipnc
  3507  04DD  2CE4               	goto	l3335
  3508  04DE  30FF               	movlw	255
  3509  04DF  0020               	movlb	0	; select bank0
  3510  04E0  00B8               	movwf	_set_halfbridge_duty$132
  3511  04E1  3000               	movlw	0
  3512  04E2  00B9               	movwf	_set_halfbridge_duty$132+1
  3513  04E3  2D0C               	goto	l3341
  3514  04E4                     l3335:	
  3515  04E4  0020               	movlb	0	; select bank0
  3516  04E5  3544               	lslf	set_halfbridge_duty@id,w
  3517  04E6  3EFE               	addlw	254
  3518  04E7  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3519  04E8  0086               	movwf	6
  3520  04E9  0187               	clrf	7
  3521  04EA  3F40               	moviw [0]fsr1
  3522  04EB  00A9               	movwf	??_set_halfbridge_duty
  3523  04EC  3F41               	moviw [1]fsr1
  3524  04ED  00AA               	movwf	??_set_halfbridge_duty+1
  3525  04EE  082A               	movf	??_set_halfbridge_duty+1,w
  3526  04EF  3A80               	xorlw	128
  3527  04F0  00AB               	movwf	??_set_halfbridge_duty+2
  3528  04F1  3081               	movlw	129
  3529  04F2  022B               	subwf	??_set_halfbridge_duty+2,w
  3530  04F3  1D03               	skipz
  3531  04F4  2CF7               	goto	u3015
  3532  04F5  30E0               	movlw	224
  3533  04F6  0229               	subwf	??_set_halfbridge_duty,w
  3534  04F7                     u3015:	
  3535  04F7  1803               	skipnc
  3536  04F8  2D03               	goto	l3339
  3537  04F9  0020               	movlb	0	; select bank0
  3538  04FA  3544               	lslf	set_halfbridge_duty@id,w
  3539  04FB  3EFE               	addlw	254
  3540  04FC  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3541  04FD  0086               	movwf	6
  3542  04FE  0187               	clrf	7
  3543  04FF  3F40               	moviw [0]fsr1
  3544  0500  00BC               	movwf	_set_halfbridge_duty$134
  3545  0501  3F41               	moviw [1]fsr1
  3546  0502  2D07               	goto	L8
  3547  0503                     l3339:	
  3548  0503  30DF               	movlw	223
  3549  0504  0020               	movlb	0	; select bank0
  3550  0505  00BC               	movwf	_set_halfbridge_duty$134
  3551  0506  3001               	movlw	1
  3552  0507                     L8:	
  3553  0507  00BD               	movwf	_set_halfbridge_duty$134+1
  3554  0508  083D               	movf	_set_halfbridge_duty$134+1,w
  3555  0509  00B9               	movwf	_set_halfbridge_duty$132+1
  3556  050A  083C               	movf	_set_halfbridge_duty$134,w
  3557  050B  00B8               	movwf	_set_halfbridge_duty$132
  3558  050C                     l3341:	
  3559  050C  3544               	lslf	set_halfbridge_duty@id,w
  3560  050D  3EFE               	addlw	254
  3561  050E  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3562  050F  0086               	movwf	6
  3563  0510  0187               	clrf	7
  3564  0511  0838               	movf	_set_halfbridge_duty$132,w
  3565  0512  3FC0               	movwi [0]fsr1
  3566  0513  0839               	movf	_set_halfbridge_duty$132+1,w
  3567  0514  3FC1               	movwi [1]fsr1
  3568                           
  3569                           ;boost_con.c: 18: }
  3570  0515  2D7F               	goto	l3361
  3571  0516                     l3343:	
  3572                           
  3573                           ;boost_con.c: 19: else if(id == 2){
  3574  0516  3002               	movlw	2
  3575  0517  0644               	xorwf	set_halfbridge_duty@id,w
  3576  0518  1D03               	btfss	3,2
  3577  0519  2D7F               	goto	l3361
  3578                           
  3579                           ;boost_con.c: 20: power_dd[id-1] = ((((((power_dd[id-1])) > ((256)) ? ((256)):((power_dd
      +                          [id-1])))) > ((32)) ? ((((power_dd[id-1])) > ((256)) ? ((256)):((power_dd[id-1])))):((32
      +                          ))));
  3580  051A  3544               	lslf	set_halfbridge_duty@id,w
  3581  051B  3EFE               	addlw	254
  3582  051C  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3583  051D  0086               	movwf	6
  3584  051E  0187               	clrf	7
  3585  051F  3F40               	moviw [0]fsr1
  3586  0520  00A9               	movwf	??_set_halfbridge_duty
  3587  0521  3F41               	moviw [1]fsr1
  3588  0522  00AA               	movwf	??_set_halfbridge_duty+1
  3589  0523  082A               	movf	??_set_halfbridge_duty+1,w
  3590  0524  3A80               	xorlw	128
  3591  0525  00AB               	movwf	??_set_halfbridge_duty+2
  3592  0526  3081               	movlw	129
  3593  0527  022B               	subwf	??_set_halfbridge_duty+2,w
  3594  0528  1D03               	skipz
  3595  0529  2D2C               	goto	u3035
  3596  052A  3001               	movlw	1
  3597  052B  0229               	subwf	??_set_halfbridge_duty,w
  3598  052C                     u3035:	
  3599  052C  1803               	skipnc
  3600  052D  2D38               	goto	l3349
  3601  052E  0020               	movlb	0	; select bank0
  3602  052F  3544               	lslf	set_halfbridge_duty@id,w
  3603  0530  3EFE               	addlw	254
  3604  0531  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3605  0532  0086               	movwf	6
  3606  0533  0187               	clrf	7
  3607  0534  3F40               	moviw [0]fsr1
  3608  0535  00C0               	movwf	_set_halfbridge_duty$136
  3609  0536  3F41               	moviw [1]fsr1
  3610  0537  2D3C               	goto	L9
  3611  0538                     l3349:	
  3612  0538  3000               	movlw	0
  3613  0539  0020               	movlb	0	; select bank0
  3614  053A  00C0               	movwf	_set_halfbridge_duty$136
  3615  053B  3001               	movlw	1
  3616  053C                     L9:	
  3617  053C  00C1               	movwf	_set_halfbridge_duty$136+1
  3618  053D  0841               	movf	_set_halfbridge_duty$136+1,w
  3619  053E  3A80               	xorlw	128
  3620  053F  00A9               	movwf	??_set_halfbridge_duty
  3621  0540  3080               	movlw	128
  3622  0541  0229               	subwf	??_set_halfbridge_duty,w
  3623  0542  1D03               	skipz
  3624  0543  2D46               	goto	u3045
  3625  0544  3021               	movlw	33
  3626  0545  0240               	subwf	_set_halfbridge_duty$136,w
  3627  0546                     u3045:	
  3628  0546  1803               	skipnc
  3629  0547  2D4E               	goto	l3353
  3630  0548  3020               	movlw	32
  3631  0549  0020               	movlb	0	; select bank0
  3632  054A  00BE               	movwf	_set_halfbridge_duty$135
  3633  054B  3000               	movlw	0
  3634  054C  00BF               	movwf	_set_halfbridge_duty$135+1
  3635  054D  2D76               	goto	l3359
  3636  054E                     l3353:	
  3637  054E  0020               	movlb	0	; select bank0
  3638  054F  3544               	lslf	set_halfbridge_duty@id,w
  3639  0550  3EFE               	addlw	254
  3640  0551  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3641  0552  0086               	movwf	6
  3642  0553  0187               	clrf	7
  3643  0554  3F40               	moviw [0]fsr1
  3644  0555  00A9               	movwf	??_set_halfbridge_duty
  3645  0556  3F41               	moviw [1]fsr1
  3646  0557  00AA               	movwf	??_set_halfbridge_duty+1
  3647  0558  082A               	movf	??_set_halfbridge_duty+1,w
  3648  0559  3A80               	xorlw	128
  3649  055A  00AB               	movwf	??_set_halfbridge_duty+2
  3650  055B  3081               	movlw	129
  3651  055C  022B               	subwf	??_set_halfbridge_duty+2,w
  3652  055D  1D03               	skipz
  3653  055E  2D61               	goto	u3055
  3654  055F  3001               	movlw	1
  3655  0560  0229               	subwf	??_set_halfbridge_duty,w
  3656  0561                     u3055:	
  3657  0561  1803               	skipnc
  3658  0562  2D6D               	goto	l3357
  3659  0563  0020               	movlb	0	; select bank0
  3660  0564  3544               	lslf	set_halfbridge_duty@id,w
  3661  0565  3EFE               	addlw	254
  3662  0566  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3663  0567  0086               	movwf	6
  3664  0568  0187               	clrf	7
  3665  0569  3F40               	moviw [0]fsr1
  3666  056A  00C2               	movwf	_set_halfbridge_duty$137
  3667  056B  3F41               	moviw [1]fsr1
  3668  056C  2D71               	goto	L10
  3669  056D                     l3357:	
  3670  056D  3000               	movlw	0
  3671  056E  0020               	movlb	0	; select bank0
  3672  056F  00C2               	movwf	_set_halfbridge_duty$137
  3673  0570  3001               	movlw	1
  3674  0571                     L10:	
  3675  0571  00C3               	movwf	_set_halfbridge_duty$137+1
  3676  0572  0843               	movf	_set_halfbridge_duty$137+1,w
  3677  0573  00BF               	movwf	_set_halfbridge_duty$135+1
  3678  0574  0842               	movf	_set_halfbridge_duty$137,w
  3679  0575  00BE               	movwf	_set_halfbridge_duty$135
  3680  0576                     l3359:	
  3681  0576  3544               	lslf	set_halfbridge_duty@id,w
  3682  0577  3EFE               	addlw	254
  3683  0578  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3684  0579  0086               	movwf	6
  3685  057A  0187               	clrf	7
  3686  057B  083E               	movf	_set_halfbridge_duty$135,w
  3687  057C  3FC0               	movwi [0]fsr1
  3688  057D  083F               	movf	_set_halfbridge_duty$135+1,w
  3689  057E  3FC1               	movwi [1]fsr1
  3690  057F                     l3361:	
  3691                           
  3692                           ;boost_con.c: 21: }
  3693                           ;boost_con.c: 22: set_PWM_duty(id, power_dd[id-1]);
  3694  057F  3544               	lslf	set_halfbridge_duty@id,w
  3695  0580  3EFE               	addlw	254
  3696  0581  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3697  0582  0086               	movwf	6
  3698  0583  0187               	clrf	7
  3699  0584  3F40               	moviw [0]fsr1
  3700  0585  00F4               	movwf	set_PWM_duty@duty
  3701  0586  3F41               	moviw [1]fsr1
  3702  0587  00F5               	movwf	set_PWM_duty@duty+1
  3703  0588  0844               	movf	set_halfbridge_duty@id,w
  3704  0589  3185  2596         	fcall	_set_PWM_duty
  3705                           
  3706                           ;boost_con.c: 23: return power_dd[id-1];
  3707  058B  0020               	movlb	0	; select bank0
  3708  058C  3544               	lslf	set_halfbridge_duty@id,w
  3709  058D  3EFE               	addlw	254
  3710  058E  3E4F               	addlw	(low (set_halfbridge_duty@power_dd| 0))& (0+255)
  3711  058F  0086               	movwf	6
  3712  0590  0187               	clrf	7
  3713  0591  3F40               	moviw [0]fsr1
  3714  0592  00A7               	movwf	?_set_halfbridge_duty
  3715  0593  3F41               	moviw [1]fsr1
  3716  0594  00A8               	movwf	?_set_halfbridge_duty+1
  3717  0595  0008               	return
  3718  0596                     __end_of_set_halfbridge_duty:	
  3719                           
  3720                           	psect	text5
  3721  0F14                     __ptext5:	
  3722 ;; *************** function _puts_UARTb *****************
  3723 ;; Defined at:
  3724 ;;		line 89 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f182
      +7.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  str             2    5[BANK0 ] PTR unsigned char 
  3727 ;;		 -> STR_7(3), STR_6(2), STR_5(2), STR_4(2), 
  3728 ;;		 -> STR_3(2), STR_2(2), STR_1(36), 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;		None               void
  3733 ;; Registers used:
  3734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3740 ;;      Params:         0       2       0       0       0       0
  3741 ;;      Locals:         0       0       0       0       0       0
  3742 ;;      Temps:          0       1       0       0       0       0
  3743 ;;      Totals:         0       3       0       0       0       0
  3744 ;;Total ram usage:        3 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    5
  3747 ;; This function calls:
  3748 ;;		_set_data_buff
  3749 ;; This function is called by:
  3750 ;;		_main
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _puts_UARTb
  3756  0F14                     _puts_UARTb:	
  3757  0F14                     l3417:	
  3758                           ;uart_16f1827.c: 91: while(*str != 0){
  3759                           
  3760                           ;incstack = 0
  3761                           ; Regs used in _puts_UARTb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3762                           
  3763  0F14  0020               	movlb	0	; select bank0
  3764  0F15  0825               	movf	puts_UARTb@str,w
  3765  0F16  0084               	movwf	4
  3766  0F17  0826               	movf	puts_UARTb@str+1,w
  3767  0F18  0085               	movwf	5
  3768  0F19  0012               	moviw fsr0++
  3769  0F1A  1903               	btfsc	3,2
  3770  0F1B  2F2B               	goto	l573
  3771                           
  3772                           ;uart_16f1827.c: 92: set_data_buff(*str);
  3773  0F1C  0020               	movlb	0	; select bank0
  3774  0F1D  0825               	movf	puts_UARTb@str,w
  3775  0F1E  0084               	movwf	4
  3776  0F1F  0826               	movf	puts_UARTb@str+1,w
  3777  0F20  0085               	movwf	5
  3778  0F21  0800               	movf	0,w	;code access
  3779  0F22  3187  27D7  318F   	fcall	_set_data_buff
  3780                           
  3781                           ;uart_16f1827.c: 93: str++;
  3782  0F25  3001               	movlw	1
  3783  0F26  0020               	movlb	0	; select bank0
  3784  0F27  07A5               	addwf	puts_UARTb@str,f
  3785  0F28  3000               	movlw	0
  3786  0F29  3DA6               	addwfc	puts_UARTb@str+1,f
  3787  0F2A  2F14               	goto	l3417
  3788  0F2B                     l573:	
  3789                           
  3790                           ;uart_16f1827.c: 94: }
  3791                           ;uart_16f1827.c: 95: TXIE = 1;
  3792  0F2B  0021               	movlb	1	; select bank1
  3793  0F2C  1611               	bsf	17,4	;volatile
  3794  0F2D  0008               	return
  3795  0F2E                     __end_of_puts_UARTb:	
  3796                           
  3797                           	psect	text6
  3798  063A                     __ptext6:	
  3799 ;; *************** function _putdec_UARTb *****************
  3800 ;; Defined at:
  3801 ;;		line 127 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f18
      +27.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  dec             2    8[BANK0 ] int 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  dec_buff       10   11[BANK0 ] unsigned char [10]
  3806 ;;  i               2   23[BANK0 ] int 
  3807 ;;  cnt             2   21[BANK0 ] unsigned int 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;		None               void
  3810 ;; Registers used:
  3811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3817 ;;      Params:         0       2       0       0       0       0
  3818 ;;      Locals:         0      14       0       0       0       0
  3819 ;;      Temps:          0       1       0       0       0       0
  3820 ;;      Totals:         0      17       0       0       0       0
  3821 ;;Total ram usage:       17 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:    5
  3824 ;; This function calls:
  3825 ;;		___awdiv
  3826 ;;		___awmod
  3827 ;;		___wmul
  3828 ;;		_set_data_buff
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _putdec_UARTb
  3836  063A                     _putdec_UARTb:	
  3837                           
  3838                           ;uart_16f1827.c: 130: unsigned int cnt = 0;
  3839                           
  3840                           ;incstack = 0
  3841                           ; Regs used in _putdec_UARTb: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3842  063A  0020               	movlb	0	; select bank0
  3843  063B  01B5               	clrf	putdec_UARTb@cnt
  3844  063C  01B6               	clrf	putdec_UARTb@cnt+1
  3845                           
  3846                           ;uart_16f1827.c: 131: int i;
  3847                           ;uart_16f1827.c: 132: unsigned char dec_buff[10] = {0};
  3848  063D  30CA               	movlw	low putdec_UARTb@F2797
  3849  063E  0086               	movwf	6
  3850  063F  3000               	movlw	high putdec_UARTb@F2797
  3851  0640  0087               	movwf	7
  3852  0641  302B               	movlw	low putdec_UARTb@dec_buff
  3853  0642  0084               	movwf	4
  3854  0643  3000               	movlw	high putdec_UARTb@dec_buff
  3855  0644  0085               	movwf	5
  3856  0645  300A               	movlw	10
  3857  0646  00AA               	movwf	??_putdec_UARTb
  3858  0647                     u3070:	
  3859  0647  0016               	moviw fsr1++
  3860  0648  001A               	movwi fsr0++
  3861  0649  0BAA               	decfsz	??_putdec_UARTb,f
  3862  064A  2E47               	goto	u3070
  3863                           
  3864                           ;uart_16f1827.c: 133: if(dec < 0){
  3865  064B  1FA9               	btfss	putdec_UARTb@dec+1,7
  3866  064C  2E62               	goto	l3439
  3867                           
  3868                           ;uart_16f1827.c: 134: set_data_buff('-');
  3869  064D  302D               	movlw	45
  3870  064E  3187  27D7  3186   	fcall	_set_data_buff
  3871                           
  3872                           ;uart_16f1827.c: 135: dec *= -1;
  3873  0651  30FF               	movlw	255
  3874  0652  0020               	movlb	0	; select bank0
  3875  0653  00A0               	movwf	___wmul@multiplier
  3876  0654  30FF               	movlw	255
  3877  0655  00A1               	movwf	___wmul@multiplier+1
  3878  0656  0829               	movf	putdec_UARTb@dec+1,w
  3879  0657  00A3               	movwf	___wmul@multiplicand+1
  3880  0658  0828               	movf	putdec_UARTb@dec,w
  3881  0659  00A2               	movwf	___wmul@multiplicand
  3882  065A  318F  272E  3186   	fcall	___wmul
  3883  065D  0020               	movlb	0	; select bank0
  3884  065E  0821               	movf	?___wmul+1,w
  3885  065F  00A9               	movwf	putdec_UARTb@dec+1
  3886  0660  0820               	movf	?___wmul,w
  3887  0661  00A8               	movwf	putdec_UARTb@dec
  3888  0662                     l3439:	
  3889                           
  3890                           ;uart_16f1827.c: 136: }
  3891                           ;uart_16f1827.c: 147: if(dec == 0){
  3892  0662  0828               	movf	putdec_UARTb@dec,w
  3893  0663  0429               	iorwf	putdec_UARTb@dec+1,w
  3894  0664  1D03               	btfss	3,2
  3895  0665  2E6A               	goto	l3449
  3896                           
  3897                           ;uart_16f1827.c: 148: set_data_buff('0');
  3898  0666  3030               	movlw	48
  3899  0667  3187  27D7  3186   	fcall	_set_data_buff
  3900  066A                     l3449:	
  3901                           ;uart_16f1827.c: 149: }
  3902                           ;uart_16f1827.c: 150: while(dec != 0){
  3903                           
  3904  066A  0020               	movlb	0	; select bank0
  3905  066B  0828               	movf	putdec_UARTb@dec,w
  3906  066C  0429               	iorwf	putdec_UARTb@dec+1,w
  3907  066D  1903               	btfsc	3,2
  3908  066E  2E99               	goto	l3451
  3909                           
  3910                           ;uart_16f1827.c: 151: dec_buff[cnt] = dec % 10;
  3911  066F  300A               	movlw	10
  3912  0670  0020               	movlb	0	; select bank0
  3913  0671  00A0               	movwf	___awmod@divisor
  3914  0672  3000               	movlw	0
  3915  0673  00A1               	movwf	___awmod@divisor+1
  3916  0674  0829               	movf	putdec_UARTb@dec+1,w
  3917  0675  00A3               	movwf	___awmod@dividend+1
  3918  0676  0828               	movf	putdec_UARTb@dec,w
  3919  0677  00A2               	movwf	___awmod@dividend
  3920  0678  3187  2706  3186   	fcall	___awmod
  3921  067B  0020               	movlb	0	; select bank0
  3922  067C  0820               	movf	?___awmod,w
  3923  067D  00AA               	movwf	??_putdec_UARTb
  3924  067E  0835               	movf	putdec_UARTb@cnt,w
  3925  067F  3E2B               	addlw	(low (putdec_UARTb@dec_buff| 0))& (0+255)
  3926  0680  0086               	movwf	6
  3927  0681  0187               	clrf	7
  3928  0682  082A               	movf	??_putdec_UARTb,w
  3929  0683  0081               	movwf	1
  3930                           
  3931                           ;uart_16f1827.c: 152: dec /= 10;
  3932  0684  300A               	movlw	10
  3933  0685  00A0               	movwf	___awdiv@divisor
  3934  0686  3000               	movlw	0
  3935  0687  00A1               	movwf	___awdiv@divisor+1
  3936  0688  0829               	movf	putdec_UARTb@dec+1,w
  3937  0689  00A3               	movwf	___awdiv@dividend+1
  3938  068A  0828               	movf	putdec_UARTb@dec,w
  3939  068B  00A2               	movwf	___awdiv@dividend
  3940  068C  3186  26B4  3186   	fcall	___awdiv
  3941  068F  0020               	movlb	0	; select bank0
  3942  0690  0821               	movf	?___awdiv+1,w
  3943  0691  00A9               	movwf	putdec_UARTb@dec+1
  3944  0692  0820               	movf	?___awdiv,w
  3945  0693  00A8               	movwf	putdec_UARTb@dec
  3946                           
  3947                           ;uart_16f1827.c: 153: cnt++;
  3948  0694  3001               	movlw	1
  3949  0695  07B5               	addwf	putdec_UARTb@cnt,f
  3950  0696  3000               	movlw	0
  3951  0697  3DB6               	addwfc	putdec_UARTb@cnt+1,f
  3952  0698  2E6A               	goto	l3449
  3953  0699                     l3451:	
  3954                           
  3955                           ;uart_16f1827.c: 154: }
  3956                           ;uart_16f1827.c: 155: for(i = cnt - 1; i >= 0; i--){
  3957  0699  0835               	movf	putdec_UARTb@cnt,w
  3958  069A  3EFF               	addlw	255
  3959  069B  00B7               	movwf	putdec_UARTb@i
  3960  069C  30FF               	movlw	255
  3961  069D  3D36               	addwfc	putdec_UARTb@cnt+1,w
  3962  069E  00B8               	movwf	putdec_UARTb@i+1
  3963  069F  1BB8               	btfsc	putdec_UARTb@i+1,7
  3964  06A0  2EB1               	goto	l590
  3965  06A1                     l3457:	
  3966                           
  3967                           ;uart_16f1827.c: 156: set_data_buff(dec_buff[i] + 48);
  3968  06A1  0837               	movf	putdec_UARTb@i,w
  3969  06A2  3E2B               	addlw	(low (putdec_UARTb@dec_buff| 0))& (0+255)
  3970  06A3  0086               	movwf	6
  3971  06A4  0187               	clrf	7
  3972  06A5  0801               	movf	1,w
  3973  06A6  3E30               	addlw	48
  3974  06A7  3187  27D7  3186   	fcall	_set_data_buff
  3975  06AA  30FF               	movlw	255
  3976  06AB  0020               	movlb	0	; select bank0
  3977  06AC  07B7               	addwf	putdec_UARTb@i,f
  3978  06AD  30FF               	movlw	255
  3979  06AE  3DB8               	addwfc	putdec_UARTb@i+1,f
  3980  06AF  1FB8               	btfss	putdec_UARTb@i+1,7
  3981  06B0  2EA1               	goto	l3457
  3982  06B1                     l590:	
  3983                           
  3984                           ;uart_16f1827.c: 157: }
  3985                           ;uart_16f1827.c: 158: TXIE = 1;
  3986  06B1  0021               	movlb	1	; select bank1
  3987  06B2  1611               	bsf	17,4	;volatile
  3988  06B3  0008               	return
  3989  06B4                     __end_of_putdec_UARTb:	
  3990                           
  3991                           	psect	text7
  3992  07D7                     __ptext7:	
  3993 ;; *************** function _set_data_buff *****************
  3994 ;; Defined at:
  3995 ;;		line 106 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f18
      +27.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;  data            1    wreg     unsigned char 
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;  data            1    4[BANK0 ] unsigned char 
  4000 ;; Return value:  Size  Location     Type
  4001 ;;		None               void
  4002 ;; Registers used:
  4003 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4009 ;;      Params:         0       0       0       0       0       0
  4010 ;;      Locals:         0       1       0       0       0       0
  4011 ;;      Temps:          0       1       0       0       0       0
  4012 ;;      Totals:         0       2       0       0       0       0
  4013 ;;Total ram usage:        2 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    4
  4016 ;; This function calls:
  4017 ;;		_puts_UART
  4018 ;; This function is called by:
  4019 ;;		_puts_UARTb
  4020 ;;		_putdec_UARTb
  4021 ;; This function uses a non-reentrant model
  4022 ;;
  4023                           
  4024                           
  4025                           ;psect for function _set_data_buff
  4026  07D7                     _set_data_buff:	
  4027                           
  4028                           ;incstack = 0
  4029                           ; Regs used in _set_data_buff: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4030                           ;set_data_buff@data stored from wreg
  4031  07D7  0020               	movlb	0	; select bank0
  4032  07D8  00A4               	movwf	set_data_buff@data
  4033                           
  4034                           ;uart_16f1827.c: 107: TXIE = 0;
  4035  07D9  0021               	movlb	1	; select bank1
  4036  07DA  1211               	bcf	17,4	;volatile
  4037                           
  4038                           ;uart_16f1827.c: 108: u1txbuff.txdata[u1txbuff.end] = data;
  4039  07DB  0020               	movlb	0	; select bank0
  4040  07DC  0824               	movf	set_data_buff@data,w
  4041  07DD  00A3               	movwf	??_set_data_buff
  4042  07DE  0022               	movlb	2	; select bank2
  4043  07DF  0853               	movf	(_u1txbuff^(0+256)+51),w
  4044  07E0  3E20               	addlw	(low (_u1txbuff| (0+256)))& (0+255)
  4045  07E1  0086               	movwf	6
  4046  07E2  3001               	movlw	1	; select bank2/3
  4047  07E3  0087               	movwf	7
  4048  07E4  0020               	movlb	0	; select bank0
  4049  07E5  0823               	movf	??_set_data_buff,w
  4050  07E6  0081               	movwf	1
  4051                           
  4052                           ;uart_16f1827.c: 110: u1txbuff.end++;
  4053  07E7  3001               	movlw	1
  4054  07E8  00A3               	movwf	??_set_data_buff
  4055  07E9  0823               	movf	??_set_data_buff,w
  4056  07EA  0022               	movlb	2	; select bank2
  4057  07EB  07D3               	addwf	(_u1txbuff^(0+256)+51),f
  4058                           
  4059                           ;uart_16f1827.c: 111: if(u1txbuff.end >= 50){
  4060  07EC  3032               	movlw	50
  4061  07ED  0253               	subwf	(_u1txbuff^(0+256)+51),w
  4062  07EE  1803               	btfsc	3,0
  4063                           
  4064                           ;uart_16f1827.c: 112: u1txbuff.end = 0;
  4065  07EF  01D3               	clrf	(_u1txbuff^(0+256)+51)
  4066                           
  4067                           ;uart_16f1827.c: 113: }
  4068                           ;uart_16f1827.c: 114: if(u1txbuff.end == u1txbuff.head){
  4069  07F0  0853               	movf	(_u1txbuff^(0+256)+51),w
  4070  07F1  0652               	xorwf	(_u1txbuff^(0+256)+50),w
  4071  07F2  1D03               	skipz
  4072  07F3  0008               	return
  4073                           
  4074                           ;uart_16f1827.c: 117: puts_UART("\r\nTX speed over!\r\n");
  4075  07F4  3024               	movlw	low (STR_8| (0+32768))
  4076  07F5  0020               	movlb	0	; select bank0
  4077  07F6  00A0               	movwf	puts_UART@str
  4078  07F7  3088               	movlw	high (STR_8| (0+32768))
  4079  07F8  00A1               	movwf	puts_UART@str+1
  4080  07F9  318F  2768         	fcall	_puts_UART
  4081                           
  4082                           ;uart_16f1827.c: 118: u1txbuff.end--;
  4083  07FB  3001               	movlw	1
  4084  07FC  0022               	movlb	2	; select bank2
  4085  07FD  02D3               	subwf	(_u1txbuff^(0+256)+51),f
  4086  07FE  0008               	return
  4087  07FF                     __end_of_set_data_buff:	
  4088                           
  4089                           	psect	text8
  4090  0F68                     __ptext8:	
  4091 ;; *************** function _puts_UART *****************
  4092 ;; Defined at:
  4093 ;;		line 73 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f182
      +7.c"
  4094 ;; Parameters:    Size  Location     Type
  4095 ;;  str             2    0[BANK0 ] PTR unsigned char 
  4096 ;;		 -> STR_8(19), 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;  txie            1    2[BANK0 ] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;		None               void
  4101 ;; Registers used:
  4102 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4108 ;;      Params:         0       2       0       0       0       0
  4109 ;;      Locals:         0       1       0       0       0       0
  4110 ;;      Temps:          1       0       0       0       0       0
  4111 ;;      Totals:         1       3       0       0       0       0
  4112 ;;Total ram usage:        4 bytes
  4113 ;; Hardware stack levels used:    1
  4114 ;; Hardware stack levels required when called:    3
  4115 ;; This function calls:
  4116 ;;		_putc_UART
  4117 ;; This function is called by:
  4118 ;;		_set_data_buff
  4119 ;; This function uses a non-reentrant model
  4120 ;;
  4121                           
  4122                           
  4123                           ;psect for function _puts_UART
  4124  0F68                     _puts_UART:	
  4125                           
  4126                           ;uart_16f1827.c: 74: unsigned char txie;
  4127                           ;uart_16f1827.c: 75: txie = TXIE;
  4128                           
  4129                           ;incstack = 0
  4130                           ; Regs used in _puts_UART: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4131  0F68  3000               	movlw	0
  4132  0F69  0021               	movlb	1	; select bank1
  4133  0F6A  1A11               	btfsc	17,4	;volatile
  4134  0F6B  3001               	movlw	1
  4135  0F6C  0020               	movlb	0	; select bank0
  4136  0F6D  00A2               	movwf	puts_UART@txie
  4137                           
  4138                           ;uart_16f1827.c: 76: TXIE = 0;
  4139  0F6E  0021               	movlb	1	; select bank1
  4140  0F6F  1211               	bcf	17,4	;volatile
  4141  0F70                     l3061:	
  4142                           ;uart_16f1827.c: 77: while(*str != 0){
  4143                           
  4144  0F70  0020               	movlb	0	; select bank0
  4145  0F71  0820               	movf	puts_UART@str,w
  4146  0F72  0084               	movwf	4
  4147  0F73  0821               	movf	puts_UART@str+1,w
  4148  0F74  0085               	movwf	5
  4149  0F75  0012               	moviw fsr0++
  4150  0F76  1903               	btfsc	3,2
  4151  0F77  2F87               	goto	l567
  4152                           
  4153                           ;uart_16f1827.c: 78: putc_UART(*str);
  4154  0F78  0020               	movlb	0	; select bank0
  4155  0F79  0820               	movf	puts_UART@str,w
  4156  0F7A  0084               	movwf	4
  4157  0F7B  0821               	movf	puts_UART@str+1,w
  4158  0F7C  0085               	movwf	5
  4159  0F7D  0800               	movf	0,w	;code access
  4160  0F7E  318E  26BF  318F   	fcall	_putc_UART
  4161                           
  4162                           ;uart_16f1827.c: 79: str++;
  4163  0F81  3001               	movlw	1
  4164  0F82  0020               	movlb	0	; select bank0
  4165  0F83  07A0               	addwf	puts_UART@str,f
  4166  0F84  3000               	movlw	0
  4167  0F85  3DA1               	addwfc	puts_UART@str+1,f
  4168  0F86  2F70               	goto	l3061
  4169  0F87                     l567:	
  4170                           
  4171                           ;uart_16f1827.c: 80: }
  4172                           ;uart_16f1827.c: 81: TXIE = txie;
  4173  0F87  1C22               	btfss	puts_UART@txie,0
  4174  0F88  2F8C               	goto	u2620
  4175  0F89  0021               	movlb	1	; select bank1
  4176  0F8A  1611               	bsf	17,4	;volatile
  4177  0F8B  0008               	return
  4178  0F8C                     u2620:	
  4179  0F8C  0021               	movlb	1	; select bank1
  4180  0F8D  1211               	bcf	17,4	;volatile
  4181  0F8E  0008               	return
  4182  0F8F                     __end_of_puts_UART:	
  4183                           
  4184                           	psect	text9
  4185  0EBF                     __ptext9:	
  4186 ;; *************** function _putc_UART *****************
  4187 ;; Defined at:
  4188 ;;		line 59 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f182
      +7.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  data            1    wreg     unsigned char 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  data            1    4[COMMON] unsigned char 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;		None               void
  4195 ;; Registers used:
  4196 ;;		wreg
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4202 ;;      Params:         0       0       0       0       0       0
  4203 ;;      Locals:         1       0       0       0       0       0
  4204 ;;      Temps:          0       0       0       0       0       0
  4205 ;;      Totals:         1       0       0       0       0       0
  4206 ;;Total ram usage:        1 bytes
  4207 ;; Hardware stack levels used:    1
  4208 ;; Hardware stack levels required when called:    2
  4209 ;; This function calls:
  4210 ;;		Nothing
  4211 ;; This function is called by:
  4212 ;;		_main
  4213 ;;		_puts_UART
  4214 ;;		_data_send
  4215 ;;		_putdec_UART
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _putc_UART
  4221  0EBF                     _putc_UART:	
  4222                           
  4223                           ;incstack = 0
  4224                           ; Regs used in _putc_UART: [wreg]
  4225                           ;putc_UART@data stored from wreg
  4226  0EBF  00F4               	movwf	putc_UART@data
  4227                           
  4228                           ;uart_16f1827.c: 61: TXIE = 0;
  4229  0EC0  0021               	movlb	1	; select bank1
  4230  0EC1  1211               	bcf	17,4	;volatile
  4231  0EC2                     l559:	
  4232                           ;uart_16f1827.c: 63: while(!TXIF);
  4233                           
  4234  0EC2  0020               	movlb	0	; select bank0
  4235  0EC3  1E11               	btfss	17,4	;volatile
  4236  0EC4  2EC2               	goto	l559
  4237                           
  4238                           ;uart_16f1827.c: 65: TXREG = data;
  4239  0EC5  0874               	movf	putc_UART@data,w
  4240  0EC6  0023               	movlb	3	; select bank3
  4241  0EC7  009A               	movwf	26	;volatile
  4242  0EC8  0008               	return
  4243  0EC9                     __end_of_putc_UART:	
  4244                           
  4245                           	psect	text10
  4246  0F2E                     __ptext10:	
  4247 ;; *************** function ___wmul *****************
  4248 ;; Defined at:
  4249 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;  multiplier      2    0[BANK0 ] unsigned int 
  4252 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  4253 ;; Auto vars:     Size  Location     Type
  4254 ;;  product         2    4[COMMON] unsigned int 
  4255 ;; Return value:  Size  Location     Type
  4256 ;;                  2    0[BANK0 ] unsigned int 
  4257 ;; Registers used:
  4258 ;;		wreg, status,2, status,0
  4259 ;; Tracked objects:
  4260 ;;		On entry : 0/0
  4261 ;;		On exit  : 0/0
  4262 ;;		Unchanged: 0/0
  4263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4264 ;;      Params:         0       4       0       0       0       0
  4265 ;;      Locals:         2       0       0       0       0       0
  4266 ;;      Temps:          0       0       0       0       0       0
  4267 ;;      Totals:         2       4       0       0       0       0
  4268 ;;Total ram usage:        6 bytes
  4269 ;; Hardware stack levels used:    1
  4270 ;; Hardware stack levels required when called:    2
  4271 ;; This function calls:
  4272 ;;		Nothing
  4273 ;; This function is called by:
  4274 ;;		_putdec_UARTb
  4275 ;;		_putdec_UART
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function ___wmul
  4281  0F2E                     ___wmul:	
  4282                           
  4283                           ;incstack = 0
  4284                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4285  0F2E  01F4               	clrf	___wmul@product
  4286  0F2F  01F5               	clrf	___wmul@product+1
  4287  0F30                     l3191:	
  4288  0F30  0020               	movlb	0	; select bank0
  4289  0F31  1C20               	btfss	___wmul@multiplier,0
  4290  0F32  2F37               	goto	l687
  4291  0F33  0822               	movf	___wmul@multiplicand,w
  4292  0F34  07F4               	addwf	___wmul@product,f
  4293  0F35  0823               	movf	___wmul@multiplicand+1,w
  4294  0F36  3DF5               	addwfc	___wmul@product+1,f
  4295  0F37                     l687:	
  4296  0F37  3001               	movlw	1
  4297  0F38                     u2695:	
  4298  0F38  35A2               	lslf	___wmul@multiplicand,f
  4299  0F39  0DA3               	rlf	___wmul@multiplicand+1,f
  4300  0F3A  0B89               	decfsz	9,f
  4301  0F3B  2F38               	goto	u2695
  4302  0F3C  3001               	movlw	1
  4303  0F3D                     u2705:	
  4304  0F3D  36A1               	lsrf	___wmul@multiplier+1,f
  4305  0F3E  0CA0               	rrf	___wmul@multiplier,f
  4306  0F3F  0B89               	decfsz	9,f
  4307  0F40  2F3D               	goto	u2705
  4308  0F41  0820               	movf	___wmul@multiplier,w
  4309  0F42  0421               	iorwf	___wmul@multiplier+1,w
  4310  0F43  1D03               	btfss	3,2
  4311  0F44  2F30               	goto	l3191
  4312  0F45  0875               	movf	___wmul@product+1,w
  4313  0F46  00A1               	movwf	?___wmul+1
  4314  0F47  0874               	movf	___wmul@product,w
  4315  0F48  00A0               	movwf	?___wmul
  4316  0F49  0008               	return
  4317  0F4A                     __end_of___wmul:	
  4318                           
  4319                           	psect	text11
  4320  0706                     __ptext11:	
  4321 ;; *************** function ___awmod *****************
  4322 ;; Defined at:
  4323 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;  divisor         2    0[BANK0 ] int 
  4326 ;;  dividend        2    2[BANK0 ] int 
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;  sign            1    5[BANK0 ] unsigned char 
  4329 ;;  counter         1    4[BANK0 ] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;                  2    0[BANK0 ] int 
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4339 ;;      Params:         0       4       0       0       0       0
  4340 ;;      Locals:         0       2       0       0       0       0
  4341 ;;      Temps:          1       0       0       0       0       0
  4342 ;;      Totals:         1       6       0       0       0       0
  4343 ;;Total ram usage:        7 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    2
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_putdec_UARTb
  4350 ;;		_putdec_UART
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           
  4355                           ;psect for function ___awmod
  4356  0706                     ___awmod:	
  4357                           
  4358                           ;incstack = 0
  4359                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4360  0706  0020               	movlb	0	; select bank0
  4361  0707  01A5               	clrf	___awmod@sign
  4362  0708  1FA3               	btfss	___awmod@dividend+1,7
  4363  0709  2F11               	goto	l3255
  4364  070A  09A2               	comf	___awmod@dividend,f
  4365  070B  09A3               	comf	___awmod@dividend+1,f
  4366  070C  0AA2               	incf	___awmod@dividend,f
  4367  070D  1903               	skipnz
  4368  070E  0AA3               	incf	___awmod@dividend+1,f
  4369  070F  01A5               	clrf	___awmod@sign
  4370  0710  0AA5               	incf	___awmod@sign,f
  4371  0711                     l3255:	
  4372  0711  1FA1               	btfss	___awmod@divisor+1,7
  4373  0712  2F18               	goto	l3259
  4374  0713  09A0               	comf	___awmod@divisor,f
  4375  0714  09A1               	comf	___awmod@divisor+1,f
  4376  0715  0AA0               	incf	___awmod@divisor,f
  4377  0716  1903               	skipnz
  4378  0717  0AA1               	incf	___awmod@divisor+1,f
  4379  0718                     l3259:	
  4380  0718  0820               	movf	___awmod@divisor,w
  4381  0719  0421               	iorwf	___awmod@divisor+1,w
  4382  071A  1903               	btfsc	3,2
  4383  071B  2F3F               	goto	l3277
  4384  071C  01A4               	clrf	___awmod@counter
  4385  071D  0AA4               	incf	___awmod@counter,f
  4386  071E                     l3267:	
  4387  071E  1BA1               	btfsc	___awmod@divisor+1,7
  4388  071F  2F2A               	goto	l3269
  4389  0720  3001               	movlw	1
  4390  0721                     u2855:	
  4391  0721  35A0               	lslf	___awmod@divisor,f
  4392  0722  0DA1               	rlf	___awmod@divisor+1,f
  4393  0723  0B89               	decfsz	9,f
  4394  0724  2F21               	goto	u2855
  4395  0725  3001               	movlw	1
  4396  0726  00F4               	movwf	??___awmod
  4397  0727  0874               	movf	??___awmod,w
  4398  0728  07A4               	addwf	___awmod@counter,f
  4399  0729  2F1E               	goto	l3267
  4400  072A                     l3269:	
  4401  072A  0821               	movf	___awmod@divisor+1,w
  4402  072B  0223               	subwf	___awmod@dividend+1,w
  4403  072C  1D03               	skipz
  4404  072D  2F30               	goto	u2875
  4405  072E  0820               	movf	___awmod@divisor,w
  4406  072F  0222               	subwf	___awmod@dividend,w
  4407  0730                     u2875:	
  4408  0730  1C03               	skipc
  4409  0731  2F36               	goto	l3273
  4410  0732  0820               	movf	___awmod@divisor,w
  4411  0733  02A2               	subwf	___awmod@dividend,f
  4412  0734  0821               	movf	___awmod@divisor+1,w
  4413  0735  3BA3               	subwfb	___awmod@dividend+1,f
  4414  0736                     l3273:	
  4415  0736  3001               	movlw	1
  4416  0737                     u2885:	
  4417  0737  36A1               	lsrf	___awmod@divisor+1,f
  4418  0738  0CA0               	rrf	___awmod@divisor,f
  4419  0739  0B89               	decfsz	9,f
  4420  073A  2F37               	goto	u2885
  4421  073B  3001               	movlw	1
  4422  073C  02A4               	subwf	___awmod@counter,f
  4423  073D  1D03               	btfss	3,2
  4424  073E  2F2A               	goto	l3269
  4425  073F                     l3277:	
  4426  073F  0825               	movf	___awmod@sign,w
  4427  0740  1903               	btfsc	3,2
  4428  0741  2F47               	goto	l3281
  4429  0742  09A2               	comf	___awmod@dividend,f
  4430  0743  09A3               	comf	___awmod@dividend+1,f
  4431  0744  0AA2               	incf	___awmod@dividend,f
  4432  0745  1903               	skipnz
  4433  0746  0AA3               	incf	___awmod@dividend+1,f
  4434  0747                     l3281:	
  4435  0747  0823               	movf	___awmod@dividend+1,w
  4436  0748  00A1               	movwf	?___awmod+1
  4437  0749  0822               	movf	___awmod@dividend,w
  4438  074A  00A0               	movwf	?___awmod
  4439  074B  0008               	return
  4440  074C                     __end_of___awmod:	
  4441                           
  4442                           	psect	text12
  4443  06B4                     __ptext12:	
  4444 ;; *************** function ___awdiv *****************
  4445 ;; Defined at:
  4446 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  divisor         2    0[BANK0 ] int 
  4449 ;;  dividend        2    2[BANK0 ] int 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  quotient        2    6[BANK0 ] int 
  4452 ;;  sign            1    5[BANK0 ] unsigned char 
  4453 ;;  counter         1    4[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    0[BANK0 ] int 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4463 ;;      Params:         0       4       0       0       0       0
  4464 ;;      Locals:         0       4       0       0       0       0
  4465 ;;      Temps:          1       0       0       0       0       0
  4466 ;;      Totals:         1       8       0       0       0       0
  4467 ;;Total ram usage:        9 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    2
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_putdec_UARTb
  4474 ;;		_putdec_UART
  4475 ;; This function uses a non-reentrant model
  4476 ;;
  4477                           
  4478                           
  4479                           ;psect for function ___awdiv
  4480  06B4                     ___awdiv:	
  4481                           
  4482                           ;incstack = 0
  4483                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4484  06B4  0020               	movlb	0	; select bank0
  4485  06B5  01A5               	clrf	___awdiv@sign
  4486  06B6  1FA1               	btfss	___awdiv@divisor+1,7
  4487  06B7  2EBF               	goto	l3211
  4488  06B8  09A0               	comf	___awdiv@divisor,f
  4489  06B9  09A1               	comf	___awdiv@divisor+1,f
  4490  06BA  0AA0               	incf	___awdiv@divisor,f
  4491  06BB  1903               	skipnz
  4492  06BC  0AA1               	incf	___awdiv@divisor+1,f
  4493  06BD  01A5               	clrf	___awdiv@sign
  4494  06BE  0AA5               	incf	___awdiv@sign,f
  4495  06BF                     l3211:	
  4496  06BF  1FA3               	btfss	___awdiv@dividend+1,7
  4497  06C0  2ECA               	goto	l3217
  4498  06C1  09A2               	comf	___awdiv@dividend,f
  4499  06C2  09A3               	comf	___awdiv@dividend+1,f
  4500  06C3  0AA2               	incf	___awdiv@dividend,f
  4501  06C4  1903               	skipnz
  4502  06C5  0AA3               	incf	___awdiv@dividend+1,f
  4503  06C6  3001               	movlw	1
  4504  06C7  00F4               	movwf	??___awdiv
  4505  06C8  0874               	movf	??___awdiv,w
  4506  06C9  06A5               	xorwf	___awdiv@sign,f
  4507  06CA                     l3217:	
  4508  06CA  01A6               	clrf	___awdiv@quotient
  4509  06CB  01A7               	clrf	___awdiv@quotient+1
  4510  06CC  0820               	movf	___awdiv@divisor,w
  4511  06CD  0421               	iorwf	___awdiv@divisor+1,w
  4512  06CE  1903               	btfsc	3,2
  4513  06CF  2EF9               	goto	l3239
  4514  06D0  01A4               	clrf	___awdiv@counter
  4515  06D1  0AA4               	incf	___awdiv@counter,f
  4516  06D2                     l3227:	
  4517  06D2  1BA1               	btfsc	___awdiv@divisor+1,7
  4518  06D3  2EDE               	goto	l3229
  4519  06D4  3001               	movlw	1
  4520  06D5                     u2755:	
  4521  06D5  35A0               	lslf	___awdiv@divisor,f
  4522  06D6  0DA1               	rlf	___awdiv@divisor+1,f
  4523  06D7  0B89               	decfsz	9,f
  4524  06D8  2ED5               	goto	u2755
  4525  06D9  3001               	movlw	1
  4526  06DA  00F4               	movwf	??___awdiv
  4527  06DB  0874               	movf	??___awdiv,w
  4528  06DC  07A4               	addwf	___awdiv@counter,f
  4529  06DD  2ED2               	goto	l3227
  4530  06DE                     l3229:	
  4531  06DE  3001               	movlw	1
  4532  06DF                     u2775:	
  4533  06DF  35A6               	lslf	___awdiv@quotient,f
  4534  06E0  0DA7               	rlf	___awdiv@quotient+1,f
  4535  06E1  0B89               	decfsz	9,f
  4536  06E2  2EDF               	goto	u2775
  4537  06E3  0821               	movf	___awdiv@divisor+1,w
  4538  06E4  0223               	subwf	___awdiv@dividend+1,w
  4539  06E5  1D03               	skipz
  4540  06E6  2EE9               	goto	u2785
  4541  06E7  0820               	movf	___awdiv@divisor,w
  4542  06E8  0222               	subwf	___awdiv@dividend,w
  4543  06E9                     u2785:	
  4544  06E9  1C03               	skipc
  4545  06EA  2EF0               	goto	l3235
  4546  06EB  0820               	movf	___awdiv@divisor,w
  4547  06EC  02A2               	subwf	___awdiv@dividend,f
  4548  06ED  0821               	movf	___awdiv@divisor+1,w
  4549  06EE  3BA3               	subwfb	___awdiv@dividend+1,f
  4550  06EF  1426               	bsf	___awdiv@quotient,0
  4551  06F0                     l3235:	
  4552  06F0  3001               	movlw	1
  4553  06F1                     u2795:	
  4554  06F1  36A1               	lsrf	___awdiv@divisor+1,f
  4555  06F2  0CA0               	rrf	___awdiv@divisor,f
  4556  06F3  0B89               	decfsz	9,f
  4557  06F4  2EF1               	goto	u2795
  4558  06F5  3001               	movlw	1
  4559  06F6  02A4               	subwf	___awdiv@counter,f
  4560  06F7  1D03               	btfss	3,2
  4561  06F8  2EDE               	goto	l3229
  4562  06F9                     l3239:	
  4563  06F9  0825               	movf	___awdiv@sign,w
  4564  06FA  1903               	btfsc	3,2
  4565  06FB  2F01               	goto	l3243
  4566  06FC  09A6               	comf	___awdiv@quotient,f
  4567  06FD  09A7               	comf	___awdiv@quotient+1,f
  4568  06FE  0AA6               	incf	___awdiv@quotient,f
  4569  06FF  1903               	skipnz
  4570  0700  0AA7               	incf	___awdiv@quotient+1,f
  4571  0701                     l3243:	
  4572  0701  0827               	movf	___awdiv@quotient+1,w
  4573  0702  00A1               	movwf	?___awdiv+1
  4574  0703  0826               	movf	___awdiv@quotient,w
  4575  0704  00A0               	movwf	?___awdiv
  4576  0705  0008               	return
  4577  0706                     __end_of___awdiv:	
  4578                           
  4579                           	psect	text13
  4580  0FBF                     __ptext13:	
  4581 ;; *************** function _Init *****************
  4582 ;; Defined at:
  4583 ;;		line 339 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\newmain.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;  eccp_config     3   10[BANK0 ] struct _eccp_config_st
  4588 ;; Return value:  Size  Location     Type
  4589 ;;		None               void
  4590 ;; Registers used:
  4591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4597 ;;      Params:         0       0       0       0       0       0
  4598 ;;      Locals:         0       3       0       0       0       0
  4599 ;;      Temps:          0       1       0       0       0       0
  4600 ;;      Totals:         0       4       0       0       0       0
  4601 ;;Total ram usage:        4 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    4
  4604 ;; This function calls:
  4605 ;;		_AD_Init
  4606 ;;		_ECCP1_Init
  4607 ;;		_ECCP2_Init
  4608 ;;		_TMR4_Interrupt_set
  4609 ;;		_UART_Init
  4610 ;;		_eccp_config_param_init
  4611 ;;		_tmr0_Init
  4612 ;; This function is called by:
  4613 ;;		_main
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _Init
  4619  0FBF                     _Init:	
  4620                           
  4621                           ;newmain.c: 340: OSCCONbits.IRCF = 0b1110;
  4622                           
  4623                           ;incstack = 0
  4624                           ; Regs used in _Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4625  0FBF  0021               	movlb	1	; select bank1
  4626  0FC0  0819               	movf	25,w	;volatile
  4627  0FC1  3987               	andlw	-121
  4628  0FC2  3870               	iorlw	112
  4629  0FC3  0099               	movwf	25	;volatile
  4630                           
  4631                           ;newmain.c: 345: TRISA = 0b11110011;
  4632  0FC4  30F3               	movlw	243
  4633  0FC5  008C               	movwf	12	;volatile
  4634                           
  4635                           ;newmain.c: 346: TRISB = 0b11111111;
  4636  0FC6  30FF               	movlw	255
  4637  0FC7  008D               	movwf	13	;volatile
  4638                           
  4639                           ;newmain.c: 347: ANSELA = 0b00010011;
  4640  0FC8  3013               	movlw	19
  4641  0FC9  0023               	movlb	3	; select bank3
  4642  0FCA  008C               	movwf	12	;volatile
  4643                           
  4644                           ;newmain.c: 349: LATA = 0b11111011;
  4645  0FCB  30FB               	movlw	251
  4646  0FCC  0022               	movlb	2	; select bank2
  4647  0FCD  008C               	movwf	12	;volatile
  4648                           
  4649                           ;newmain.c: 350: LATB = 0b11111111;
  4650  0FCE  30FF               	movlw	255
  4651  0FCF  008D               	movwf	13	;volatile
  4652                           
  4653                           ;newmain.c: 352: struct _eccp_config_st eccp_config;
  4654                           ;newmain.c: 353: eccp_config_param_init(&eccp_config);
  4655  0FD0  302A               	movlw	(low (Init@eccp_config| 0))& (0+255)
  4656  0FD1  318E  26FF  318F   	fcall	_eccp_config_param_init
  4657                           
  4658                           ;newmain.c: 354: eccp_config.PR_Value = 0xff/2;
  4659  0FD4  307F               	movlw	127
  4660  0FD5  0020               	movlb	0	; select bank0
  4661  0FD6  00A9               	movwf	??_Init
  4662  0FD7  0829               	movf	??_Init,w
  4663  0FD8  00AA               	movwf	Init@eccp_config
  4664                           
  4665                           ;newmain.c: 355: eccp_config.CCPnM = 0b1111;
  4666  0FD9  300F               	movlw	15
  4667  0FDA  00A9               	movwf	??_Init
  4668  0FDB  0829               	movf	??_Init,w
  4669  0FDC  00AB               	movwf	Init@eccp_config+1
  4670                           
  4671                           ;newmain.c: 356: eccp_config.PnM = 0b10;
  4672  0FDD  3002               	movlw	2
  4673  0FDE  00A9               	movwf	??_Init
  4674  0FDF  0829               	movf	??_Init,w
  4675  0FE0  00AC               	movwf	Init@eccp_config+2
  4676                           
  4677                           ;newmain.c: 357: ECCP2_Init(&eccp_config);
  4678  0FE1  302A               	movlw	(low (Init@eccp_config| 0))& (0+255)
  4679  0FE2  3187  274C  318F   	fcall	_ECCP2_Init
  4680                           
  4681                           ;newmain.c: 358: ECCP1_Init(&eccp_config);
  4682  0FE5  302A               	movlw	(low (Init@eccp_config| 0))& (0+255)
  4683  0FE6  3187  2792  318F   	fcall	_ECCP1_Init
  4684                           
  4685                           ;newmain.c: 359: TMR4_Interrupt_set(0b1001);
  4686  0FE9  3009               	movlw	9
  4687  0FEA  318E  26F0  318F   	fcall	_TMR4_Interrupt_set
  4688                           
  4689                           ;newmain.c: 361: TRISAbits.TRISA1 = 1;
  4690  0FED  0021               	movlb	1	; select bank1
  4691  0FEE  148C               	bsf	12,1	;volatile
  4692                           
  4693                           ;newmain.c: 362: ANSELAbits.ANSA1 = 1;
  4694  0FEF  0023               	movlb	3	; select bank3
  4695  0FF0  148C               	bsf	12,1	;volatile
  4696                           
  4697                           ;newmain.c: 365: AD_Init();
  4698  0FF1  318E  26C9  318F   	fcall	_AD_Init
  4699                           
  4700                           ;newmain.c: 368: OSCTUNEbits.TUN = 0;
  4701  0FF4  30C0               	movlw	-64
  4702  0FF5  0021               	movlb	1	; select bank1
  4703  0FF6  0598               	andwf	24,f	;volatile
  4704                           
  4705                           ;newmain.c: 369: tmr0_Init();
  4706  0FF7  318E  26AC  318F   	fcall	_tmr0_Init
  4707                           
  4708                           ;newmain.c: 371: UART_Init();
  4709  0FFA  318F  274A         	fcall	_UART_Init
  4710                           
  4711                           ;newmain.c: 372: LATA2 = 1;
  4712  0FFC  0022               	movlb	2	; select bank2
  4713  0FFD  150C               	bsf	12,2	;volatile
  4714                           
  4715                           ;newmain.c: 373: LATA3 = 0;
  4716  0FFE  118C               	bcf	12,3	;volatile
  4717  0FFF  0008               	return
  4718  1000                     __end_of_Init:	
  4719                           
  4720                           	psect	text14
  4721  0EAC                     __ptext14:	
  4722 ;; *************** function _tmr0_Init *****************
  4723 ;; Defined at:
  4724 ;;		line 5 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\tmr0.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;		None
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;		None
  4729 ;; Return value:  Size  Location     Type
  4730 ;;		None               void
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4738 ;;      Params:         0       0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used:    1
  4744 ;; Hardware stack levels required when called:    2
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_Init
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           
  4753                           ;psect for function _tmr0_Init
  4754  0EAC                     _tmr0_Init:	
  4755                           
  4756                           ;tmr0.c: 6: TMR0CS = 0;
  4757                           
  4758                           ;incstack = 0
  4759                           ; Regs used in _tmr0_Init: [wreg+status,2+status,0]
  4760  0EAC  0021               	movlb	1	; select bank1
  4761  0EAD  1295               	bcf	21,5	;volatile
  4762                           
  4763                           ;tmr0.c: 7: PSA = 0;
  4764  0EAE  1195               	bcf	21,3	;volatile
  4765                           
  4766                           ;tmr0.c: 8: OPTION_REGbits.PS = 0b111;
  4767  0EAF  3007               	movlw	7
  4768  0EB0  0495               	iorwf	21,f	;volatile
  4769                           
  4770                           ;tmr0.c: 10: TMR0IE = 1;
  4771  0EB1  168B               	bsf	11,5	;volatile
  4772                           
  4773                           ;tmr0.c: 11: PEIE = 1;
  4774  0EB2  170B               	bsf	11,6	;volatile
  4775                           
  4776                           ;tmr0.c: 12: GIE = 1;
  4777  0EB3  178B               	bsf	11,7	;volatile
  4778  0EB4  0008               	return
  4779  0EB5                     __end_of_tmr0_Init:	
  4780                           
  4781                           	psect	text15
  4782  0EFF                     __ptext15:	
  4783 ;; *************** function _eccp_config_param_init *****************
  4784 ;; Defined at:
  4785 ;;		line 125 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ECCP.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  eccp_config     1    wreg     PTR struct _eccp_config_
  4788 ;;		 -> Init@eccp_config(3), 
  4789 ;; Auto vars:     Size  Location     Type
  4790 ;;  eccp_config     1    5[COMMON] PTR struct _eccp_config_
  4791 ;;		 -> Init@eccp_config(3), 
  4792 ;; Return value:  Size  Location     Type
  4793 ;;		None               void
  4794 ;; Registers used:
  4795 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4801 ;;      Params:         0       0       0       0       0       0
  4802 ;;      Locals:         1       0       0       0       0       0
  4803 ;;      Temps:          1       0       0       0       0       0
  4804 ;;      Totals:         2       0       0       0       0       0
  4805 ;;Total ram usage:        2 bytes
  4806 ;; Hardware stack levels used:    1
  4807 ;; Hardware stack levels required when called:    2
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_Init
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           
  4816                           ;psect for function _eccp_config_param_init
  4817  0EFF                     _eccp_config_param_init:	
  4818                           
  4819                           ;incstack = 0
  4820                           ; Regs used in _eccp_config_param_init: [wreg+fsr1l+fsr1h+status,2+status,0]
  4821                           ;eccp_config_param_init@eccp_config stored from wreg
  4822  0EFF  00F5               	movwf	eccp_config_param_init@eccp_config
  4823                           
  4824                           ;ECCP.c: 126: eccp_config->PR_Value = 0xff;
  4825  0F00  30FF               	movlw	255
  4826  0F01  00F4               	movwf	??_eccp_config_param_init
  4827  0F02  0875               	movf	eccp_config_param_init@eccp_config,w
  4828  0F03  0086               	movwf	6
  4829  0F04  0187               	clrf	7
  4830  0F05  0874               	movf	??_eccp_config_param_init,w
  4831  0F06  0081               	movwf	1
  4832                           
  4833                           ;ECCP.c: 127: eccp_config->CCPnM = 0b1100;
  4834  0F07  300C               	movlw	12
  4835  0F08  00F4               	movwf	??_eccp_config_param_init
  4836  0F09  0A75               	incf	eccp_config_param_init@eccp_config,w
  4837  0F0A  0086               	movwf	6
  4838  0F0B  0187               	clrf	7
  4839  0F0C  0874               	movf	??_eccp_config_param_init,w
  4840  0F0D  0081               	movwf	1
  4841                           
  4842                           ;ECCP.c: 128: eccp_config->PnM = 0b00;
  4843  0F0E  0875               	movf	eccp_config_param_init@eccp_config,w
  4844  0F0F  3E02               	addlw	2
  4845  0F10  0086               	movwf	6
  4846  0F11  0187               	clrf	7
  4847  0F12  0181               	clrf	1
  4848  0F13  0008               	return
  4849  0F14                     __end_of_eccp_config_param_init:	
  4850                           
  4851                           	psect	text16
  4852  0F4A                     __ptext16:	
  4853 ;; *************** function _UART_Init *****************
  4854 ;; Defined at:
  4855 ;;		line 20 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f182
      +7.c"
  4856 ;; Parameters:    Size  Location     Type
  4857 ;;		None
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;		None
  4860 ;; Return value:  Size  Location     Type
  4861 ;;		None               void
  4862 ;; Registers used:
  4863 ;;		wreg, status,2
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4869 ;;      Params:         0       0       0       0       0       0
  4870 ;;      Locals:         0       0       0       0       0       0
  4871 ;;      Temps:          0       0       0       0       0       0
  4872 ;;      Totals:         0       0       0       0       0       0
  4873 ;;Total ram usage:        0 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    2
  4876 ;; This function calls:
  4877 ;;		Nothing
  4878 ;; This function is called by:
  4879 ;;		_Init
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           
  4884                           ;psect for function _UART_Init
  4885  0F4A                     _UART_Init:	
  4886                           
  4887                           ;uart_16f1827.c: 22: BRGH = 1;
  4888                           
  4889                           ;incstack = 0
  4890                           ; Regs used in _UART_Init: [wreg+status,2]
  4891  0F4A  0023               	movlb	3	; select bank3
  4892  0F4B  151E               	bsf	30,2	;volatile
  4893                           
  4894                           ;uart_16f1827.c: 23: SPBRGH = 0;
  4895  0F4C  019C               	clrf	28	;volatile
  4896                           
  4897                           ;uart_16f1827.c: 24: SPBRGL = 103;
  4898  0F4D  3067               	movlw	103
  4899  0F4E  009B               	movwf	27	;volatile
  4900                           
  4901                           ;uart_16f1827.c: 30: BRG16 = 0;
  4902  0F4F  119F               	bcf	31,3	;volatile
  4903                           
  4904                           ;uart_16f1827.c: 31: SYNC = 0;
  4905  0F50  121E               	bcf	30,4	;volatile
  4906                           
  4907                           ;uart_16f1827.c: 32: SPEN = 1;
  4908  0F51  179D               	bsf	29,7	;volatile
  4909                           
  4910                           ;uart_16f1827.c: 33: TX9 = 0;
  4911  0F52  131E               	bcf	30,6	;volatile
  4912                           
  4913                           ;uart_16f1827.c: 34: TXEN = 1;
  4914  0F53  169E               	bsf	30,5	;volatile
  4915                           
  4916                           ;uart_16f1827.c: 35: SENDB = 0;
  4917  0F54  119E               	bcf	30,3	;volatile
  4918                           
  4919                           ;uart_16f1827.c: 37: APFCON1bits.TXCKSEL = 0;
  4920  0F55  0022               	movlb	2	; select bank2
  4921  0F56  101E               	bcf	30,0	;volatile
  4922                           
  4923                           ;uart_16f1827.c: 38: TRISBbits.TRISB2 = 1;
  4924  0F57  0021               	movlb	1	; select bank1
  4925  0F58  150D               	bsf	13,2	;volatile
  4926                           
  4927                           ;uart_16f1827.c: 41: APFCON0bits.RXDTSEL = 0;
  4928  0F59  0022               	movlb	2	; select bank2
  4929  0F5A  139D               	bcf	29,7	;volatile
  4930                           
  4931                           ;uart_16f1827.c: 42: TRISBbits.TRISB1 = 1;
  4932  0F5B  0021               	movlb	1	; select bank1
  4933  0F5C  148D               	bsf	13,1	;volatile
  4934                           
  4935                           ;uart_16f1827.c: 43: ANSELBbits.ANSB1 = 0;
  4936  0F5D  0023               	movlb	3	; select bank3
  4937  0F5E  108D               	bcf	13,1	;volatile
  4938                           
  4939                           ;uart_16f1827.c: 44: CREN = 1;
  4940  0F5F  161D               	bsf	29,4	;volatile
  4941                           
  4942                           ;uart_16f1827.c: 48: RCIE = 1;
  4943  0F60  0021               	movlb	1	; select bank1
  4944  0F61  1691               	bsf	17,5	;volatile
  4945                           
  4946                           ;uart_16f1827.c: 49: PEIE = 1;
  4947  0F62  170B               	bsf	11,6	;volatile
  4948                           
  4949                           ;uart_16f1827.c: 50: GIE = 1;
  4950  0F63  178B               	bsf	11,7	;volatile
  4951                           
  4952                           ;uart_16f1827.c: 53: u1txbuff.head = 0;
  4953  0F64  0022               	movlb	2	; select bank2
  4954  0F65  01D2               	clrf	(_u1txbuff^(0+256)+50)
  4955                           
  4956                           ;uart_16f1827.c: 54: u1txbuff.end = 0;
  4957  0F66  01D3               	clrf	(_u1txbuff^(0+256)+51)
  4958  0F67  0008               	return
  4959  0F68                     __end_of_UART_Init:	
  4960                           
  4961                           	psect	text17
  4962  0EF0                     __ptext17:	
  4963 ;; *************** function _TMR4_Interrupt_set *****************
  4964 ;; Defined at:
  4965 ;;		line 88 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ECCP.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  ps              1    wreg     unsigned char 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;  ps              1    5[COMMON] unsigned char 
  4970 ;; Return value:  Size  Location     Type
  4971 ;;		None               void
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4979 ;;      Params:         0       0       0       0       0       0
  4980 ;;      Locals:         1       0       0       0       0       0
  4981 ;;      Temps:          1       0       0       0       0       0
  4982 ;;      Totals:         2       0       0       0       0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    2
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_Init
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993                           
  4994                           ;psect for function _TMR4_Interrupt_set
  4995  0EF0                     _TMR4_Interrupt_set:	
  4996                           
  4997                           ;incstack = 0
  4998                           ; Regs used in _TMR4_Interrupt_set: [wreg+status,2+status,0]
  4999                           ;TMR4_Interrupt_set@ps stored from wreg
  5000  0EF0  00F5               	movwf	TMR4_Interrupt_set@ps
  5001                           
  5002                           ;ECCP.c: 91: T4CONbits.T4OUTPS = ps;
  5003  0EF1  0875               	movf	TMR4_Interrupt_set@ps,w
  5004  0EF2  00F4               	movwf	??_TMR4_Interrupt_set
  5005  0EF3  0DF4               	rlf	??_TMR4_Interrupt_set,f
  5006  0EF4  0DF4               	rlf	??_TMR4_Interrupt_set,f
  5007  0EF5  0DF4               	rlf	??_TMR4_Interrupt_set,f
  5008  0EF6  0028               	movlb	8	; select bank8
  5009  0EF7  0817               	movf	23,w	;volatile
  5010  0EF8  0674               	xorwf	??_TMR4_Interrupt_set,w
  5011  0EF9  3987               	andlw	-121
  5012  0EFA  0674               	xorwf	??_TMR4_Interrupt_set,w
  5013  0EFB  0097               	movwf	23	;volatile
  5014                           
  5015                           ;ECCP.c: 92: TMR4IE = 1;
  5016  0EFC  0021               	movlb	1	; select bank1
  5017  0EFD  1493               	bsf	19,1	;volatile
  5018  0EFE  0008               	return
  5019  0EFF                     __end_of_TMR4_Interrupt_set:	
  5020                           
  5021                           	psect	text18
  5022  074C                     __ptext18:	
  5023 ;; *************** function _ECCP2_Init *****************
  5024 ;; Defined at:
  5025 ;;		line 59 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ECCP.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  eccp_config     1    wreg     PTR struct _eccp_config_
  5028 ;;		 -> Init@eccp_config(3), 
  5029 ;; Auto vars:     Size  Location     Type
  5030 ;;  eccp_config     1    8[BANK0 ] PTR struct _eccp_config_
  5031 ;;		 -> Init@eccp_config(3), 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;		None               void
  5034 ;; Registers used:
  5035 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5041 ;;      Params:         0       0       0       0       0       0
  5042 ;;      Locals:         0       1       0       0       0       0
  5043 ;;      Temps:          0       1       0       0       0       0
  5044 ;;      Totals:         0       2       0       0       0       0
  5045 ;;Total ram usage:        2 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    3
  5048 ;; This function calls:
  5049 ;;		_set_PWM_duty
  5050 ;; This function is called by:
  5051 ;;		_Init
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _ECCP2_Init
  5057  074C                     _ECCP2_Init:	
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _ECCP2_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5061                           ;ECCP2_Init@eccp_config stored from wreg
  5062  074C  0020               	movlb	0	; select bank0
  5063  074D  00A8               	movwf	ECCP2_Init@eccp_config
  5064                           
  5065                           ;ECCP.c: 60: APFCON0bits.CCP2SEL = 1;
  5066  074E  0022               	movlb	2	; select bank2
  5067  074F  159D               	bsf	29,3	;volatile
  5068                           
  5069                           ;ECCP.c: 61: APFCON0bits.P2BSEL = 1;
  5070  0750  161D               	bsf	29,4	;volatile
  5071                           
  5072                           ;ECCP.c: 65: TRISAbits.TRISA7 = 1;
  5073  0751  0021               	movlb	1	; select bank1
  5074  0752  178C               	bsf	12,7	;volatile
  5075                           
  5076                           ;ECCP.c: 66: TRISAbits.TRISA6 = 1;
  5077  0753  170C               	bsf	12,6	;volatile
  5078                           
  5079                           ;ECCP.c: 68: PR4 = eccp_config->PR_Value;
  5080  0754  0020               	movlb	0	; select bank0
  5081  0755  0828               	movf	ECCP2_Init@eccp_config,w
  5082  0756  0086               	movwf	6
  5083  0757  0187               	clrf	7
  5084  0758  0801               	movf	1,w
  5085  0759  0028               	movlb	8	; select bank8
  5086  075A  0096               	movwf	22	;volatile
  5087                           
  5088                           ;ECCP.c: 70: CCP2CONbits.CCP2M = eccp_config->CCPnM;
  5089  075B  0020               	movlb	0	; select bank0
  5090  075C  0A28               	incf	ECCP2_Init@eccp_config,w
  5091  075D  0086               	movwf	6
  5092  075E  0187               	clrf	7
  5093  075F  0025               	movlb	5	; select bank5
  5094  0760  081A               	movf	26,w	;volatile
  5095  0761  0601               	xorwf	1,w
  5096  0762  39F0               	andlw	-16
  5097  0763  0601               	xorwf	1,w
  5098  0764  009A               	movwf	26	;volatile
  5099                           
  5100                           ;ECCP.c: 71: CCP2CONbits.P2M = eccp_config->PnM;
  5101  0765  0020               	movlb	0	; select bank0
  5102  0766  0828               	movf	ECCP2_Init@eccp_config,w
  5103  0767  3E02               	addlw	2
  5104  0768  0086               	movwf	6
  5105  0769  0187               	clrf	7
  5106  076A  0801               	movf	1,w
  5107  076B  00A7               	movwf	??_ECCP2_Init
  5108  076C  0EA7               	swapf	??_ECCP2_Init,f
  5109  076D  0DA7               	rlf	??_ECCP2_Init,f
  5110  076E  0DA7               	rlf	??_ECCP2_Init,f
  5111  076F  0025               	movlb	5	; select bank5
  5112  0770  081A               	movf	26,w	;volatile
  5113  0771  0020               	movlb	0	; select bank0
  5114  0772  0627               	xorwf	??_ECCP2_Init,w
  5115  0773  393F               	andlw	-193
  5116  0774  0627               	xorwf	??_ECCP2_Init,w
  5117  0775  0025               	movlb	5	; select bank5
  5118  0776  009A               	movwf	26	;volatile
  5119                           
  5120                           ;ECCP.c: 72: CCP2ASbits.CCP2AS = 0b000;
  5121  0777  308F               	movlw	-113
  5122  0778  059C               	andwf	28,f	;volatile
  5123                           
  5124                           ;ECCP.c: 73: PWM2CONbits.P2DC = 2;
  5125  0779  081B               	movf	27,w	;volatile
  5126  077A  3980               	andlw	-128
  5127  077B  3802               	iorlw	2
  5128  077C  009B               	movwf	27	;volatile
  5129                           
  5130                           ;ECCP.c: 75: set_PWM_duty(2, 32);
  5131  077D  3020               	movlw	32
  5132  077E  00F4               	movwf	set_PWM_duty@duty
  5133  077F  3000               	movlw	0
  5134  0780  00F5               	movwf	set_PWM_duty@duty+1
  5135  0781  3002               	movlw	2
  5136  0782  3185  2596  3187   	fcall	_set_PWM_duty
  5137                           
  5138                           ;ECCP.c: 77: CCPTMRSbits.C2TSEL = 01;
  5139  0785  0025               	movlb	5	; select bank5
  5140  0786  081E               	movf	30,w	;volatile
  5141  0787  39F3               	andlw	-13
  5142  0788  3804               	iorlw	4
  5143  0789  009E               	movwf	30	;volatile
  5144                           
  5145                           ;ECCP.c: 78: T4CONbits.T4CKPS = 0b00;
  5146  078A  30FC               	movlw	-4
  5147  078B  0028               	movlb	8	; select bank8
  5148  078C  0597               	andwf	23,f	;volatile
  5149                           
  5150                           ;ECCP.c: 79: T4CONbits.TMR4ON = 1;
  5151  078D  1517               	bsf	23,2	;volatile
  5152  078E                     l180:	
  5153                           ;ECCP.c: 81: while(TMR4IF == 0);
  5154                           
  5155  078E  0020               	movlb	0	; select bank0
  5156  078F  1893               	btfsc	19,1	;volatile
  5157  0790  0008               	return
  5158  0791  2F8E               	goto	l180
  5159  0792                     __end_of_ECCP2_Init:	
  5160                           
  5161                           	psect	text19
  5162  0792                     __ptext19:	
  5163 ;; *************** function _ECCP1_Init *****************
  5164 ;; Defined at:
  5165 ;;		line 29 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ECCP.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  eccp_config     1    wreg     PTR struct _eccp_config_
  5168 ;;		 -> Init@eccp_config(3), 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  eccp_config     1    8[BANK0 ] PTR struct _eccp_config_
  5171 ;;		 -> Init@eccp_config(3), 
  5172 ;; Return value:  Size  Location     Type
  5173 ;;		None               void
  5174 ;; Registers used:
  5175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5176 ;; Tracked objects:
  5177 ;;		On entry : 0/0
  5178 ;;		On exit  : 0/0
  5179 ;;		Unchanged: 0/0
  5180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5181 ;;      Params:         0       0       0       0       0       0
  5182 ;;      Locals:         0       1       0       0       0       0
  5183 ;;      Temps:          0       1       0       0       0       0
  5184 ;;      Totals:         0       2       0       0       0       0
  5185 ;;Total ram usage:        2 bytes
  5186 ;; Hardware stack levels used:    1
  5187 ;; Hardware stack levels required when called:    3
  5188 ;; This function calls:
  5189 ;;		_set_PWM_duty
  5190 ;; This function is called by:
  5191 ;;		_Init
  5192 ;; This function uses a non-reentrant model
  5193 ;;
  5194                           
  5195                           
  5196                           ;psect for function _ECCP1_Init
  5197  0792                     _ECCP1_Init:	
  5198                           
  5199                           ;incstack = 0
  5200                           ; Regs used in _ECCP1_Init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5201                           ;ECCP1_Init@eccp_config stored from wreg
  5202  0792  0020               	movlb	0	; select bank0
  5203  0793  00A8               	movwf	ECCP1_Init@eccp_config
  5204                           
  5205                           ;ECCP.c: 30: APFCON0bits.CCP1SEL = 0;
  5206  0794  0022               	movlb	2	; select bank2
  5207  0795  101D               	bcf	29,0	;volatile
  5208                           
  5209                           ;ECCP.c: 34: TRISBbits.TRISB3 = 1;
  5210  0796  0021               	movlb	1	; select bank1
  5211  0797  158D               	bsf	13,3	;volatile
  5212                           
  5213                           ;ECCP.c: 35: TRISBbits.TRISB5 = 1;
  5214  0798  168D               	bsf	13,5	;volatile
  5215                           
  5216                           ;ECCP.c: 37: PR4 = eccp_config->PR_Value;
  5217  0799  0020               	movlb	0	; select bank0
  5218  079A  0828               	movf	ECCP1_Init@eccp_config,w
  5219  079B  0086               	movwf	6
  5220  079C  0187               	clrf	7
  5221  079D  0801               	movf	1,w
  5222  079E  0028               	movlb	8	; select bank8
  5223  079F  0096               	movwf	22	;volatile
  5224                           
  5225                           ;ECCP.c: 40: CCP1CONbits.CCP1M = eccp_config->CCPnM;
  5226  07A0  0020               	movlb	0	; select bank0
  5227  07A1  0A28               	incf	ECCP1_Init@eccp_config,w
  5228  07A2  0086               	movwf	6
  5229  07A3  0187               	clrf	7
  5230  07A4  0025               	movlb	5	; select bank5
  5231  07A5  0813               	movf	19,w	;volatile
  5232  07A6  0601               	xorwf	1,w
  5233  07A7  39F0               	andlw	-16
  5234  07A8  0601               	xorwf	1,w
  5235  07A9  0093               	movwf	19	;volatile
  5236                           
  5237                           ;ECCP.c: 41: CCP1CONbits.P1M = eccp_config->PnM;
  5238  07AA  0020               	movlb	0	; select bank0
  5239  07AB  0828               	movf	ECCP1_Init@eccp_config,w
  5240  07AC  3E02               	addlw	2
  5241  07AD  0086               	movwf	6
  5242  07AE  0187               	clrf	7
  5243  07AF  0801               	movf	1,w
  5244  07B0  00A7               	movwf	??_ECCP1_Init
  5245  07B1  0EA7               	swapf	??_ECCP1_Init,f
  5246  07B2  0DA7               	rlf	??_ECCP1_Init,f
  5247  07B3  0DA7               	rlf	??_ECCP1_Init,f
  5248  07B4  0025               	movlb	5	; select bank5
  5249  07B5  0813               	movf	19,w	;volatile
  5250  07B6  0020               	movlb	0	; select bank0
  5251  07B7  0627               	xorwf	??_ECCP1_Init,w
  5252  07B8  393F               	andlw	-193
  5253  07B9  0627               	xorwf	??_ECCP1_Init,w
  5254  07BA  0025               	movlb	5	; select bank5
  5255  07BB  0093               	movwf	19	;volatile
  5256                           
  5257                           ;ECCP.c: 42: CCP1ASbits.CCP1AS = 0b000;
  5258  07BC  308F               	movlw	-113
  5259  07BD  0595               	andwf	21,f	;volatile
  5260                           
  5261                           ;ECCP.c: 43: PWM1CONbits.P1DC = 2;
  5262  07BE  0814               	movf	20,w	;volatile
  5263  07BF  3980               	andlw	-128
  5264  07C0  3802               	iorlw	2
  5265  07C1  0094               	movwf	20	;volatile
  5266                           
  5267                           ;ECCP.c: 45: set_PWM_duty(1, 479);
  5268  07C2  30DF               	movlw	223
  5269  07C3  00F4               	movwf	set_PWM_duty@duty
  5270  07C4  3001               	movlw	1
  5271  07C5  00F5               	movwf	set_PWM_duty@duty+1
  5272  07C6  3001               	movlw	1
  5273  07C7  3185  2596  3187   	fcall	_set_PWM_duty
  5274                           
  5275                           ;ECCP.c: 47: CCPTMRSbits.C1TSEL = 01;
  5276  07CA  0025               	movlb	5	; select bank5
  5277  07CB  081E               	movf	30,w	;volatile
  5278  07CC  39FC               	andlw	-4
  5279  07CD  3801               	iorlw	1
  5280  07CE  009E               	movwf	30	;volatile
  5281                           
  5282                           ;ECCP.c: 48: T4CONbits.T4CKPS = 0b00;
  5283  07CF  30FC               	movlw	-4
  5284  07D0  0028               	movlb	8	; select bank8
  5285  07D1  0597               	andwf	23,f	;volatile
  5286                           
  5287                           ;ECCP.c: 49: T4CONbits.TMR4ON = 1;
  5288  07D2  1517               	bsf	23,2	;volatile
  5289  07D3                     l174:	
  5290                           ;ECCP.c: 51: while(TMR4IF == 0);
  5291                           
  5292  07D3  0020               	movlb	0	; select bank0
  5293  07D4  1893               	btfsc	19,1	;volatile
  5294  07D5  0008               	return
  5295  07D6  2FD3               	goto	l174
  5296  07D7                     __end_of_ECCP1_Init:	
  5297                           
  5298                           	psect	text20
  5299  0596                     __ptext20:	
  5300 ;; *************** function _set_PWM_duty *****************
  5301 ;; Defined at:
  5302 ;;		line 96 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ECCP.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  id              1    wreg     unsigned char 
  5305 ;;  duty            2    4[COMMON] int 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  id              1    6[BANK0 ] unsigned char 
  5308 ;; Return value:  Size  Location     Type
  5309 ;;		None               void
  5310 ;; Registers used:
  5311 ;;		wreg, status,2, status,0
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5317 ;;      Params:         2       0       0       0       0       0
  5318 ;;      Locals:         0       5       0       0       0       0
  5319 ;;      Temps:          0       2       0       0       0       0
  5320 ;;      Totals:         2       7       0       0       0       0
  5321 ;;Total ram usage:        9 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    2
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_set_halfbridge_duty
  5328 ;;		_stop_PWM
  5329 ;;		_ECCP1_Init
  5330 ;;		_ECCP2_Init
  5331 ;;		_set_motor_power
  5332 ;; This function uses a non-reentrant model
  5333 ;;
  5334                           
  5335                           
  5336                           ;psect for function _set_PWM_duty
  5337  0596                     _set_PWM_duty:	
  5338                           
  5339                           ;incstack = 0
  5340                           ; Regs used in _set_PWM_duty: [wreg+status,2+status,0]
  5341                           ;set_PWM_duty@id stored from wreg
  5342  0596  0020               	movlb	0	; select bank0
  5343  0597  00A6               	movwf	set_PWM_duty@id
  5344                           
  5345                           ;ECCP.c: 97: duty = ((((((duty)) > ((1023)) ? ((1023)):((duty)))) > ((0)) ? ((((duty)) >
      +                           ((1023)) ? ((1023)):((duty)))):((0))));
  5346  0598  0875               	movf	set_PWM_duty@duty+1,w
  5347  0599  3A80               	xorlw	128
  5348  059A  00A0               	movwf	??_set_PWM_duty
  5349  059B  3084               	movlw	132
  5350  059C  0220               	subwf	??_set_PWM_duty,w
  5351  059D  1D03               	skipz
  5352  059E  2DA1               	goto	u2535
  5353  059F  3000               	movlw	0
  5354  05A0  0274               	subwf	set_PWM_duty@duty,w
  5355  05A1                     u2535:	
  5356  05A1  1803               	skipnc
  5357  05A2  2DA9               	goto	l3017
  5358  05A3  0875               	movf	set_PWM_duty@duty+1,w
  5359  05A4  0020               	movlb	0	; select bank0
  5360  05A5  00A3               	movwf	_set_PWM_duty$524+1
  5361  05A6  0874               	movf	set_PWM_duty@duty,w
  5362  05A7  00A2               	movwf	_set_PWM_duty$524
  5363  05A8  2DAE               	goto	l196
  5364  05A9                     l3017:	
  5365  05A9  30FF               	movlw	255
  5366  05AA  0020               	movlb	0	; select bank0
  5367  05AB  00A2               	movwf	_set_PWM_duty$524
  5368  05AC  3003               	movlw	3
  5369  05AD  00A3               	movwf	_set_PWM_duty$524+1
  5370  05AE                     l196:	
  5371  05AE  0823               	movf	_set_PWM_duty$524+1,w
  5372  05AF  3A80               	xorlw	128
  5373  05B0  00A0               	movwf	??_set_PWM_duty
  5374  05B1  3080               	movlw	128
  5375  05B2  0220               	subwf	??_set_PWM_duty,w
  5376  05B3  1D03               	skipz
  5377  05B4  2DB7               	goto	u2545
  5378  05B5  3001               	movlw	1
  5379  05B6  0222               	subwf	_set_PWM_duty$524,w
  5380  05B7                     u2545:	
  5381  05B7  1803               	skipnc
  5382  05B8  2DBC               	goto	l3021
  5383  05B9  01F4               	clrf	set_PWM_duty@duty
  5384  05BA  01F5               	clrf	set_PWM_duty@duty+1
  5385  05BB  2DD7               	goto	l192
  5386  05BC                     l3021:	
  5387  05BC  0875               	movf	set_PWM_duty@duty+1,w
  5388  05BD  3A80               	xorlw	128
  5389  05BE  0020               	movlb	0	; select bank0
  5390  05BF  00A0               	movwf	??_set_PWM_duty
  5391  05C0  3084               	movlw	132
  5392  05C1  0220               	subwf	??_set_PWM_duty,w
  5393  05C2  1D03               	skipz
  5394  05C3  2DC6               	goto	u2555
  5395  05C4  3000               	movlw	0
  5396  05C5  0274               	subwf	set_PWM_duty@duty,w
  5397  05C6                     u2555:	
  5398  05C6  1803               	skipnc
  5399  05C7  2DCE               	goto	l3025
  5400  05C8  0875               	movf	set_PWM_duty@duty+1,w
  5401  05C9  0020               	movlb	0	; select bank0
  5402  05CA  00A5               	movwf	_set_PWM_duty$525+1
  5403  05CB  0874               	movf	set_PWM_duty@duty,w
  5404  05CC  00A4               	movwf	_set_PWM_duty$525
  5405  05CD  2DD3               	goto	l200
  5406  05CE                     l3025:	
  5407  05CE  30FF               	movlw	255
  5408  05CF  0020               	movlb	0	; select bank0
  5409  05D0  00A4               	movwf	_set_PWM_duty$525
  5410  05D1  3003               	movlw	3
  5411  05D2  00A5               	movwf	_set_PWM_duty$525+1
  5412  05D3                     l200:	
  5413  05D3  0825               	movf	_set_PWM_duty$525+1,w
  5414  05D4  00F5               	movwf	set_PWM_duty@duty+1
  5415  05D5  0824               	movf	_set_PWM_duty$525,w
  5416  05D6  00F4               	movwf	set_PWM_duty@duty
  5417  05D7                     l192:	
  5418                           
  5419                           ;ECCP.c: 99: if(duty < 14){
  5420  05D7  0875               	movf	set_PWM_duty@duty+1,w
  5421  05D8  3A80               	xorlw	128
  5422  05D9  0020               	movlb	0	; select bank0
  5423  05DA  00A0               	movwf	??_set_PWM_duty
  5424  05DB  3080               	movlw	128
  5425  05DC  0220               	subwf	??_set_PWM_duty,w
  5426  05DD  1D03               	skipz
  5427  05DE  2DE1               	goto	u2565
  5428  05DF  300E               	movlw	14
  5429  05E0  0274               	subwf	set_PWM_duty@duty,w
  5430  05E1                     u2565:	
  5431  05E1  1803               	skipnc
  5432  05E2  2DE5               	goto	l3029
  5433                           
  5434                           ;ECCP.c: 100: duty = 0;
  5435  05E3  01F4               	clrf	set_PWM_duty@duty
  5436  05E4  01F5               	clrf	set_PWM_duty@duty+1
  5437  05E5                     l3029:	
  5438                           
  5439                           ;ECCP.c: 101: }
  5440                           ;ECCP.c: 103: if(id == 1){
  5441  05E5  0020               	movlb	0	; select bank0
  5442  05E6  0326               	decf	set_PWM_duty@id,w
  5443  05E7  1D03               	btfss	3,2
  5444  05E8  2E0F               	goto	l3041
  5445                           
  5446                           ;ECCP.c: 104: CCPR1L = (duty >> 2);
  5447  05E9  0875               	movf	set_PWM_duty@duty+1,w
  5448  05EA  00A1               	movwf	??_set_PWM_duty+1
  5449  05EB  0874               	movf	set_PWM_duty@duty,w
  5450  05EC  00A0               	movwf	??_set_PWM_duty
  5451  05ED  0D21               	rlf	??_set_PWM_duty+1,w
  5452  05EE  0CA1               	rrf	??_set_PWM_duty+1,f
  5453  05EF  0CA0               	rrf	??_set_PWM_duty,f
  5454  05F0  0D21               	rlf	??_set_PWM_duty+1,w
  5455  05F1  0CA1               	rrf	??_set_PWM_duty+1,f
  5456  05F2  0CA0               	rrf	??_set_PWM_duty,f
  5457  05F3  0820               	movf	??_set_PWM_duty,w
  5458  05F4  0025               	movlb	5	; select bank5
  5459  05F5  0091               	movwf	17	;volatile
  5460                           
  5461                           ;ECCP.c: 105: CCP1CONbits.DC1B = (duty & 0x03);
  5462  05F6  0874               	movf	set_PWM_duty@duty,w
  5463  05F7  3903               	andlw	3
  5464  05F8  0020               	movlb	0	; select bank0
  5465  05F9  00A0               	movwf	??_set_PWM_duty
  5466  05FA  0EA0               	swapf	??_set_PWM_duty,f
  5467  05FB  0025               	movlb	5	; select bank5
  5468  05FC  0813               	movf	19,w	;volatile
  5469  05FD  0020               	movlb	0	; select bank0
  5470  05FE  0620               	xorwf	??_set_PWM_duty,w
  5471  05FF  39CF               	andlw	-49
  5472  0600  0620               	xorwf	??_set_PWM_duty,w
  5473  0601  0025               	movlb	5	; select bank5
  5474  0602  0093               	movwf	19	;volatile
  5475                           
  5476                           ;ECCP.c: 106: if(duty == 0){
  5477  0603  0874               	movf	set_PWM_duty@duty,w
  5478  0604  0475               	iorwf	set_PWM_duty@duty+1,w
  5479  0605  1D03               	btfss	3,2
  5480  0606  2E0A               	goto	l3039
  5481                           
  5482                           ;ECCP.c: 107: PWM1CONbits.P1DC = 0;
  5483  0607  3080               	movlw	-128
  5484  0608  0594               	andwf	20,f	;volatile
  5485                           
  5486                           ;ECCP.c: 108: }
  5487  0609  0008               	return
  5488  060A                     l3039:	
  5489                           
  5490                           ;ECCP.c: 109: else{
  5491                           ;ECCP.c: 110: PWM1CONbits.P1DC = 2;
  5492  060A  0814               	movf	20,w	;volatile
  5493  060B  3980               	andlw	-128
  5494  060C  3802               	iorlw	2
  5495  060D  0094               	movwf	20	;volatile
  5496                           
  5497                           ;ECCP.c: 111: }
  5498                           ;ECCP.c: 112: }
  5499  060E  0008               	return
  5500  060F                     l3041:	
  5501                           
  5502                           ;ECCP.c: 113: else if(id == 2){
  5503  060F  3002               	movlw	2
  5504  0610  0020               	movlb	0	; select bank0
  5505  0611  0626               	xorwf	set_PWM_duty@id,w
  5506  0612  1D03               	btfss	3,2
  5507  0613  0008               	return
  5508                           
  5509                           ;ECCP.c: 114: CCPR2L = (duty >> 2);
  5510  0614  0875               	movf	set_PWM_duty@duty+1,w
  5511  0615  00A1               	movwf	??_set_PWM_duty+1
  5512  0616  0874               	movf	set_PWM_duty@duty,w
  5513  0617  00A0               	movwf	??_set_PWM_duty
  5514  0618  0D21               	rlf	??_set_PWM_duty+1,w
  5515  0619  0CA1               	rrf	??_set_PWM_duty+1,f
  5516  061A  0CA0               	rrf	??_set_PWM_duty,f
  5517  061B  0D21               	rlf	??_set_PWM_duty+1,w
  5518  061C  0CA1               	rrf	??_set_PWM_duty+1,f
  5519  061D  0CA0               	rrf	??_set_PWM_duty,f
  5520  061E  0820               	movf	??_set_PWM_duty,w
  5521  061F  0025               	movlb	5	; select bank5
  5522  0620  0098               	movwf	24	;volatile
  5523                           
  5524                           ;ECCP.c: 115: CCP2CONbits.DC2B = (duty & 0x03);
  5525  0621  0874               	movf	set_PWM_duty@duty,w
  5526  0622  3903               	andlw	3
  5527  0623  0020               	movlb	0	; select bank0
  5528  0624  00A0               	movwf	??_set_PWM_duty
  5529  0625  0EA0               	swapf	??_set_PWM_duty,f
  5530  0626  0025               	movlb	5	; select bank5
  5531  0627  081A               	movf	26,w	;volatile
  5532  0628  0020               	movlb	0	; select bank0
  5533  0629  0620               	xorwf	??_set_PWM_duty,w
  5534  062A  39CF               	andlw	-49
  5535  062B  0620               	xorwf	??_set_PWM_duty,w
  5536  062C  0025               	movlb	5	; select bank5
  5537  062D  009A               	movwf	26	;volatile
  5538                           
  5539                           ;ECCP.c: 116: if(duty == 0){
  5540  062E  0874               	movf	set_PWM_duty@duty,w
  5541  062F  0475               	iorwf	set_PWM_duty@duty+1,w
  5542  0630  1D03               	btfss	3,2
  5543  0631  2E35               	goto	l3051
  5544                           
  5545                           ;ECCP.c: 117: PWM2CONbits.P2DC = 0;
  5546  0632  3080               	movlw	-128
  5547  0633  059B               	andwf	27,f	;volatile
  5548                           
  5549                           ;ECCP.c: 118: }
  5550  0634  0008               	return
  5551  0635                     l3051:	
  5552                           
  5553                           ;ECCP.c: 119: else{
  5554                           ;ECCP.c: 120: PWM2CONbits.P2DC = 2;
  5555  0635  081B               	movf	27,w	;volatile
  5556  0636  3980               	andlw	-128
  5557  0637  3802               	iorlw	2
  5558  0638  009B               	movwf	27	;volatile
  5559  0639  0008               	return
  5560  063A                     __end_of_set_PWM_duty:	
  5561                           
  5562                           	psect	text21
  5563  0EC9                     __ptext21:	
  5564 ;; *************** function _AD_Init *****************
  5565 ;; Defined at:
  5566 ;;		line 13 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ADC.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;		None               void
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5580 ;;      Params:         0       0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0
  5583 ;;      Totals:         0       0       0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used:    1
  5586 ;; Hardware stack levels required when called:    2
  5587 ;; This function calls:
  5588 ;;		Nothing
  5589 ;; This function is called by:
  5590 ;;		_Init
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           
  5595                           ;psect for function _AD_Init
  5596  0EC9                     _AD_Init:	
  5597                           
  5598                           ;ADC.c: 14: ADCON1bits.ADCS = 0b101;
  5599                           
  5600                           ;incstack = 0
  5601                           ; Regs used in _AD_Init: [wreg+status,2+status,0]
  5602  0EC9  0021               	movlb	1	; select bank1
  5603  0ECA  081E               	movf	30,w	;volatile
  5604  0ECB  398F               	andlw	-113
  5605  0ECC  3850               	iorlw	80
  5606  0ECD  009E               	movwf	30	;volatile
  5607                           
  5608                           ;ADC.c: 15: ADCON1bits.ADNREF = 0;
  5609  0ECE  111E               	bcf	30,2	;volatile
  5610                           
  5611                           ;ADC.c: 16: ADCON1bits.ADPREF = 0b00;
  5612  0ECF  30FC               	movlw	-4
  5613  0ED0  059E               	andwf	30,f	;volatile
  5614                           
  5615                           ;ADC.c: 17: ADCON1bits.ADFM = 1;
  5616  0ED1  179E               	bsf	30,7	;volatile
  5617                           
  5618                           ;ADC.c: 18: ADCON0bits.ADON = 1;
  5619  0ED2  141D               	bsf	29,0	;volatile
  5620  0ED3  0008               	return
  5621  0ED4                     __end_of_AD_Init:	
  5622                           
  5623                           	psect	text22
  5624  0F8F                     __ptext22:	
  5625 ;; *************** function _Get_AD_data *****************
  5626 ;; Defined at:
  5627 ;;		line 22 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\ADC.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  chs             1    wreg     unsigned char 
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  chs             1    3[BANK0 ] unsigned char 
  5632 ;;  data            2    4[BANK0 ] unsigned int 
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  2    4[COMMON] unsigned int 
  5635 ;; Registers used:
  5636 ;;		wreg, status,2, status,0
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5642 ;;      Params:         2       0       0       0       0       0
  5643 ;;      Locals:         0       3       0       0       0       0
  5644 ;;      Temps:          0       3       0       0       0       0
  5645 ;;      Totals:         2       6       0       0       0       0
  5646 ;;Total ram usage:        8 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    2
  5649 ;; This function calls:
  5650 ;;		Nothing
  5651 ;; This function is called by:
  5652 ;;		_main
  5653 ;; This function uses a non-reentrant model
  5654 ;;
  5655                           
  5656                           
  5657                           ;psect for function _Get_AD_data
  5658  0F8F                     _Get_AD_data:	
  5659                           
  5660                           ;incstack = 0
  5661                           ; Regs used in _Get_AD_data: [wreg+status,2+status,0]
  5662                           ;Get_AD_data@chs stored from wreg
  5663  0F8F  0020               	movlb	0	; select bank0
  5664  0F90  00A3               	movwf	Get_AD_data@chs
  5665                           
  5666                           ;ADC.c: 23: unsigned int data;
  5667                           ;ADC.c: 24: ADCON0bits.CHS = chs;
  5668  0F91  0823               	movf	Get_AD_data@chs,w
  5669  0F92  00A0               	movwf	??_Get_AD_data
  5670  0F93  0DA0               	rlf	??_Get_AD_data,f
  5671  0F94  0DA0               	rlf	??_Get_AD_data,f
  5672  0F95  0021               	movlb	1	; select bank1
  5673  0F96  081D               	movf	29,w	;volatile
  5674  0F97  0020               	movlb	0	; select bank0
  5675  0F98  0620               	xorwf	??_Get_AD_data,w
  5676  0F99  3983               	andlw	-125
  5677  0F9A  0620               	xorwf	??_Get_AD_data,w
  5678  0F9B  0021               	movlb	1	; select bank1
  5679  0F9C  009D               	movwf	29	;volatile
  5680                           
  5681                           ;ADC.c: 25: _delay((unsigned long)((20)*(32000000/4000000.0)));
  5682  0F9D  3035               	movlw	53
  5683  0F9E  0020               	movlb	0	; select bank0
  5684  0F9F  00A0               	movwf	??_Get_AD_data
  5685  0FA0                     u3547:	
  5686  0FA0  0BA0               	decfsz	??_Get_AD_data,f
  5687  0FA1  2FA0               	goto	u3547
  5688                           
  5689                           ;ADC.c: 26: ADCON0bits.GO_nDONE = 1;
  5690  0FA2  0021               	movlb	1	; select bank1
  5691  0FA3  149D               	bsf	29,1	;volatile
  5692  0FA4                     l16:	
  5693                           ;ADC.c: 27: while(ADCON0bits.GO_nDONE);
  5694                           
  5695  0FA4  189D               	btfsc	29,1	;volatile
  5696  0FA5  2FA4               	goto	l16
  5697                           
  5698                           ;ADC.c: 28: data = ADRESL;
  5699  0FA6  081B               	movf	27,w	;volatile
  5700  0FA7  0020               	movlb	0	; select bank0
  5701  0FA8  00A0               	movwf	??_Get_AD_data
  5702  0FA9  01A1               	clrf	??_Get_AD_data+1
  5703  0FAA  0820               	movf	??_Get_AD_data,w
  5704  0FAB  00A4               	movwf	Get_AD_data@data
  5705  0FAC  0821               	movf	??_Get_AD_data+1,w
  5706  0FAD  00A5               	movwf	Get_AD_data@data+1
  5707                           
  5708                           ;ADC.c: 29: data += (ADRESH << 8);
  5709  0FAE  0021               	movlb	1	; select bank1
  5710  0FAF  081C               	movf	28,w	;volatile
  5711  0FB0  0020               	movlb	0	; select bank0
  5712  0FB1  00A0               	movwf	??_Get_AD_data
  5713  0FB2  01A1               	clrf	??_Get_AD_data+1
  5714  0FB3  0820               	movf	??_Get_AD_data,w
  5715  0FB4  00A1               	movwf	??_Get_AD_data+1
  5716  0FB5  01A0               	clrf	??_Get_AD_data
  5717  0FB6  0820               	movf	??_Get_AD_data,w
  5718  0FB7  07A4               	addwf	Get_AD_data@data,f
  5719  0FB8  0821               	movf	??_Get_AD_data+1,w
  5720  0FB9  3DA5               	addwfc	Get_AD_data@data+1,f
  5721                           
  5722                           ;ADC.c: 30: return data;
  5723  0FBA  0825               	movf	Get_AD_data@data+1,w
  5724  0FBB  00F5               	movwf	?_Get_AD_data+1
  5725  0FBC  0824               	movf	Get_AD_data@data,w
  5726  0FBD  00F4               	movwf	?_Get_AD_data
  5727  0FBE  0008               	return
  5728  0FBF                     __end_of_Get_AD_data:	
  5729                           
  5730                           	psect	intentry
  5731  0004                     __pintentry:	
  5732 ;; *************** function __ISR *****************
  5733 ;; Defined at:
  5734 ;;		line 376 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\newmain.c"
  5735 ;; Parameters:    Size  Location     Type
  5736 ;;		None
  5737 ;; Auto vars:     Size  Location     Type
  5738 ;;  sum             1    3[COMMON] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;		None               void
  5741 ;; Registers used:
  5742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5748 ;;      Params:         0       0       0       0       0       0
  5749 ;;      Locals:         1       0       0       0       0       0
  5750 ;;      Temps:          2       0       0       0       0       0
  5751 ;;      Totals:         3       0       0       0       0       0
  5752 ;;Total ram usage:        3 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    1
  5755 ;; This function calls:
  5756 ;;		_roop_manager
  5757 ;;		i1_putc_UART
  5758 ;; This function is called by:
  5759 ;;		Interrupt level 1
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763  0004                     __ISR:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in __ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5767  0004  3180               	pagesel	$
  5768  0005  0020               	movlb	0	; select bank0
  5769  0006  087F               	movf	127,w
  5770  0007  00F2               	movwf	??__ISR+1
  5771                           
  5772                           ;newmain.c: 377: static uint8_t rc_count = 0;
  5773                           ;newmain.c: 378: static uint8_t rc_busy = 0;
  5774                           ;newmain.c: 379: static uint8_t rc_t_count = 0;
  5775                           ;newmain.c: 380: if(TMR0IE && TMR0IF){
  5776  0008  1A8B               	btfsc	11,5	;volatile
  5777  0009  1D0B               	btfss	11,2	;volatile
  5778  000A  280E               	goto	i1l2823
  5779                           
  5780                           ;newmain.c: 381: TMR0IF = 0;
  5781  000B  110B               	bcf	11,2	;volatile
  5782                           
  5783                           ;newmain.c: 383: TMR0 = 56;
  5784  000C  3038               	movlw	56
  5785  000D  0095               	movwf	21	;volatile
  5786  000E                     i1l2823:	
  5787                           
  5788                           ;newmain.c: 387: }
  5789                           ;newmain.c: 388: static uint16_t count = 0;
  5790                           ;newmain.c: 389: static uint16_t comm_error_count = 0;
  5791                           ;newmain.c: 390: if(TMR4IE && TMR4IF){
  5792  000E  0021               	movlb	1	; select bank1
  5793  000F  1C93               	btfss	19,1	;volatile
  5794  0010  2849               	goto	i1l2851
  5795  0011  0020               	movlb	0	; select bank0
  5796  0012  1C93               	btfss	19,1	;volatile
  5797  0013  2849               	goto	i1l2851
  5798                           
  5799                           ;newmain.c: 391: TMR4IF = 0;
  5800  0014  1093               	bcf	19,1	;volatile
  5801                           
  5802                           ;newmain.c: 392: count++;
  5803  0015  3001               	movlw	1
  5804  0016  0021               	movlb	1	; select bank1
  5805  0017  07D9               	addwf	__ISR@count^(0+128),f
  5806  0018  3000               	movlw	0
  5807  0019  3DDA               	addwfc	(__ISR@count+1)^(0+128),f
  5808                           
  5809                           ;newmain.c: 393: if(count > 5){
  5810  001A  3000               	movlw	0
  5811  001B  025A               	subwf	(__ISR@count+1)^(0+128),w
  5812  001C  3006               	movlw	6
  5813  001D  1903               	skipnz
  5814  001E  0259               	subwf	__ISR@count^(0+128),w
  5815  001F  1C03               	skipc
  5816  0020  2826               	goto	i1l2835
  5817                           
  5818                           ;newmain.c: 394: count = 0;
  5819  0021  01D9               	clrf	__ISR@count^(0+128)
  5820  0022  01DA               	clrf	(__ISR@count+1)^(0+128)
  5821                           
  5822                           ;newmain.c: 395: roop_manager();
  5823  0023  318E  2699  3180   	fcall	_roop_manager
  5824  0026                     i1l2835:	
  5825                           
  5826                           ;newmain.c: 396: }
  5827                           ;newmain.c: 397: if(rc_busy){
  5828  0026  0020               	movlb	0	; select bank0
  5829  0027  0848               	movf	__ISR@rc_busy,w
  5830  0028  1903               	btfsc	3,2
  5831  0029  2834               	goto	i1l2843
  5832                           
  5833                           ;newmain.c: 398: rc_t_count++;
  5834  002A  3001               	movlw	1
  5835  002B  00F1               	movwf	??__ISR
  5836  002C  0871               	movf	??__ISR,w
  5837  002D  07C9               	addwf	__ISR@rc_t_count,f
  5838                           
  5839                           ;newmain.c: 399: if(rc_t_count > 10){
  5840  002E  300B               	movlw	11
  5841  002F  0249               	subwf	__ISR@rc_t_count,w
  5842  0030  1C03               	skipc
  5843  0031  2834               	goto	i1l2843
  5844                           
  5845                           ;newmain.c: 400: rc_count = 0;
  5846  0032  01F8               	clrf	__ISR@rc_count
  5847                           
  5848                           ;newmain.c: 401: rc_success = 0;
  5849  0033  01CD               	clrf	_rc_success
  5850  0034                     i1l2843:	
  5851                           
  5852                           ;newmain.c: 402: }
  5853                           ;newmain.c: 403: }
  5854                           ;newmain.c: 404: if(rc_success == 0){
  5855  0034  084D               	movf	_rc_success,w
  5856  0035  1D03               	btfss	3,2
  5857  0036  2846               	goto	i1l2849
  5858                           
  5859                           ;newmain.c: 405: comm_error_count++;
  5860  0037  3001               	movlw	1
  5861  0038  0021               	movlb	1	; select bank1
  5862  0039  07D7               	addwf	__ISR@comm_error_count^(0+128),f
  5863  003A  3000               	movlw	0
  5864  003B  3DD8               	addwfc	(__ISR@comm_error_count+1)^(0+128),f
  5865                           
  5866                           ;newmain.c: 406: if(comm_error_count > 1000){
  5867  003C  3003               	movlw	3
  5868  003D  0258               	subwf	(__ISR@comm_error_count+1)^(0+128),w
  5869  003E  30E9               	movlw	233
  5870  003F  1903               	skipnz
  5871  0040  0257               	subwf	__ISR@comm_error_count^(0+128),w
  5872  0041  1C03               	skipc
  5873  0042  2849               	goto	i1l2851
  5874                           
  5875                           ;newmain.c: 407: output = DISABLE;
  5876  0043  01DB               	clrf	_output^(0+128)
  5877  0044  01DC               	clrf	(_output+1)^(0+128)
  5878                           
  5879                           ;newmain.c: 408: }
  5880                           ;newmain.c: 409: }
  5881  0045  2849               	goto	i1l2851
  5882  0046                     i1l2849:	
  5883                           
  5884                           ;newmain.c: 410: else{
  5885                           ;newmain.c: 411: comm_error_count = 0;
  5886  0046  0021               	movlb	1	; select bank1
  5887  0047  01D7               	clrf	__ISR@comm_error_count^(0+128)
  5888  0048  01D8               	clrf	(__ISR@comm_error_count+1)^(0+128)
  5889  0049                     i1l2851:	
  5890                           
  5891                           ;newmain.c: 412: }
  5892                           ;newmain.c: 414: }
  5893                           ;newmain.c: 415: uint8_t sum;
  5894                           ;newmain.c: 416: if(RCIE && RCIF){
  5895  0049  0021               	movlb	1	; select bank1
  5896  004A  1E91               	btfss	17,5	;volatile
  5897  004B  289C               	goto	i1l445
  5898  004C  0020               	movlb	0	; select bank0
  5899  004D  1E91               	btfss	17,5	;volatile
  5900  004E  289C               	goto	i1l445
  5901                           
  5902                           ;newmain.c: 417: RCIF = 0;
  5903  004F  1291               	bcf	17,5	;volatile
  5904                           
  5905                           ;newmain.c: 419: switch(rcmode){
  5906  0050  2894               	goto	i1l2885
  5907  0051                     i1l2857:	
  5908                           ;newmain.c: 420: case KEY:
  5909                           
  5910                           
  5911                           ;newmain.c: 421: key = RCREG;
  5912  0051  0023               	movlb	3	; select bank3
  5913  0052  0819               	movf	25,w	;volatile
  5914  0053  00F1               	movwf	??__ISR
  5915  0054  0871               	movf	??__ISR,w
  5916  0055  0020               	movlb	0	; select bank0
  5917  0056  00CB               	movwf	_key
  5918                           
  5919                           ;newmain.c: 422: putc_UART(key);
  5920  0057  084B               	movf	_key,w
  5921  0058  318E  26B5  3180   	fcall	i1_putc_UART
  5922                           
  5923                           ;newmain.c: 424: break;
  5924  005B  289C               	goto	i1l445
  5925  005C                     i1l2861:	
  5926                           ;newmain.c: 425: case COMM:
  5927                           
  5928                           
  5929                           ;newmain.c: 426: if(rc_complete == 0){
  5930  005C  0020               	movlb	0	; select bank0
  5931  005D  084C               	movf	_rc_complete,w
  5932  005E  1D03               	btfss	3,2
  5933  005F  289C               	goto	i1l445
  5934                           
  5935                           ;newmain.c: 427: rc_busy = 1;
  5936  0060  01C8               	clrf	__ISR@rc_busy
  5937  0061  0AC8               	incf	__ISR@rc_busy,f
  5938                           
  5939                           ;newmain.c: 428: rcbuff[rc_count] = RCREG;
  5940  0062  0023               	movlb	3	; select bank3
  5941  0063  0819               	movf	25,w	;volatile
  5942  0064  00F1               	movwf	??__ISR
  5943  0065  0878               	movf	__ISR@rc_count,w
  5944  0066  3EDD               	addlw	(low (_rcbuff| 0))& (0+255)
  5945  0067  0086               	movwf	6
  5946  0068  0187               	clrf	7
  5947  0069  0871               	movf	??__ISR,w
  5948  006A  0081               	movwf	1
  5949                           
  5950                           ;newmain.c: 429: if(rc_count < (2-1)){
  5951  006B  0878               	movf	__ISR@rc_count,w
  5952  006C  1D03               	btfss	3,2
  5953  006D  2872               	goto	i1l451
  5954                           
  5955                           ;newmain.c: 430: sum+=RCREG;
  5956  006E  0819               	movf	25,w	;volatile
  5957  006F  00F1               	movwf	??__ISR
  5958  0070  0871               	movf	??__ISR,w
  5959  0071  07F3               	addwf	__ISR@sum,f
  5960  0072                     i1l451:	
  5961                           
  5962                           ;newmain.c: 431: }
  5963                           ;newmain.c: 432: rc_count++;
  5964  0072  3001               	movlw	1
  5965  0073  00F1               	movwf	??__ISR
  5966  0074  0871               	movf	??__ISR,w
  5967  0075  07F8               	addwf	__ISR@rc_count,f
  5968                           
  5969                           ;newmain.c: 434: if(rc_count >= 2){
  5970  0076  3002               	movlw	2
  5971  0077  0278               	subwf	__ISR@rc_count,w
  5972  0078  1C03               	skipc
  5973  0079  289C               	goto	i1l445
  5974                           
  5975                           ;newmain.c: 435: rc_count = 0;
  5976  007A  01F8               	clrf	__ISR@rc_count
  5977                           
  5978                           ;newmain.c: 436: rc_busy = 0;
  5979  007B  0020               	movlb	0	; select bank0
  5980  007C  01C8               	clrf	__ISR@rc_busy
  5981                           
  5982                           ;newmain.c: 437: rc_t_count = 0;
  5983  007D  01C9               	clrf	__ISR@rc_t_count
  5984                           
  5985                           ;newmain.c: 438: if(sum == rcbuff[2-1]){
  5986  007E  0021               	movlb	1	; select bank1
  5987  007F  085E               	movf	(_rcbuff^(0+128)+1),w
  5988  0080  0673               	xorwf	__ISR@sum,w
  5989  0081  1D03               	skipz
  5990  0082  288C               	goto	i1l2879
  5991                           
  5992                           ;newmain.c: 439: rc_complete = 1;
  5993  0083  0020               	movlb	0	; select bank0
  5994  0084  01CC               	clrf	_rc_complete
  5995  0085  0ACC               	incf	_rc_complete,f
  5996                           
  5997                           ;newmain.c: 440: LATA2 =1;
  5998  0086  0022               	movlb	2	; select bank2
  5999  0087  150C               	bsf	12,2	;volatile
  6000                           
  6001                           ;newmain.c: 441: rc_success = 1;
  6002  0088  0020               	movlb	0	; select bank0
  6003  0089  01CD               	clrf	_rc_success
  6004  008A  0ACD               	incf	_rc_success,f
  6005                           
  6006                           ;newmain.c: 442: }
  6007  008B  2892               	goto	i1l454
  6008  008C                     i1l2879:	
  6009                           
  6010                           ;newmain.c: 443: else{
  6011                           ;newmain.c: 444: rc_complete = 0;
  6012  008C  0020               	movlb	0	; select bank0
  6013  008D  01CC               	clrf	_rc_complete
  6014                           
  6015                           ;newmain.c: 445: LATA2 =0;
  6016  008E  0022               	movlb	2	; select bank2
  6017  008F  110C               	bcf	12,2	;volatile
  6018                           
  6019                           ;newmain.c: 446: rc_success = 0;
  6020  0090  0020               	movlb	0	; select bank0
  6021  0091  01CD               	clrf	_rc_success
  6022  0092                     i1l454:	
  6023                           
  6024                           ;newmain.c: 447: }
  6025                           ;newmain.c: 448: sum = 0;
  6026  0092  01F3               	clrf	__ISR@sum
  6027                           
  6028                           ;newmain.c: 453: }
  6029                           
  6030                           ;newmain.c: 450: }
  6031                           ;newmain.c: 451: }
  6032                           ;newmain.c: 452: break;
  6033  0093  289C               	goto	i1l445
  6034  0094                     i1l2885:	
  6035  0094  0879               	movf	_rcmode,w
  6036                           
  6037                           ; Switch size 1, requested type "space"
  6038                           ; Number of cases is 2, Range of values is 0 to 1
  6039                           ; switch strategies available:
  6040                           ; Name         Instructions Cycles
  6041                           ; simple_byte            7     4 (average)
  6042                           ; direct_byte           10     6 (fixed)
  6043                           ; jumptable            260     6 (fixed)
  6044                           ;	Chosen strategy is simple_byte
  6045  0095  3A00               	xorlw	0	; case 0
  6046  0096  1903               	skipnz
  6047  0097  2851               	goto	i1l2857
  6048  0098  3A01               	xorlw	1	; case 1
  6049  0099  1903               	skipnz
  6050  009A  285C               	goto	i1l2861
  6051  009B  289C               	goto	i1l445
  6052  009C                     i1l445:	
  6053                           
  6054                           ;newmain.c: 455: }
  6055                           ;newmain.c: 456: if(TXIE && TXIF){
  6056  009C  0021               	movlb	1	; select bank1
  6057  009D  1E11               	btfss	17,4	;volatile
  6058  009E  28BC               	goto	i1l455
  6059  009F  0020               	movlb	0	; select bank0
  6060  00A0  1E11               	btfss	17,4	;volatile
  6061  00A1  28BC               	goto	i1l455
  6062                           
  6063                           ;newmain.c: 461: TXREG = u1txbuff.txdata[u1txbuff.head];
  6064  00A2  0022               	movlb	2	; select bank2
  6065  00A3  0852               	movf	(_u1txbuff^(0+256)+50),w
  6066  00A4  3E20               	addlw	(low (_u1txbuff| (0+256)))& (0+255)
  6067  00A5  0086               	movwf	6
  6068  00A6  3001               	movlw	1	; select bank2/3
  6069  00A7  0087               	movwf	7
  6070  00A8  0801               	movf	1,w
  6071  00A9  0023               	movlb	3	; select bank3
  6072  00AA  009A               	movwf	26	;volatile
  6073                           
  6074                           ;newmain.c: 462: u1txbuff.head++;
  6075  00AB  3001               	movlw	1
  6076  00AC  00F1               	movwf	??__ISR
  6077  00AD  0871               	movf	??__ISR,w
  6078  00AE  0022               	movlb	2	; select bank2
  6079  00AF  07D2               	addwf	(_u1txbuff^(0+256)+50),f
  6080                           
  6081                           ;newmain.c: 463: if(u1txbuff.head >= 50){
  6082  00B0  3032               	movlw	50
  6083  00B1  0252               	subwf	(_u1txbuff^(0+256)+50),w
  6084  00B2  1803               	btfsc	3,0
  6085                           
  6086                           ;newmain.c: 464: u1txbuff.head = 0;
  6087  00B3  01D2               	clrf	(_u1txbuff^(0+256)+50)
  6088                           
  6089                           ;newmain.c: 465: }
  6090                           ;newmain.c: 466: if(u1txbuff.end == u1txbuff.head || u1txbuff.end == 0){
  6091  00B4  0853               	movf	(_u1txbuff^(0+256)+51),w
  6092  00B5  0652               	xorwf	(_u1txbuff^(0+256)+50),w
  6093  00B6  1D03               	btfss	3,2
  6094  00B7  0853               	movf	(_u1txbuff^(0+256)+51),w
  6095  00B8  1D03               	btfss	3,2
  6096  00B9  28BC               	goto	i1l455
  6097                           
  6098                           ;newmain.c: 467: TXIE = 0;
  6099  00BA  0021               	movlb	1	; select bank1
  6100  00BB  1211               	bcf	17,4	;volatile
  6101  00BC                     i1l455:	
  6102                           
  6103                           ;newmain.c: 471: }
  6104                           ;newmain.c: 479: }
  6105                           ;newmain.c: 480: if(IOCIE && IOCIF){
  6106  00BC  198B               	btfsc	11,3	;volatile
  6107  00BD  1C0B               	btfss	11,0	;volatile
  6108  00BE  28C0               	goto	i1l461
  6109                           
  6110                           ;newmain.c: 481: IOCIF = 0;
  6111  00BF  100B               	bcf	11,0	;volatile
  6112  00C0                     i1l461:	
  6113  00C0  0872               	movf	??__ISR+1,w
  6114  00C1  0020               	movlb	0	; select bank0
  6115  00C2  00FF               	movwf	127
  6116  00C3  0009               	retfie
  6117  00C4                     __end_of__ISR:	
  6118                           
  6119                           	psect	text24
  6120  0EB5                     __ptext24:	
  6121 ;; *************** function i1_putc_UART *****************
  6122 ;; Defined at:
  6123 ;;		line 59 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\uart_16f182
      +7.c"
  6124 ;; Parameters:    Size  Location     Type
  6125 ;;  data            1    wreg     unsigned char 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  data            1    0[COMMON] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;		None               void
  6130 ;; Registers used:
  6131 ;;		wreg
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6137 ;;      Params:         0       0       0       0       0       0
  6138 ;;      Locals:         1       0       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0       0
  6140 ;;      Totals:         1       0       0       0       0       0
  6141 ;;Total ram usage:        1 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; This function calls:
  6144 ;;		Nothing
  6145 ;; This function is called by:
  6146 ;;		__ISR
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           
  6151                           ;psect for function i1_putc_UART
  6152  0EB5                     i1_putc_UART:	
  6153                           
  6154                           ;incstack = 0
  6155                           ; Regs used in i1_putc_UART: [wreg]
  6156                           ;i1putc_UART@data stored from wreg
  6157  0EB5  00F0               	movwf	i1putc_UART@data
  6158                           
  6159                           ;uart_16f1827.c: 61: TXIE = 0;
  6160  0EB6  0021               	movlb	1	; select bank1
  6161  0EB7  1211               	bcf	17,4	;volatile
  6162  0EB8                     i1l559:	
  6163                           ;uart_16f1827.c: 63: while(!TXIF);
  6164                           
  6165  0EB8  0020               	movlb	0	; select bank0
  6166  0EB9  1E11               	btfss	17,4	;volatile
  6167  0EBA  2EB8               	goto	i1l559
  6168                           
  6169                           ;uart_16f1827.c: 65: TXREG = data;
  6170  0EBB  0870               	movf	i1putc_UART@data,w
  6171  0EBC  0023               	movlb	3	; select bank3
  6172  0EBD  009A               	movwf	26	;volatile
  6173  0EBE  0008               	return
  6174  0EBF                     __end_ofi1_putc_UART:	
  6175                           
  6176                           	psect	text25
  6177  0E99                     __ptext25:	
  6178 ;; *************** function _roop_manager *****************
  6179 ;; Defined at:
  6180 ;;		line 499 in file "D:\Users\Yosuke\Videos\Users\Yosuke\Documents\MPLAB 8 Projects\boost_con_2016-07-24\src\newmain.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      unsigned char 
  6187 ;; Registers used:
  6188 ;;		wreg, status,2, status,0
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6194 ;;      Params:         0       0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0
  6196 ;;      Temps:          0       0       0       0       0       0
  6197 ;;      Totals:         0       0       0       0       0       0
  6198 ;;Total ram usage:        0 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; This function calls:
  6201 ;;		Nothing
  6202 ;; This function is called by:
  6203 ;;		__ISR
  6204 ;; This function uses a non-reentrant model
  6205 ;;
  6206                           
  6207                           
  6208                           ;psect for function _roop_manager
  6209  0E99                     _roop_manager:	
  6210                           
  6211                           ;newmain.c: 500: roop_f = 1;
  6212                           
  6213                           ;incstack = 0
  6214                           ; Regs used in _roop_manager: [wreg+status,2+status,0]
  6215  0E99  0020               	movlb	0	; select bank0
  6216  0E9A  01CE               	clrf	_roop_f
  6217  0E9B  0ACE               	incf	_roop_f,f
  6218                           
  6219                           ;newmain.c: 508: else{
  6220                           ;newmain.c: 511: return 0;
  6221                           ;	Return value of _roop_manager is never used
  6222                           
  6223                           ;newmain.c: 507: }
  6224                           
  6225                           ;newmain.c: 506: return 1;
  6226                           ;	Return value of _roop_manager is never used
  6227  0E9C  0008               	return
  6228  0E9D                     __end_of_roop_manager:	
  6229  007E                     btemp	set	126	;btemp
  6230  007E                     wtemp	set	126
  6231  007E                     wtemp0	set	126
  6232  0080                     wtemp1	set	128
  6233  0082                     wtemp2	set	130
  6234  0084                     wtemp3	set	132
  6235  0086                     wtemp4	set	134
  6236  0088                     wtemp5	set	136
  6237  007F                     wtemp6	set	127
  6238  007E                     ttemp	set	126
  6239  007E                     ttemp0	set	126
  6240  0081                     ttemp1	set	129
  6241  0084                     ttemp2	set	132
  6242  0087                     ttemp3	set	135
  6243  007F                     ttemp4	set	127
  6244  007E                     ltemp	set	126
  6245  007E                     ltemp0	set	126
  6246  0082                     ltemp1	set	130
  6247  0086                     ltemp2	set	134
  6248  0080                     ltemp3	set	128


Data Sizes:
    Strings     59
    Constant    0
    Data        5
    BSS         93
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     40      51
    BANK1            80     32      63
    BANK2            80      0      52
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    puts_UARTb@str	PTR unsigned char  size(2) Largest target is 36
		 -> STR_7(CODE[3]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[36]), 

    puts_UART@str	PTR unsigned char  size(2) Largest target is 19
		 -> STR_8(CODE[19]), 

    eccp_config_param_init@eccp_config	PTR struct _eccp_config_st size(1) Largest target is 3
		 -> Init@eccp_config(BANK0[3]), 

    ECCP2_Init@eccp_config	PTR struct _eccp_config_st size(1) Largest target is 3
		 -> Init@eccp_config(BANK0[3]), 

    ECCP1_Init@eccp_config	PTR struct _eccp_config_st size(1) Largest target is 3
		 -> Init@eccp_config(BANK0[3]), 


Critical Paths under _main in COMMON

    _main->_Get_AD_data
    _stop_PWM->_set_PWM_duty
    _set_halfbridge_duty->_set_PWM_duty
    _putdec_UARTb->___wmul
    _set_data_buff->_puts_UART
    _puts_UART->_putc_UART
    _Init->_TMR4_Interrupt_set
    _Init->_eccp_config_param_init
    _ECCP2_Init->_set_PWM_duty
    _ECCP1_Init->_set_PWM_duty

Critical Paths under __ISR in COMMON

    __ISR->i1_putc_UART

Critical Paths under _main in BANK0

    _main->_set_halfbridge_duty
    _stop_PWM->_set_PWM_duty
    _set_halfbridge_duty->_set_PWM_duty
    _puts_UARTb->_set_data_buff
    _putdec_UARTb->___awdiv
    _set_data_buff->_puts_UART
    _Init->_ECCP1_Init
    _Init->_ECCP2_Init
    _ECCP2_Init->_set_PWM_duty
    _ECCP1_Init->_set_PWM_duty

Critical Paths under __ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under __ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under __ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under __ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under __ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   12139
                                             37 BANK0      3     3      0
                                              0 BANK1     32    32      0
                        _Get_AD_data
                               _Init
                          _putc_UART
                       _putdec_UARTb
                         _puts_UARTb
                _set_halfbridge_duty
                           _stop_PWM
                        _system_halt
 ---------------------------------------------------------------------------------
 (1) _system_halt                                          0     0      0       0
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _stop_PWM                                             0     0      0    1179
                       _set_PWM_duty
 ---------------------------------------------------------------------------------
 (1) _set_halfbridge_duty                                 30    28      2    2614
                                              7 BANK0     30    28      2
                       _set_PWM_duty
 ---------------------------------------------------------------------------------
 (1) _puts_UARTb                                           3     1      2     842
                                              5 BANK0      3     1      2
                      _set_data_buff
 ---------------------------------------------------------------------------------
 (1) _putdec_UARTb                                        17    15      2    3071
                                              8 BANK0     17    15      2
                            ___awdiv
                            ___awmod
                             ___wmul
                      _set_data_buff
 ---------------------------------------------------------------------------------
 (2) _set_data_buff                                        2     2      0     238
                                              3 BANK0      2     2      0
                          _puts_UART
 ---------------------------------------------------------------------------------
 (3) _puts_UART                                            4     2      2     207
                                              5 COMMON     1     1      0
                                              0 BANK0      3     1      2
                          _putc_UART
 ---------------------------------------------------------------------------------
 (4) _putc_UART                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     444
                                              4 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     741
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     753
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Init                                                 4     4      0    3000
                                              9 BANK0      4     4      0
                            _AD_Init
                         _ECCP1_Init
                         _ECCP2_Init
                 _TMR4_Interrupt_set
                          _UART_Init
             _eccp_config_param_init
                          _tmr0_Init
 ---------------------------------------------------------------------------------
 (2) _tmr0_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _eccp_config_param_init                               2     2      0     135
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Interrupt_set                                   2     2      0      31
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ECCP2_Init                                           2     2      0    1314
                                              7 BANK0      2     2      0
                       _set_PWM_duty
 ---------------------------------------------------------------------------------
 (2) _ECCP1_Init                                           2     2      0    1314
                                              7 BANK0      2     2      0
                       _set_PWM_duty
 ---------------------------------------------------------------------------------
 (2) _set_PWM_duty                                         9     7      2    1179
                                              4 COMMON     2     0      2
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _AD_Init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_AD_data                                          8     6      2      68
                                              4 COMMON     2     0      2
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) __ISR                                                 3     3      0      46
                                              1 COMMON     3     3      0
                       _roop_manager
                        i1_putc_UART
 ---------------------------------------------------------------------------------
 (6) i1_putc_UART                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _roop_manager                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Get_AD_data
   _Init
     _AD_Init
     _ECCP1_Init
       _set_PWM_duty
     _ECCP2_Init
       _set_PWM_duty
     _TMR4_Interrupt_set
     _UART_Init
     _eccp_config_param_init
     _tmr0_Init
   _putc_UART
   _putdec_UARTb
     ___awdiv
     ___awmod
     ___wmul
     _set_data_buff
       _puts_UART
         _putc_UART
   _puts_UARTb
     _set_data_buff
       _puts_UART
         _putc_UART
   _set_halfbridge_duty
     _set_PWM_duty
   _stop_PWM
     _set_PWM_duty
   _system_halt
     _ioc_init

 __ISR (ROOT)
   _roop_manager
   i1_putc_UART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      B0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     28      33       6       63.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     20      3F       8       78.8%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      34      10       65.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      B0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Sun Jul 24 18:37:26 2016

              __end_of_Get_AD_data 0FBF       __size_of_set_halfbridge_duty 01BE  
                                pc 0002                       _roop_manager 0E99  
                      __CFG_CP$OFF 0000                                 l16 0FA4  
                               l33 03F0                                 l37 0416  
                     ___awdiv@sign 0025                __end_ofi1_putc_UART 0EBF  
              ___wmul@multiplicand 0022                __size_of_ECCP1_Init 0045  
              __size_of_ECCP2_Init 0046                __end_of_system_halt 0EF0  
                     _putdec_UARTb 063A                                l200 05D3  
                              l401 02FD                                l180 078E  
                              l405 0329                                l174 07D3  
                              l192 05D7                                l353 01A8  
                              l196 05AE                                l380 0283  
                              l375 0240                                l393 02CE  
                              l379 025C                                l573 0F2B  
                              l389 02A2                                l590 06B1  
                              l559 0EC2                                l567 0F87  
                              l687 0F37                                _GIE 005F  
                              _PR4 0416                       __CFG_CPD$OFF 0000  
                              _PSA 04AB                                _TX9 0CF6  
                              _key 004B                       ___awmod@sign 0025  
                     __CFG_BORV$LO 0000                                wreg 0009  
                     __CFG_IESO$ON 0000                    __end_of_AD_Init 0ED4  
                             S3853 083B                       __CFG_LVP$OFF 0000  
                             l3021 05BC                               l3041 060F  
                             l3025 05CE                               l3017 05A9  
                             l3051 0635                               l3211 06BF  
                             l3029 05E5                               l3061 0F70  
                             l3039 060A                               l3303 03FF  
                             l3217 06CA                               l3321 0499  
                             l3313 044E                               l3243 0701  
                             l3235 06F0                               l3227 06D2  
                             l3331 04CE                               l3323 04A2  
                             l3307 0411                               l3229 06DE  
                             l3341 050C                               l3317 0464  
                             l3309 041A                               l3239 06F9  
                             l3255 0711                               l3191 0F30  
                             l3335 04E4                               l3343 0516  
                             l3281 0747                               l3273 0736  
                             l3417 0F14                               l3353 054E  
                             l3361 057F                               l3601 01A4  
                             l3267 071E                               l3259 0718  
                             l3451 0699                               l3339 0503  
                             l3611 01B4                               l3603 01A6  
                             l3269 072A                               l3277 073F  
                             l3357 056D                               l3349 0538  
                             l3701 032D                               l3621 01D6  
                             l3613 01C2                               l3605 01AA  
                             l3439 0662                               l3359 0576  
                             l3711 035E                               l3631 020B  
                             l3457 06A1                               l3449 066A  
                             l3721 03BA                               l3713 036A  
                             l3641 0230                               l3617 01CA  
                             l3625 01DC                               l3299 03EB  
                             l3715 037E                               l3707 034A  
                             l3731 03D5                               l3635 021A  
                             l3619 01D0                               l3627 0203  
                             l3563 0131                               l3555 0120  
                             l3725 03C3                               l3717 0392  
                             l3709 0355                               l3653 0258  
                             l3645 023C                               l3565 013C  
                             l3719 03A6                               l3671 028A  
                             l3655 0260                               l3639 021D  
                             l3583 0180                               l3729 03C6  
                             l3649 024C                               l3577 016C  
                             l3851 03CB                               l3691 02F8  
                             l3683 02C9                               l3675 029D  
                             l3587 0186                               l3685 02D2  
                             l3597 01A0                               l3695 0310  
                             l3679 02B5                               l3599 01A2  
                             l3849 0222                               l3699 0324  
            ECCP2_Init@eccp_config 0028                               STR_1 0800  
                             STR_2 0839                               STR_3 0837  
                             STR_4 0837                               STR_5 0837  
                             STR_6 0837                               STR_7 0834  
                             STR_8 0824                               _BRGH 0CF2  
                             _CREN 0CEC                               u3005 04DC  
                             _LATA 010C                               _LATB 010D  
                             u3015 04F7                               u3035 052C  
                             u3045 0546                               u3070 0647  
                             u3055 0561                               u2620 0F8C  
                             u3405 02C1                               u2535 05A1  
                             u3415 02F0                               u3335 0215  
                             u2545 05B7                               u2705 0F3D  
                             u3425 0308                               u2555 05C6  
                             u3435 031C                               u2565 05E1  
                             u3385 0295                               u3547 0FA0  
                             u2755 06D5                               u3395 02AD  
                             _PEIE 005E                               u2925 03E3  
                             u2775 06DF                               u2855 0721  
                             u2695 0F38                               u2935 03F9  
                             u2785 06E9                               u2945 0409  
                             u2795 06F1                               u2875 0730  
                             u2955 0437                               _RCIE 048D  
                             _RCIF 008D                               u2885 0737  
                             u2965 045C                               u2975 0482  
                             u2995 04C2                               _TMR0 0015  
                             _SPEN 0CEF                               _TXIE 048C  
                             _TXEN 0CF5                               _TXIF 008C  
                             _SYNC 0CF4                               __ISR 0004  
                             _Init 0FBF                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000                               _main 00F7  
                             _busy 004A                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                             ltemp 007E                               start 00C4  
            set_halfbridge_duty@id 0044                               ttemp 007E  
                             wtemp 007E                         __ISR@count 00D9  
                    __CFG_PLLEN$ON 0000                              ?__ISR 0070  
                            ?_Init 0070            set_motor_power@power_dd 0076  
                            ?_main 0070                    __end_of___awdiv 0706  
                            _BRG16 0CFB                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 074C                    ___awdiv@divisor 0020  
                            _LATA2 0862                              _LATA3 0863  
                            _IOCBN 0395                              _IOCBP 0394  
                            _IOCIE 005B                              _IOCIF 0058  
                            i1l451 0072                              i1l461 00C0  
                            i1l445 009C                              i1l454 0092  
                            i1l455 00BC                              i1l559 0EB8  
                  ___awdiv@counter 0024                              _RCREG 0199  
                            _SENDB 0CF3                              _TRISA 008C  
                            _TRISB 008D                              _TXREG 019A  
                    __CFG_PWRTE$ON 0000                 __size_of_UART_Init 001E  
                            main@i 00B6                     __CFG_BOREN$OFF 0000  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                        _Get_AD_data 0F8F  
                      i1_putc_UART 0EB5                     __CFG_MCLRE$OFF 0000  
                     __end_of__ISR 00C4                    __initialization 00C6  
                     __end_of_Init 1000                        _system_halt 0EE2  
                     __end_of_main 03D8  eccp_config_param_init@eccp_config 0075  
                           ??__ISR 0071                             ??_Init 0029  
                           ??_main 0045                          ??_AD_Init 0074  
                    putc_UART@data 0074                             _ADRESH 009C  
                           _ADRESL 009B                             _CCPR1L 0291  
                           _CCPR2L 0298                   ___awdiv@dividend 0022  
                     ??_ECCP1_Init 0027                       ??_ECCP2_Init 0027  
                           _ANSELA 018C                             i1l2823 000E  
            __ISR@comm_error_count 00D7                             i1l2843 0034  
                           i1l2835 0026                             i1l2851 0049  
                           i1l2861 005C                             i1l2857 0051  
                           i1l2849 0046                             i1l2885 0094  
                           i1l2879 008C               putdec_UARTb@dec_buff 002B  
                           _TMR0IE 005D                             _TMR0IF 005A  
                           _TMR0CS 04AD                             _TMR1IE 0488  
                           _TMR4IE 0499                             _TMR4IF 0099  
                           _SPBRGH 019C                             _SPBRGL 019B  
                           _TRISB3 046B                             _TRISA6 0466  
                           _TRISB5 046D                             _TRISA7 0467  
                __end_of_UART_Init 0F68                             ___wmul 0F2E  
                        ??___awdiv 0074                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                   __end_of_ioc_init 0EA6  
                           _rcbuff 00DD                   ___awdiv@quotient 0026  
                           _rcmode 0079                    ___awmod@divisor 0020  
                  ___awmod@counter 0024                 __end_of_ECCP1_Init 07D7  
                           _roop_f 004E                 __end_of_ECCP2_Init 0792  
                           _txdata 00D4                             _output 00DB  
                     puts_UART@str 0020              __end_of_set_data_buff 07FF  
                    main@power1_dd 00A0                      main@power2_dd 00A2  
                     __pdataCOMMON 0079                _set_halfbridge_duty 03D8  
                 __end_of_stop_PWM 0EE2                  main@input_voltage 00B4  
          __end_of__initialization 00F4                     __pcstackCOMMON 0070  
                     __pidataBANK0 0E9D               ?_set_halfbridge_duty 0027  
                   _OPTION_REGbits 0095                       __ISR@rc_busy 0048  
      __size_of_TMR4_Interrupt_set 000F                      ?_set_PWM_duty 0074  
                       __pbssBANK0 0048                         __pbssBANK1 00C0  
                       __pbssBANK2 0120                    i1putc_UART@data 0070  
         ??_eccp_config_param_init 0074                         __pmaintext 00F7  
            ??_set_halfbridge_duty 0029                            ?___wmul 0020  
               __size_of_tmr0_Init 0009                         __pintentry 0004  
                   main@boost_duty 00BE                      putdec_UARTb@i 0037  
                          _AD_Init 0EC9                 __size_of_putc_UART 000A  
                  __ISR@rc_t_count 0049                     ??_set_PWM_duty 0020  
               __size_of_puts_UART 0027                          ?_ioc_init 0070  
                 _set_PWM_duty$524 0022                   _set_PWM_duty$525 0024  
                     ?_Get_AD_data 0074                       ?i1_putc_UART 0070  
                     ?_system_halt 0070        set_halfbridge_duty@power_dd 004F  
                          ___awdiv 06B4                            ___awmod 0706  
                  __size_of___wmul 001C                    putdec_UARTb@dec 0028  
                  putdec_UARTb@cnt 0035                          ?_stop_PWM 0070  
                          __ptext1 0EE2                            __ptext2 0EA1  
                          __ptext3 0ED4                            __ptext4 03D8  
                          __ptext5 0F14                            __ptext6 063A  
                          __ptext7 07D7                            __ptext8 0F68  
                          __ptext9 0EBF                          _T1CONbits 0018  
                 ___awmod@dividend 0022                         _rc_success 004D  
                        _T4CONbits 0417                            main@cnt 00B0  
                          clrloop0 0EA7                  __end_of_tmr0_Init 0EB5  
                    puts_UART@txie 0022               end_of_initialization 00F4  
                    puts_UARTb@str 0025                         ??_ioc_init 0074  
  __size_of_eccp_config_param_init 0015                  __end_of_putc_UART 0EC9  
                     __pstringtext 0800                  __end_of_puts_UART 0F8F  
                   Get_AD_data@chs 0023                         ??_stop_PWM 0076  
                        _UART_Init 0F4A           set_halfbridge_duty@power 0027  
                 __CFG_FOSC$INTOSC 0000                          _TRISAbits 008C  
                        _TRISBbits 008D                  set_data_buff@data 0024  
                       _puts_UARTb 0F14                        _CCP1CONbits 0293  
                      _CCP2CONbits 029A                         main@power1 00BA  
                       main@power2 00BC                      ?_roop_manager 0070  
             __end_of_set_PWM_duty 063A                     __end_of___wmul 0F4A  
                       ?_UART_Init 0070                      __pidataCOMMON 07FF  
                    ?_putdec_UARTb 0028             _eccp_config_param_init 0EFF  
              start_initialization 00C6                      __ISR@rc_count 0078  
           __size_of_set_data_buff 0028                        _APFCON0bits 011D  
                      _APFCON1bits 011E               __size_of_Get_AD_data 0030  
                   ??_roop_manager 0070                           ??___wmul 0074  
             __size_ofi1_putc_UART 000A                        _CCPTMRSbits 029E  
                      __pdataBANK0 004F               __size_of_system_halt 000E  
                   ??_putdec_UARTb 002A                           ?_AD_Init 0070  
       __end_of_TMR4_Interrupt_set 0EFF                  putdec_UARTb@F2797 00CA  
                      __pbssCOMMON 0076                          ___latbits 0001  
                    __pcstackBANK0 0020                      __pcstackBANK1 00A0  
                      ?_puts_UARTb 0025        __end_of_set_halfbridge_duty 0596  
                __size_of_ioc_init 0005                           ?___awdiv 0020  
                         ?___awmod 0020                        ??_UART_Init 0074  
                        __pswtext1 083B                  __size_of_stop_PWM 000E  
                    _set_data_buff 07D7                     ___wmul@product 0074  
                        _tmr0_Init 0EAC                          clear_ram0 0EA6  
            __size_of_set_PWM_duty 00A4                     set_PWM_duty@id 0026  
                        _putc_UART 0EBF                __size_of_puts_UARTb 001A  
                       _ADCON0bits 009D                         _ADCON1bits 009E  
                ___wmul@multiplier 0020                          _puts_UART 0F68  
                   ?_set_data_buff 0070                   __size_of_AD_Init 000B  
                       _CCP1ASbits 0295                         _CCP2ASbits 029C  
                         __ISR@sum 0073               __end_of_roop_manager 0E9D  
                     _set_PWM_duty 0596                         _ECCP1_Init 0792  
                       _ECCP2_Init 074C               __end_of_putdec_UARTb 06B4  
                       ?_tmr0_Init 0070                   putdec_UART@F2803 00C0  
                 __size_of___awdiv 0052                   __size_of___awmod 0046  
                       ?_putc_UART 0070            ?_eccp_config_param_init 0070  
                       _ANSELAbits 018C                         _ANSELBbits 018D  
                         _u1txbuff 0120                         ?_puts_UART 0020  
          _set_halfbridge_duty$130 0034                        _rc_complete 004C  
          _set_halfbridge_duty$131 0036            _set_halfbridge_duty$132 0038  
          _set_halfbridge_duty$133 003A            _set_halfbridge_duty$134 003C  
          _set_halfbridge_duty$135 003E            _set_halfbridge_duty$127 002E  
          _set_halfbridge_duty$136 0040            _set_halfbridge_duty$128 0030  
          _set_halfbridge_duty$137 0042            _set_halfbridge_duty$129 0032  
                         _main$770 00AC                           _main$771 00AE  
                         _main$765 00A4                           _main$766 00A6  
                         _main$767 00A8                           _main$768 00AA  
                         __ptext10 0F2E                           __ptext11 0706  
                         __ptext20 0596                           __ptext12 06B4  
                         __ptext21 0EC9                           __ptext13 0FBF  
                       _T1GCONbits 0019                           __ptext22 0F8F  
                         __ptext14 0EAC                           __ptext15 0EFF  
                         __ptext24 0EB5                           __ptext16 0F4A  
                         __ptext25 0E99                           __ptext17 0EF0  
                         __ptext18 074C                           __ptext19 0792  
                         _ioc_init 0EA1                      __size_of__ISR 00C0  
                    __size_of_Init 0041                      __size_of_main 02E1  
   __end_of_eccp_config_param_init 0F14              ECCP1_Init@eccp_config 0028  
                         _stop_PWM 0ED4                           main@mode 00B8  
                  ??_set_data_buff 0023                 main@output_voltage 00B2  
                      _OSCTUNEbits 0098                         _INTCONbits 000B  
                      _PWM1CONbits 0294                        _PWM2CONbits 029B  
                     ??_puts_UARTb 0027                        ?_ECCP1_Init 0070  
                      ?_ECCP2_Init 0070                           intlevel1 0000  
                    ??_Get_AD_data 0020                 _TMR4_Interrupt_set 0EF0  
                      ??_tmr0_Init 0074                  __CFG_CLKOUTEN$OFF 0000  
             TMR4_Interrupt_set@ps 0075                      ??i1_putc_UART 0070  
                       _OSCCONbits 0099                      ??_system_halt 0074  
              ?_TMR4_Interrupt_set 0070                        ??_putc_UART 0074  
                 set_PWM_duty@duty 0074                 __end_of_puts_UARTb 0F2E  
                      ??_puts_UART 0075                    Get_AD_data@data 0024  
            __size_of_roop_manager 0004               ??_TMR4_Interrupt_set 0074  
            __size_of_putdec_UARTb 007A                    Init@eccp_config 002A  
